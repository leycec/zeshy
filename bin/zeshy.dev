#!/usr/bin/env zsh
# ====================[ zeshy.dev                          ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Run Zeshy from an in-development "git" rather than installed directory tree.
# This script sets ${ZESHY_HOME} to conform to "git" directory tree structure
# and otherwise operates similar to the main "zeshy" command.

# ....................{ PATHS                              }....................
# Absolute path of the this script. Since the following erroneously interprets a
# trailing "(:A)" as a literal string rather than shell word modifier, embed the
# trailing "(:A)" in a command substitution: e.g.,
#
#     # This utterly fails. (Thanks, Zsh.)
#     >>> ZESHY_FILENAME_CURRENT="${0}"(:A) && print ${ZESHY_FILENAME_CURRENT}
#     /usr/bin/zeshy(:A)   # wooops
local ZESHY_FILENAME_CURRENT; ZESHY_FILENAME_CURRENT="$(print -- "${0}"(:A))"
#print "ZESHY_FILENAME_CURRENT: ${ZESHY_FILENAME_CURRENT}"
#x="$(print -- "${y}"(:A))"

# Absolute path of the directory containing this script.
local ZESHY_COMMAND_DIR="${ZESHY_FILENAME_CURRENT:h}"

# Absolute path of the main Zeshy command.
local ZESHY_FILENAME="${ZESHY_COMMAND_DIR}/zeshy"

# Absolute path of the main Zeshy overlay.
export ZESHY_HOME; ZESHY_HOME="$(print -- "${ZESHY_COMMAND_DIR}/../src"(:A))"
#print "ZESHY_HOME: ${ZESHY_HOME}"

# If either such path is not found, fail with error.
[[ -f "${ZESHY_FILENAME}" ]] || {
    print "zeshy: \"${ZESHY_FILENAME}\" not found" 1>&2
    exit 1
}

# ....................{ MAIN                               }....................
# Run the passed Zeshy command line or shell script.
source "${ZESHY_FILENAME}" "${@}"

# --------------------( WASTELANDS                         )--------------------
#local ZESHY_FILENAME_CURRENT; ZESHY_FILENAME_CURRENT="${0}"(:A)
#print "ZESHY_HOME: ${ZESHY_HOME}"
#local ZESHY_COMMAND_DIR; ZESHY_COMMAND_DIR="${ZESHY_FILENAME_CURRENT:h}/.."(:A)
