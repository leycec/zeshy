#!/usr/bin/env zeshy
# vim: set filetype=zsh
#
# ====================[ zscreenshot                        ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# zscreenshot is a Zeshy script for capturing screenshots.
#
# --------------------( DESCRIPTION                        )--------------------
# zscreenshot captures a screenshot according to command-line arguments of one of
# the following views:
# 
# * The entire screen, if passed the "--screen" command-line argument or if
#   passed no alternative command-line arguments.
# * The specified window, if passed the "--window ${WINDOW_ID}" command-line
#   argument. This requires the caller to explicitly specify the window ID, and
#   is thus best integrated with a window manager (WM).
# * The selected region, if passed the "--region" command-line argument. This
#   requires the caller to manually click the beginning screen coordinate, drag
#   the mouse to the ending screen coordinate, and release.
#
# zscreenshot outputs to
# "/tmp/screenshots/screenshot-${USER}-${CURRENT_DATETIME}.png" by default.
#
# --------------------( IMPORTS                       )--------------------
# zscreenshot requires at least one of the following external dependencies, in
# descending order of preference:
#
# * ImageMagik.
# * scrot.
# * GNOME.
#
# If more than one such dependency is available, zscreenshot preferentially
# selects the "best" one according to the above order (e.g., if both ImageMagick
# and GNOME are available, zscreenshot selects ImageMagick).

# ....................{ CONSTANTS                          }....................
ZESHY_SCRIPT_VERSION='0.0.1'

# ....................{ DEFAULTS                           }....................
# Default home directory for screenshots.
ZSCREENSHOT_HOME_DEFAULT='/tmp/screenshots'

# Default filename for the current screenshot.
ZSCREENSHOT_FILE_DEFAULT="${ZSCREENSHOT_HOME_DEFAULT}/screenshot-${USER}-$(date +'%F_%H-%M-%S').png"

# Screenshot action to be performed. Defaults to the entire screen.
ZSCREENSHOT_ACTION='screen'

# Screenshot window ID, if capturing a window.
ZSCREENSHOT_WINDOW_ID=

#FIXME: Copy this into "rtorrentd" and possibly generalize.
# ....................{ USAGE                              }....................
echo_usage_fatal() {
  echo_usage
  exit 1
}

echo_usage_nonfatal() {
  echo_usage
  exit 0
}

echo_usage() {
  echo "Usage: ${ZESHY_SCRIPT_NAME} [OPTION]... [FILE]

Capture a screenshot of the passed screen region to the passed filename.
Defaults to capturing a screenshot of the entire screen to the filename
\"${ZSCREENSHOT_FILE_DEFAULT}\".

Delegates to these external binaries, in order of preference:

  import                 -- provided by ImageMagick
  gnome-panel-screenshot -- provided by GNOME
  scrot                  -- provided by scrot

Options:
  -h, --help             Show this help.
  -s, --screen           Capture a screenshot of the entire screen.
  -r, --region           Capture a screenshot of the selected region.
  -w, --window WINDOW_ID Capture a screenshot of the specified window.
"
}

# ....................{ OPTIONS                            }....................
#FIXME: Use "zparseopt" instead.
# Parse all passed command-line options into this global list.
OPTIONS=$(getopt --unquoted\
    --longoption 'screen,window,region,help'\
    --options    '+s,w,r,h' --shell bash -- "${@}")
[[ ${?} = 0 ]] || echo_usage_fatal

# Replace all passed command-line options with the above list. 
eval set -- ${OPTIONS}

# Parse these options.
while [[ ${#} -gt 0 ]]; do
    case "${1}" in
        -h|--help)   echo_usage_nonfatal;;
        -s|--screen) ZSCREENSHOT_ACTION=screen; shift;;
        -w|--window) ZSCREENSHOT_ACTION=window; shift
            ZSCREENSHOT_WINDOW_ID="${1}"
            if [[ -z "${ZSCREENSHOT_WINDOW_ID}" ]]; then
                curse "no window ID passed"
                echo_usage_fatal
            fi
            shift;;
        -w|--region) ZSCREENSHOT_ACTION=region; shift;;
        --) shift; break;;
        -*) echo_usage_fatal;;
        *)  break;;
   esac
done

# Parse any remaining argument, if there is one, into the screenshot filename.
if [[ ${#} -gt 0 ]]
then ZSCREENSHOT_FILE=${1}
else ZSCREENSHOT_FILE=${ZSCREENSHOT_FILE_DEFAULT}
fi

# ....................{ ZSCREENSHOT                         }....................
# GNOME.
zscreenshot_gnome_panel_screenshot() {
    utter "capturing GNOME screenshot..."
    try gnome-panel-screenshot
}

# ImageMagick.
zscreenshot_import_screen() {
    utter "importing screen to \"${ZSCREENSHOT_FILE}\"..."
    try import -window root "${ZSCREENSHOT_FILE}"
}

zscreenshot_import_region() {
    utter "importing region to \"${ZSCREENSHOT_FILE}\"..."
    try import "${ZSCREENSHOT_FILE}"
}

zscreenshot_import_window() {
    utter "importing window ${ZSCREENSHOT_WINDOW_ID} to \"${ZSCREENSHOT_FILE}\"..."
    try import -window "${ZSCREENSHOT_WINDOW_ID}" "${ZSCREENSHOT_FILE}"
}

# Scrot.
zscreenshot_scrot_screen() {
    utter "scrotting screen to \"${ZSCREENSHOT_FILE}\"..."
    try scrot -c -d 3 -m "${ZSCREENSHOT_FILE}"
}

zscreenshot_scrot_window() {
    utter "scrotting window to \"${ZSCREENSHOT_FILE}\"..."
    try scrot -s -q 85 "${ZSCREENSHOT_FILE}"
}

zscreenshot_scrot_region() {
    utter "scrotting region to \"${ZSCREENSHOT_FILE}\"..."
    try scrot -s -q 85 "${ZSCREENSHOT_FILE}"
}

# ....................{ MAIN                               }....................
utter "v${ZESHY_SCRIPT_VERSION}"
try mkdir --parents "$(dirname "${ZSCREENSHOT_FILE}")"

if is_installed import; then
    case "${ZSCREENSHOT_ACTION}" in
        screen) zscreenshot_import_screen ;;
        window) zscreenshot_import_window ;;
        region) zscreenshot_import_region ;;
    esac
elif is_installed scrot; then
    case "${ZSCREENSHOT_ACTION}" in
        screen) zscreenshot_scrot_screen ;;
        window) zscreenshot_scrot_window ;;
        region) zscreenshot_scrot_region ;;
    esac
elif is_installed gnome-panel-screenshot; then
    zscreenshot_gnome_panel_screenshot
else
    die "no screenshot utility installed; please install one of:
ImageMagick, scrot, or GNOME"
fi

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2011 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
