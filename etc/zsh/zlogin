#!/usr/bin/env zsh
# ====================[ zlogin                             ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Zlogin. Zsh runs this script after "zshenv", "zprofile", and "zshrc" for login
# shells. This is the last script Zsh runs when starting up.

# --------------------( WASTELANDS                         )--------------------
#[[ $(whence -w _zeshy_core) =~ ': function' ]] || source "${ZESHY_HOME}/zeshy/core"
# ....................{ DECONSTRUCTION                     }....................
# Destroy all existing temporary, connection-specific files.
#SSH_CONTROLMASTER_SOCKETS=$(~/tmp/ssh_controlmaster*);

#if [ $? == 0 ]; then
# for SSH_CONTROLMASTER_SOCKET in ~/tmp/ssh_controlmaster*; do
#   mv --force $SSH_CONTROLMASTER_SOCKET /tmp/
# done
#fi

# ....................{ SCREEN BLANKING                    }....................
#FIXME: Selectively enable only for the "aty128fb" device.
# Disable screen blanking (via APM), VESA powersave, and VESA powerdown features
# on this virtual (vcs) console. These features often corrupt the display on
# framebuffer devices unable to adeptly change resolution-- particularly, the
# "aty128fb" framebuffer device on iBook G3 500Mhz LCDs.
#
# If the user is already running X.org, this does nothing.
#[ -z "$DISPLAY" ] && setterm -powersave off -blank 0 -powerdown 0

# ....................{ PREAMBLE                           }....................
# Absolute path to the current script.
#local zlogin_path="$(readlink --canonicalize-existing "${0}")"

# Directory having the current script.
#[[ -n "${ZESHY_HOME}" ]] ||
#    export ZESHY_HOME=$(readlink --canonicalize-existing "$(dirname "${zprofile_path}")/..")

# Import Zeshy Core.
#if [[ $(whence -w zimport) =~ ': function' ]]
#then zimport zeshy/core
#else source "${ZESHY_HOME}/src/zeshy/core"
#fi

# Inform the user that this script is being imported.
#utter_import "${zlogin_path}"
