#!/usr/bin/env zsh
# ====================[ zeshy                              ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Main Zeshy configuration file.

# ....................{ DECLARATIONS                       }....................
# For readability, declare global variables prior to their definition below.
boolean_global_export\
    ZESHY_IS_SUBSTITUTING_INTERACTIVE_COMMANDS\
    ZESHY_IS_ABBREVIATING_INTERACTIVE_COMMANDS\
    ZESHY_IS_PRINTING_CALL_STACK_ON_ERROR\
    ZESHY_IS_PRINTING_DOCUMENTATION_ON_ERROR\
    ZESHY_IS_PRINTING_SOURCE_CODE_ON_ERROR\
    ZESHY_IS_DEBUG
integer_global_export\
    ZESHY_DIR_STACK_MAX_SIZE
string_global_export\
    ZESHY_THEME

# ....................{ THEMES                             }....................
# Zeshy theme. Choices include:
#
# * "vanilla", the default Zeshy theme. (A most commendable choice, kind Sir.)
ZESHY_THEME=vanilla

# ....................{ BOOLEANS                           }....................
# Booleans are false if set to the empty string and otherwise true.
#
# For simplicity, disable or enable booleans by commenting or uncommenting the
# lines on which they appear (e.g., prefixing such lines with "#" or deleting
# such prefix).

#FIXME: I'm not terribly fond of enabling booleans by setting them to 1. Avoid
#such magic by defining the following magic in "global":
#
#string_global_constant ZESHY_BOOLEAN_TRUE=1 ZESHY_BOOLEAN_FALSE=''
#
#Then use below: e.g.,
#ZESHY_IS_DEBUG=${ZESHY_BOOLEAN_TRUE}

#FIXME: All of the magic constants defined in "global" should be declared
#frozen, perhaps suggesting new "string_global_constant",
#"boolean_global_constant", and so on types in "alias".

# If non-empty, enable computationally expensive developer-specific debug logic,
# including:
#
# * Recompilation of Zeshy digest's file on edits to the Zeshy codebase. For
#   Zeshy developers, such recompilation is essential to Zeshy development. For
#   Zeshy non-developers, repeatedly testing for such edits is merely wasteful.
ZESHY_IS_DEBUG=1

# ....................{ BOOLEANS ~ alias                   }....................
#FIXME: Document.
# If non-empty, ...

# "1" if wrapping interactively run external commands (e.g., "cp", "grep", "ls")
# with corresponding Zeshy functions and "" otherwise. If enabled, Zeshy runs
# such commands with default options defined by the corresponding list below
# (e.g., wrapping interactively run "cp" commands with copy_path(), a Zeshy
# function passing "cp" the ZESHY_CP_OPTIONS list). If disabled, Zeshy runs
# such commands with no such defaults.
#
# For sanity, Zeshy never wraps core commands when run non-interactively (e.g.,
# "cp" when run from a script always executes "cp" with no such defaults).
ZESHY_IS_SUBSTITUTING_INTERACTIVE_COMMANDS=1

#FIXME: Document.
ZESHY_IS_ABBREVIATING_INTERACTIVE_COMMANDS=1

# ....................{ BOOLEANS ~ error                   }....................
# If non-empty, print a stack trace on either:
#
# * A Zsh alias, function, or script throwing an uncaught exception.
# * A Zsh alias, function, or script or external command returning unhandled
#   non-zero exit status.
#
# Please enable this boolean when submitting bug reports.
ZESHY_IS_PRINTING_CALL_STACK_ON_ERROR=1

# If non-empty, print the documentation of the Zsh function or script throwing
# such exception or calling the external command returning such non-zero exit
# status. The definition of "documentation" depends on context.
#
# Function documentation includes all "#"-prefixed lines exactly preceding such
# function definition, themselves prefixed by either a blank line or start of
# the file (optionally followed by an ignored "# ....................{"-
# prefixed banner).
#
# Script documentation includes all "#"-prefixed lines at the top of such
# script implementation, excluding shebang lines (e.g., "#!/usr/bin/env zsh").
ZESHY_IS_PRINTING_DOCUMENTATION_ON_ERROR=1

# If non-empty, print the source code of the Zsh function or script throwing
# such exception or calling the external command returning such non-zero exit
# status. If such function or script is sufficiently small (e.g., less than six
# lines), this prints the definition of such function or script; otherwise, this
# prints only the exact line within such function or script responsible for such
# error and several previous and subsequent lines of context about such line.
#
# Please enable this boolean when submitting bug reports.
ZESHY_IS_PRINTING_SOURCE_CODE_ON_ERROR="${ZESHY_IS_DEBUG}"

# ....................{ INTEGERS                           }....................
# Maximum height of the directory stack. Once full, pushing new directories onto
# the top of the directory stack implicitly pops that number of directories off
# the bottom of the directory stack. Set this to either 0 or the empty string to
# disable such behavior.
ZESHY_DIR_STACK_MAX_SIZE=16
