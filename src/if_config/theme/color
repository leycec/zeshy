#!/usr/bin/env zsh

declare_parcel_as_script_with_stdin <<'-/-'
Configure default `zeshy` *color styles* (i.e., mappings from style to color
names, permitting human-readable customization of colors output by `zeshy`
runnables). Such styles are only defaults and hence only output if the current
user's configured theme fails to define such styles.
-/-

# ....................{ COLORS                             }....................
declare_global_with_stdin <<'/---'
map ZESHY_STYLE_TO_COLOR_NAME

Map non-prompt style to color names, permitting human-readable customization of
colors output by all `zeshy` runnables _except_ those relating to the prompt.
See ${ZESHY_PROMPT_STYLE_TO_COLOR_NAME} for further details on prompt styles.

Styles are dot-delimited identifiers specific to the runnables referencing such
styles (e.g., `print_call_stack.line`, the line style specific to function
print_call_stack()). To preserve uniqueness, such identifiers are typically
prefixed by the dot-suffixed name of the corresponding runnables.

Color names are ${ZESHY_COLOR} keys (e.g., `grey_bold_italic`, the color grey in
bold-italic typeface), whose corresponding values are the ANSI escape codes
enabling such colors on the current terminal. See such map for further details.

== Internal Conversion ==

This map is intended for configuration purposes only. `zeshy` runnables should
(typically) instead expand ${ZESHY_STYLE_TO_COLOR}, a general-purpose map from
non-prompt style to color value initialized from this map during recompilation
of `zeshy`\'s user digest file.

Specifically, for each key-value pair of this map, `zeshy` defines the same key
of ${ZESHY_STYLE_TO_COLOR} to expand to the corresponding ANSI escape code. For
example, if this map has a key `print_call.line` with value `grey`, `zeshy` adds
to ${ZESHY_STYLE_TO_COLOR} key `print_call.line` with value `\E\[0;30m` (i.e.,
the ANSI escape code resetting the current foreground color to grey).
/---
ZESHY_STYLE_TO_COLOR_NAME=(
    # print_hard_rule().
    print_hard_rule blue

    # print_call_stack().
    print_call_stack.prefix          red_bold
    print_call_stack.function_name   blue_bold
    print_call_stack.function_parens blue
    print_call_stack.script_name     magenta_bold
    print_call_stack.script_quotes   magenta
    print_call_stack.eval_name       cyan_bold
    print_call_stack.eval_parens     cyan
    print_call_stack.brace           white_bold
    print_call_stack.filename        grey_bold
    print_call_stack.colon           grey
    print_call_stack.line            red

    # print_heading().
    print_heading.text         grey_bold
    print_heading.corner_left  blue_bold
    print_heading.corner_right blue_bold
    print_heading.border_left  blue
    print_heading.border_right blue
    print_heading.joiner_left  cyan
    print_heading.joiner_right cyan

    # print_aliases_cli().
    print_aliases_cli.type_abbreviation blue
    print_aliases_cli.type_substitution blue_bold
    print_aliases_cli.type_untyped      magenta
    print_aliases_cli.name              white_bold
    print_aliases_cli.equals            grey
    print_aliases_cli.quotes            grey_bold
    print_aliases_cli.expansion         cyan_italic

    # print_message().
    print_message.heading.text         grey_bold
    print_message.heading.corner_left  grey_bold
    print_message.heading.corner_right cyan_bold
    print_message.heading.border_left  blue
    print_message.heading.border_right blue
    print_message.heading.joiner_left  cyan
    print_message.heading.joiner_right cyan
    print_message.body.text            white_bold
    print_message.body.border_left     blue
    print_message.body.border_right    blue
    print_message.footing.corner_left  cyan_bold
    print_message.footing.corner_right grey_bold
    print_message.footing.border_left  blue
    print_message.footing.border_right blue

    #FIXME: Obsolete. Excise!
    # print_message() and cohorts.
    print_message.caller  cyan_bold
    print_warning.caller  yellow_bold
    print_error.caller    red_bold
    print_message.colon   grey_bold
    print_warning.colon   grey_bold
    print_error.colon     grey_bold
    print_message.message white_bold
    print_warning.message white_bold
    print_error.message   white_bold

    # print_usage().
    print_usage.usage                         grey_bold
    print_usage.usage_colon                   grey_bold
    print_usage.command_name                  cyan_bold
    print_usage.arg_brace                     cyan
    print_usage.arg_name                      cyan_bold
    print_usage.arg_ellipsis                  grey_bold
    print_usage.command_synopsis              white_bold_italic
    print_usage.command_synopsis.command_name cyan_bold_italic
    print_usage.command_synopsis.arg_name     cyan_bold_italic
    print_usage.options_heading_name          magenta_bold
    print_usage.options_heading_colon         grey_bold
    print_usage.option_dash                   blue
    print_usage.option_name                   blue_bold
    print_usage.option_equals                 green
    print_usage.option_arg                    green_bold
    print_usage.option_comma                  grey_bold
    print_usage.option_synopsis               white_italic
)

declare_global_with_stdin <<'/---'
map ZESHY_PROMPT_STYLE_TO_COLOR_NAME

Map prompt style to color names, permitting human-readable customization of
colors output by `zeshy` runnables relating to the prompt. See
${ZESHY_STYLE_TO_COLOR_NAME} for further details.

== Motivation ==

Prompt and non-prompt color values differ. While prompt colors must be delimited
by `%{` and `%}` to prevent such colors from erroneously contributing to the
prompt length, non-prompt colors require no such delimitation. Hence, mapping
style to color names requires separating such styles into prompt and non-prompt
styles and then maps from style to color names on the same basis.
/---
ZESHY_PROMPT_STYLE_TO_COLOR_NAME=(
    # startup_zeshy_terminal_prompt() when the current user is root.
    startup_zeshy_terminal_prompt.superuser.brace                   grey
    startup_zeshy_terminal_prompt.superuser.host                    red
    startup_zeshy_terminal_prompt.superuser.user                    red_bold
    startup_zeshy_terminal_prompt.superuser.path                    grey_bold
    startup_zeshy_terminal_prompt.superuser.prior_command_succeeded grey_bold
    startup_zeshy_terminal_prompt.superuser.prior_command_failed    magenta_bold
    startup_zeshy_terminal_prompt.superuser.input                   white_bold

    # startup_zeshy_terminal_prompt() when the current user is not root.
    startup_zeshy_terminal_prompt.nonsuperuser.brace                   white_bold
    startup_zeshy_terminal_prompt.nonsuperuser.host                    cyan
    startup_zeshy_terminal_prompt.nonsuperuser.user                    cyan_bold
    startup_zeshy_terminal_prompt.nonsuperuser.path                    green
    startup_zeshy_terminal_prompt.nonsuperuser.prior_command_succeeded green
    startup_zeshy_terminal_prompt.nonsuperuser.prior_command_failed    red_bold
    startup_zeshy_terminal_prompt.nonsuperuser.input                   white_bold
)
