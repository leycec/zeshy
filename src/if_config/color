#!/usr/bin/env zsh
# ====================[ color                              ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Configure output colors.

# ....................{ STYLES                             }....................
declare_global_with_stdin <<'-\-'
map ZESHY_COLOR_STYLE_NAME_TO_COLOR_NAME

Map color style names to color names. `zeshy` uses this map to set the
convenience map ${ZESHY_COLOR_STYLE}, which other `zeshy` functions access to
colorize output. Specifically, for each key-value pair of this map, `zeshy`
defines the same key of map ${ZESHY_COLOR_STYLE} to expand to the corresponding
ANSI escape code. For example, if this map contains key
`print_call_stack.colon` with value `grey`, `zeshy` adds a corresponding key
`print_call_stack.colon` with value `\E\[0;30m` (i.e., the ANSI escape code
resetting the current foreground color to grey).

Color style names are arbitrary strings specific to the functions referencing
those styles. To avoid string conflicts, consider prefixing style names with the
specific function name referencing those styles followed by a dot (e.g.,
`print_call_stack.line`, the line style specific to print_call_stack()).

Color names are any valid keys of map ${ZESHY_COLOR}, whose corresponding values
expand to the ANSI escape code enabling such color on the current terminal
(e.g., `grey_bold_italic`, the color grey in bold-italic typeface).
-\-
ZESHY_COLOR_STYLE_NAME_TO_COLOR_NAME=(
    # print_hard_rule().
    print_hard_rule blue

    # print_call_stack().
    print_call_stack.prefix          red_bold
    print_call_stack.function_name   blue_bold
    print_call_stack.function_parens blue
    print_call_stack.script_name     magenta_bold
    print_call_stack.script_quotes   magenta
    print_call_stack.eval_name       cyan_bold
    print_call_stack.eval_parens     cyan
    print_call_stack.brace           white_bold
    print_call_stack.filename        grey_bold
    print_call_stack.colon           grey
    print_call_stack.line            red

    # print_heading().
    print_heading.border  blue
    print_heading.joiner  blue_bold
    print_heading.heading grey_bold

    # print_interactive_aliases().
    print_interactive_aliases.type_abbreviation blue
    print_interactive_aliases.type_substitution blue_bold
    print_interactive_aliases.type_alias        magenta
    print_interactive_aliases.name              white_bold
    print_interactive_aliases.equals            grey
    print_interactive_aliases.quotes            grey_bold
    print_interactive_aliases.expansion         cyan_italic

    # print_message() and cohorts.
    print_message.caller  cyan
    print_warning.caller  cyan
    print_error.caller    cyan
    print_message.colon   grey
    print_warning.colon   grey
    print_error.colon     grey
    print_message.message white_bold
    print_warning.message yellow_bold
    print_error.message   red_bold

    # print_usage().
    print_usage.usage         grey_bold
    print_usage.usage_colon   grey_bold
    print_usage.usage_text    white_bold_italic
    print_usage.command_name  cyan_bold
    print_usage.arg_brace     cyan
    print_usage.arg_name      cyan_bold
    print_usage.arg_ellipsis  grey_bold
    print_usage.heading_title magenta_bold
    print_usage.heading_colon grey_bold
    print_usage.option_dash   blue
    print_usage.option_name   blue_bold
    print_usage.option_equals green
    print_usage.option_value  green_bold
    print_usage.option_comma  grey_bold
    print_usage.option_text   white_italic
)

# ....................{ STYLES ~ prompt                    }....................
declare_global_with_stdin <<'-\-'
map ZESHY_PROMPT_COLOR_STYLE_NAME_TO_COLOR_NAME

Map color style names to prompt color names. `zeshy` uses this map to set the
convenience map ${ZESHY_PROMPT_COLOR_STYLE}, which other `zeshy` functions
access to colorize shell prompt output. Color names are any valid keys of map
${ZESHY_PROMPT_COLOR}, whose corresponding values expand to the prompt-specific
ANSI escape code enabling such color at the shell prompt on the current terminal
(e.g., `grey_bold_italic`, the color grey in bold-italic typeface). See
${ZESHY_COLOR_STYLE_NAME_TO_COLOR_NAME} for further details.
-\-
ZESHY_PROMPT_COLOR_STYLE_NAME_TO_COLOR_NAME=(
    # startup_zeshy_terminal_prompt() when the current user is root.
    startup_zeshy_terminal_prompt.superuser.brace                   grey
    startup_zeshy_terminal_prompt.superuser.host                    red
    startup_zeshy_terminal_prompt.superuser.user                    red_bold
    startup_zeshy_terminal_prompt.superuser.path                    grey_bold
    startup_zeshy_terminal_prompt.superuser.prior_command_succeeded grey_bold
    startup_zeshy_terminal_prompt.superuser.prior_command_failed    magenta_bold
    startup_zeshy_terminal_prompt.superuser.input                   white_bold

    # startup_zeshy_terminal_prompt() when the current user is not root.
    startup_zeshy_terminal_prompt.nonsuperuser.brace                   white_bold
    startup_zeshy_terminal_prompt.nonsuperuser.host                    cyan
    startup_zeshy_terminal_prompt.nonsuperuser.user                    cyan_bold
    startup_zeshy_terminal_prompt.nonsuperuser.path                    green
    startup_zeshy_terminal_prompt.nonsuperuser.prior_command_succeeded green
    startup_zeshy_terminal_prompt.nonsuperuser.prior_command_failed    red_bold
    startup_zeshy_terminal_prompt.nonsuperuser.input                   white_bold
)
