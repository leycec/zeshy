#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2017 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
*Filetype globbers* (i.e., functions globbing `.`-prefixed filename suffixes).
/---

#FIXME: Refactor all getters to setters.

# ....................{ TESTERS                            }....................
#FIXME: Refactor to internally call :file.Type.if_^=().
:func_ '[status=:bool] :file.type.is_^=(:str filename :str/:glob glob)' :func{
    :str filetype
    :file.Type.if_^= "${filename}" filetype "${glob}"
}:func <<'/---'
Report success only if the passed filename has a filetype matching the passed
glob.

== Examples ==

==========================================
[source]
------------------------------------------
>>> :str on_democracy="
... Democracy is a rare thing, Pete. You hear how democracies are all over
... the place, but it isn't really true. They call it democracy. They use
... the vocabulary, the props, but it's theater. What your Founding Fathers
... did was the real thing. But the problem with democracies is they're hard
... to maintain. Especially in the face of high technology. How do you
... preserve your freedom when the powerful can use software bots to detect
... dissent and deploy drone aircraft to take out troublemakers? Human
... beings are increasingly unnecessary to wield power in the modern world."
>>> :file.type.is_^= "sebeck.out" (in|to) :or
...     get_string_line "${on_democracy}" -1
beings are increasingly unnecessary to wield power in the modern world.
------------------------------------------
==========================================
/---

# ....................{ SETTERS                            }....................
:func_ '[status=:bool] :file.Type.if_^=(
    :str filename :Str filetype_name :str/:glob glob) [
    var_name_suffix="__fTig"]' :func{
    # Temporary string variable to be set to this filename's filetype. The
    # string variable with the passed name must *NOT* be set to this filetype
    # unless successfully matching this glob.
    :str filetype

    # If this filename has a filetype matching this glob, set the desired
    # variable to this filetype; else, fail.
    :file.Type.if_found "${filename__fTig}" filetype :and
        :str.^=.is "${filetype}" "${glob__fTig}" :and
            :Str.set "${filetype_name__fTig}" "${filetype}"
}:func <<'/---'
Set the string variable with the passed name to the filetype of the passed
filename if that filetype matches the passed glob _or_ report failure otherwise
(i.e., if this filename either has no filetype or has a filetype _not_ matching
this glob).

== See Also ==

* :file.Type.if_found().

== Examples ==

==========================================
[source]
------------------------------------------
>>> :str filetype on_ether="
... We had two bags of grass, seventy-five pellets of mescaline, five sheets
... of high-powered blotter acid, a salt shaker half full of cocaine, and a
... whole galaxy of multi-colored uppers, downers, screamers, laughers and
... also a quart of tequila, a quart of rum, a case of Ballantine ale, a
... pint of raw ether and two dozen amyls. Not that we needed all that for
... the trip, but once you get locked into a serious drug-collection, the
... tendency is to push it as far as you can. The only thing that really
... worried me was the ether. There is nothing in the world more helpless
... and irresponsible and depraved than a man in the depths of an ether
... binge. And I knew we'd get into that rotten stuff pretty soon.txt"
>>> :file.make "${on_ether}"
>>> :file.Type.if_^= "${on_ether}" filetype t?t :and :stdout.echo\
...    "After West Point and the Priesthood, LSD must have seemed entirely logical to him."
After West Point and the Priesthood, LSD must have seemed entirely logical to him.
------------------------------------------
==========================================
/---
