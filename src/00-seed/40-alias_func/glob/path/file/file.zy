#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2017 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Handle *file globs* (i.e., glob expressions matching existing files).
/---

# ....................{ GETTERS                            }....................
:func_ '[status=:bool] :File.^=_first_if_found(
    :Str file_name :str/:glob glob *:str glob_qualifiers) <
    var_name_suffix="__Fgfif">' :func{
    :Path.^=_first_if_found\
        "${file_name__Fgfif}"\
        "${glob__Fgfif}"\
        '-.'\
        "${glob_qualifiers__Fgfif[@]}"

#FIXME: Functional but horridly tedious example. See :Path.^=_first_if_found()
#for a more illustrative approach.
}:func <<'/---'
Set the string variable with the passed name to the absolute or relative
pathname of the first existing file matching both the passed glob and all passed
glob qualifiers after resolving symbolic links _or_ report failure if no such
file exists.

== See Also ==

* :Path.^=_first_if_found().

== Examples ==

==========================================
[source]
------------------------------------------
>>> :str filename
>>> :File.^=_first_if_found filename /bin/ch[a-z]## *
>>> :stdout.echo "${filename}"
/bin/chdir
------------------------------------------
==========================================
/---
