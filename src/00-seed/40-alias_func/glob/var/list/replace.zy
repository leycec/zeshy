#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2016 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
*Glob-based list item replacers* (i.e., functions replacing list item substrings
matching extended glob expressions).
/---

#FIXME: Add nongreedy versions of these functions.

# ....................{ REPLACERS                          }....................
:func_ ':void :List.items.replace_^=.with_str(
    :List list_name :str/:glob list_item_glob :str replacement) [
    var_name_suffix="__Lirgws"]' :func{
    :List.eval\
        "${list_name__Lirgws}"\
        '${(X)'${list_name__Lirgws}'//${~list_item_glob__Lirgws}/${replacement__Lirgws}}'

#FIXME: Add examples.
}:func <<'/---'
Replace all substrings matching the passed glob in items of the list variable
with the passed name with the passed replacement string.

== Examples ==

==========================================
[source]
------------------------------------------
------------------------------------------
==========================================
/---

:func_ ':void :List.items.replace_^=.with_expansion(
    :List list_name :str/:glob list_item_glob :str replacement_expansion) [
    var_name_suffix="__Lirgwe"]' :func{
    # Set scalar globals on successful matches (e.g., ${match}).
    :Glob.enable_capturing_ungrouped list_item_glob__Lirgwe

    # Replace these list item substrings.
    :List.eval\
        "${list_name__Lirgwe}"\
        '${(X)'${list_name__Lirgwe}'//${~list_item_glob__Lirgwe}/'${replacement_expansion__Lirgwe}'}'

#FIXME: Add examples.
}:func <<'/---'
Replace all substrings matching the passed glob in items of the list variable
with the passed name with the passed replacement string, dynamically reexpanded
in the context of each such match.

For convenience, this function implicitly enables *ungrouped glob capturing*
(i.e., sets scalar globals ${MATCH}, ${MEND}, and ${MBEGIN} on each successful
match).

== Examples ==

==========================================
[source]
------------------------------------------
------------------------------------------
==========================================
/---
