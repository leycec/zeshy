#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2015 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Document all globals, functions, and aliases declared by @{inspect}.
/---

# ....................{ GLOBALS                            }....................
:string_global ZESHY_SYSTEM_ID <<'/---'
Machine-readable `.`-delimited string uniquely identifying the *current system*
(i.e., concatenating the names of all high-level software on which the current
digest file depends). Such software includes:

* The current hostname, if any.
* The current operating system (e.g., `linux-gnu`).
* The current instruction set architecture (e.g., `x86-64`).
* The current operating Linux distribution (e.g., `Gentoo`), if any.
* The current display server (e.g., `Wayland`), if any.
* The current desktop environment (e.g., `KDE`), if any.
* The current window manager (e.g., `FVWM`), if any.
* The current virtual terminal (e.g., `terminator`), if any.

Such string is guaranteed to contain _only_ *alphanumeric characters* (i.e.,
digits and letters) and the following punctuation characters: `.`, `_`, and `-`.
Since this excludes all characters prohibited from inclusion in pathnames on
certain platforms (namely Windows, prohibiting considerably more characters than
Unix-like platforms), such string is ideal for constructing system-specific
pathnames.
/---

# ....................{ GLOBALS ~ os                       }....................
:string_global ZESHY_LINUX_DISTRO_NAME <<'/---'
Human-readable name of the *current Linux distribution* (i.e., a Unix-like
operating system comprising the Linux kernel and, typically, the GNU userland
and distribution-specific package manager) if the current operating system is
Linux _and_ such distribution was recognized at digest compile time or the empty
string otherwise. Such string may contain both whitespace and capitalized
letters and hence is _not_ machine-readable.
/---

# ....................{ GLOBALS ~ gui                      }....................
:string_global ZESHY_DISPLAY_SERVER_NAME <<'/---'
Human-readable name of the *current display server* (i.e., the core component of
the current windowing system, defining the communications protocol with which
client GUI applications receive input and render output) if the current display
is managed by a display server or the empty string otherwise. Such string may
contain both whitespace and capitalized letters and hence is _not_ machine-
readable.
/---

:string_global ZESHY_DESKTOP_ENVIRONMENT_NAME <<'/---'
Human-readable name of the *current desktop environment* (i.e., the component of
the current windowing system implementing the desktop metaphor for the current
display of the current display server) if the current display is managed by a
display server or the empty string otherwise. Such string may contain both
whitespace and capitalized letters and hence is _not_ machine-readable.
/---

:string_global ZESHY_WINDOW_MANAGER_NAME <<'/---'
Human-readable name of the *current window manager* (i.e., the component of the
current windowing system managing windows for the current display of the current
display server) if the current display is managed by a display server or the
empty string otherwise. Such string may contain both whitespace and capitalized
letters and hence is _not_ machine-readable.
/---

# ....................{ SETTERS                            }....................
:func.document <<'/---'
void ::set_system_globals()

Define all globals declared by this parcel by inspecting the current system.
This function is implicitly called on @{digest} sourcing this parcel, after
which @{digest} expands such globals (chiefly, ${ZESHY_SYSTEM_ID}) to decide
which of several digest files is the ``current'' digest file.
/---

:func.document <<'/---'
void ::set_system_globals_os()

Set all operating system-specific globals required by @{digest}, including
${ZESHY_DISTRO_NAME}. See such global for further details.
/---

:func.document <<'/---'
void ::set_system_globals_gui()

Set all GUI-specific globals required by @{digest}, including
${ZESHY_DISPLAY_SERVER_NAME}, ${ZESHY_DESKTOP_ENVIRONMENT_NAME}, and
${ZESHY_WINDOW_MANAGER_NAME}. See such globals for further details.
/---

:func.document <<'/---'
void ::set_system_globals_gui_x()

Set all GUI-specific globals required by @{digest} for display servers
supporting the X11 protocol, which this function assumes to be the case.
/---

# --------------------( WASTELANDS                         )--------------------
# managing software
# installation through a distribution- specific package manager as well as
# supporting the GNU software stack)

# whitespace and hence is unlikely to be
# human-readable. Rather, this global is principally intended for use in
# constructing system-specific paths (e.g.,
# `~/.zeshy/config/linux-gnu.Gentoo.FVWM`).

# describe high-level
# facets of the current system. This function @{digest} sources this parcel
# for subsequent use by @{digest} to . Specifically, set the
# following globals by inspecting the current system: ${ZESHY_SYSTEM_ID} and
# ${ZESHY_WINDOW_MANAGER_NAME}.

# , including
# Set ${ZESHY_DISPLAY_SERVER_NAME} to the name of the current display server. See
# such global for further details.
# 
# Define all system-specific globals required by @{digest} for display servers
# supporting the X11 protocol, which this function implicitly assumes to be the
# case. This function is only intended to be called by ::set_system_globals().

#Define all system-specific globals required by @{digest} for display servers
 # to the name of the current display server

# Under the prior examples, the value of this string would be
#defined in relation to digest compilation as 
# word uniquely identifying the
