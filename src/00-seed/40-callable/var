#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2015 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Handle *core variable functions* (i.e., functions manipulating variables
called for early-time functionality).
/---

# ....................{ SETTERS                            }....................
:func ':void :list.set_to_string(
    ^:list `list_name, :str... `list_items)' :func{
    set -A "${1}" "${@[2,-1]}"
}:func <<'/---'
Set the passed list to contain _only_ the passed untyped scalars as list items
(in the passed order): e.g.,

.:list.set_to_string()
==========================================
[source]
------------------------------------------
>>> :list on_revolution
>>> :str on_war=\
...    'A true revolution of values will lay hands on the world order and say of
...     war: "This way of settling differences is not just."'
... :str on_business=\
...    "This business of burning human beings with napalm, of filling our
...     nation's homes with orphans and widows, of injecting poisonous drugs of
...     hate into veins of people normally humane, of sending men home from
...     dark and bloody battlefields physically handicapped and psychologically
...     deranged, cannot be reconciled with wisdom, justice and love."
>>> :list.set_to_string on_revolution "${on_war}" "${on_business}"
>>> get_string_line "${on_revolution[1]}" 1
A true revolution of values will lay hands on the world order and say of
------------------------------------------
==========================================

== Implementation ==

Specifically, this function:

* Clears such list, reducing such list to the empty list.
* Appends each passed string as a new list item to such list.
/---

# --------------------( WASTELANDS                         )--------------------
