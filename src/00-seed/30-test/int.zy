#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2017 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
*Integer value testers* (i.e., functions validating integer values).
/---

# ....................{ TESTERS                            }....................
:func_ '[status=:bool] :int.is(:str value)' :func{
    # Dismantled, this is:
    #
    # * "(-|)", matching an optional prefixing negative sign.
    # * "<->", matching one or more digits. An obscure, but helpful, zsh-ism.
    :is ${value} == ('-'|)<-> :si
}:func <<'/---'
Report success only if the passed string is an *integer* (i.e., consists of only
an optional negative sign followed by one or more digits).
/---

# ....................{ TESTERS ~ sign                     }....................
:func_ '[status=:bool] :int.is_positive(:int value)' :func{
    (( value > 0 ))
}:func <<'/---'
Report success if the passed integer is *positive* (i.e., `value > 0`).

If this argument is _not_ an integer, an exception is thrown.
/---

:func_ '[status=:bool] :int.is_negative(:int value)' :func{
    (( value < 0 ))
}:func <<'/---'
Report success if the passed integer is *negative* (i.e., `value < 0`).

If this argument is _not_ an integer, an exception is thrown.
/---

:func_ '[status=:bool] :int.is_nonnegative(:int value)' :func{
    (( value >= 0 ))
}:func <<'/---'
Report success if the passed integer is *nonnegative* (i.e., `value >= 0`).

If this argument is _not_ an integer, an exception is thrown.
/---

:func_ '[status=:bool] :int.is_nonpositive(:int value)' :func{
    (( value <= 0 ))
}:func <<'/---'
Report success if the passed integer is *nonpositive* (i.e., `value <= 0`).

If this argument is _not_ an integer, an exception is thrown.
/---
