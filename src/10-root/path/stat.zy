#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2018 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Handle *path statistics* (i.e., POSIX-mandated metadata associated with all
files and directories regardless of filesystem type).
/---

#FIXME: Add examples.

# ....................{ GLOBALS                            }....................
# Human-readable index names.

() {
    integer index=1

    :int.global\
        ZY_STAT_INDEX_DEVICE=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *device number* (i.e., unique identifier for the filesystem containing
such path on the current system).
/---

    :int.global\
        ZY_STAT_INDEX_INODE=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *inode* (i.e., unique identifier for such path on such filesystem).
/---

    :int.global\
        ZY_STAT_INDEX_MODE=ZY_STAT_INDEX_TYPE_AND_PERMISSIONS=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *mode* (i.e., integer concatenating such path's type and access
permissions). The last 9 bits of such mode define such permissions and all other
bits such type.
/---

    :int.global\
        ZY_STAT_INDEX_NLINK=ZY_STAT_INDEX_HARD_LINK_COUNT=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *hard link count* (i.e., the number of hard links to such path on such
filesystem).
/---

    :int.global\
        ZY_STAT_INDEX_UID=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides the
numeric *user ID* of the owner of such path.
/---

    :int.global\
        ZY_STAT_INDEX_GID=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides the
numeric *group ID* assigned to such path.
/---

    :int.global\
        ZY_STAT_INDEX_RDEV=ZY_STAT_INDEX_DEVICE_MAJOR_AND_MINOR=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *major and minor device numbers* (i.e., unique identifiers of such
device's driver and such device respectively) if such path is a device file or 0
otherwise.
/---

    :int.global\
        ZY_STAT_INDEX_SIZE=ZY_STAT_INDEX_SIZE_BYTES=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *symbolic bytesize* (i.e., number of bytes symbolically allocated to such
path on such filesystem). Such size is symbolic and hence guaranteed to be
greater than or equal to such path's physical bytesize. If such path is a:

* Regular file, this is the expected size.
* Directory, this is the number of bytes allocated to all *directory entries*
  (i.e., key-value pairs mapping filenames in such directory to such files'
  inodes) for such directory.
* Symbolic link, this is the length of such link's target pathname (excluding
  terminating null byte).
* Named pipe, this is the number of unread bytes remaining in such pipe.
* Device file, this is 0.
/---

    :int.global\
        ZY_STAT_INDEX_ATIME=ZY_STAT_INDEX_TIME_CONTENT_READ=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *access time* (i.e., number of seconds since the Unix epoch at which such
path's content was last read), commonly abbreviated *atime*.
/---

    :int.global\
        ZY_STAT_INDEX_MTIME=ZY_STAT_INDEX_TIME_CONTENT_CHANGED=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *modification time* (i.e., number of seconds since the Unix epoch at
which such path's content was last modified), commonly abbreviated *mtime*.

== Caveats ==

Since this time _only_ tracks changes to path content, renaming paths changes the
ctime (but _not_ mtime) for such path as well as the mtime and ctime of the
directory containing such path.
/---

    :int.global\
        ZY_STAT_INDEX_CTIME=ZY_STAT_INDEX_TIME_INODE_CHANGED=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *inode change time* (i.e., number of seconds since the Unix epoch at
which such path's inode was last modified), commonly abbreviated *ctime*.

== Caveats ==

Since inodes persist metadata describing path content, any change to such
content updates both the mtime and ctime for such path.
/---

    :int.global\
        ZY_STAT_INDEX_BLKSIZE=ZY_STAT_INDEX_PREFERRED_SIZE_BLOCK_BYTES=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *preferred I/O block size in bytes* (i.e., number of bytes per block such
filesystem prefers such path be read or written with).
/---

    :int.global\
        ZY_STAT_INDEX_BLOCK=ZY_STAT_INDEX_SIZE_BLOCKS=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *physical block count* (i.e., number of 512-byte blocks allocated to such
path on such filesystem). Such size is physical and hence guaranteed to be less
than or equal to such path's symbolic bytesize divided by 512 rounding up to the
nearest integer.
/---

    :int.global\
        ZY_STAT_INDEX_LINK=ZY_STAT_INDEX_SYMLINK_TARGET=$(( index++ )) <<'/---'
Index of lists set by :set_list_to_path_stats() whose list element provides such
path's *target path* (i.e., absolute or relative path to which such path
originally linked) if such path is a symbolic link or the empty string
otherwise. Unlike all other such list elements, this element is `zsh`-specific.
/---
}

# ....................{ SETTERS                            }....................
:func.doc <<'/---'
void :set_list_to_path_stats(string list_name, string pathname)

Set the passed list to the raw values of all canonical statistics for the passed
path in the same order as returned by builtin zstat(), command `stat`, and
system call stat(). Since indexing such list with unreadable magic numbers is
discouraged, consider using human-readable globals ${ZY_STAT_*} instead
(e.g., ${ZY_STAT_INDEX_INODE}, expanding to the index into such list of the
list element providing such path's unique inode).

== Symbolic Links ==

*This function does not silently resolve symbolic links,* unlike builtin zstat()
and system call stat() but like commands `stat` and `ls`. If the passed path is
a symbolic link, the statistics describe such link itself rather the target path
of such link.
/---
function :set_list_to_path_stats {
    # Validate sanity.
    die_unless_args 'Expected one list name and one pathname.'
    string list_name__sltps="${1}" pathname__sltps="${2}"
    :List.die_unless "${list_name__sltps}"

    # Set such list.
    zstat -L -A "${list_name__sltps}" "${pathname__sltps}"
}

:func.doc <<'/---'
void set_map_to_path_stats:(string map_name, string pathname)

Set the passed map to map from canonical statistics names to the raw values of
such statistics for the passed path. Such names and hence keys are as follows:

* `device`, the unique identifier for the filesystem containing such path on the
  current system. See ${ZY_STAT_INDEX_DEVICE} for further details.
* `inode`, the unique identifier for such path on such filesystem. See
  ${ZY_STAT_INDEX_INODE} for further details.
* `mode`, an integer concatenating such path's type and access permissions. See
  ${ZY_STAT_INDEX_MODE} for further details.
* `nlink`, the number of hard links to such path on such filesystem. See
  ${ZY_STAT_INDEX_NLINK} for further details.
* `uid`, the numeric user ID of the owner of such path. See
  ${ZY_STAT_INDEX_UID} for further details.
* `gid`, the numeric group ID of the owner of such path. See
  ${ZY_STAT_INDEX_GID} for further details.
* `rdev`, an integer concatenating the major and minor device numbers if such
  path is a device file or 0 otherwise. See ${ZY_STAT_INDEX_RDEV} for further
  details.
* `size`, the number of bytes symbolically allocated to such path on such
  filesystem. See ${ZY_STAT_INDEX_SIZE} for further details.
* `atime`, the number of seconds since the Unix epoch at which such path's
  content was last read. See ${ZY_STAT_INDEX_ATIME} for further details.
* `mtime`, the number of seconds since the Unix epoch at which such path's
  content was last modified. See ${ZY_STAT_INDEX_MTIME} for further details.
* `ctime`, the number of seconds since the Unix epoch at which such path's
  inode was last modified. See ${ZY_STAT_INDEX_CTIME} for further details.
* `blksize`, the number of bytes per block such filesystem prefers such path be
  read or written with. See ${ZY_STAT_INDEX_BLKSIZE} for further details.
* `block`, the number of 512-byte blocks allocated to such path on such
  filesystem. See ${ZY_STAT_INDEX_BLOCK} for further details.
* `link`, the absolute or relative path to which such path originally linked if
  such path is a symbolic link or the empty string otherwise. See
  ${ZY_STAT_INDEX_LINK} for further details.

== Symbolic Links ==

*This function does not silently resolve symbolic links,* unlike builtin zstat()
and system call stat() but like commands `stat` and `ls`. If the passed path is
a symbolic link, the statistics describe such link itself rather the target path
of such link.
/---
function set_map_to_path_stats: {
    # Validate sanity.
    die_unless_args 'Expected one map name and one pathname.'
    string map_name__smtps="${1}" pathname__smtps="${2}"
    :Map.die_unless "${map_name__smtps}"

    # Set such map.
    zstat -L -H "${map_name__smtps}" "${pathname__smtps}"
}

# ....................{ PRINTERS                           }....................
:func.doc <<'/---'
void print_path_stats:(string pathname1, ...)

Print a human-readable synopsis of all canonical statistics for the passed
paths.
/---
function print_path_stats: {
    # Validate sanity.
    die_unless_args 'Expected one or more pathnames.'

    # Print such statistics.
    string pathname
    for    pathname ("${@}") {
        print_message_heading "Path \"${pathname}\""
        zstat -ors "${pathname}"
    } | page_stdin
}

# --------------------( WASTELANDS                         )--------------------
# ....................{ GLOBALS ~ synonyms                 }....................
# Canonical synonyms for prior human-readable index names.

#If such path is a symbolic link, such statistics describe the transitive target
#of such link after resolving such link and intermediate links such link links
#to. To obtain such statistics for the symbolic link itself, consider calling
#set_list_to_path_link_stats:() instead.

#Since indexing such list with magic numbers , index such list instead with human-readable ${ZY_STAT_*} globals (e.g.,
