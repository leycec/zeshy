#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2018 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Core symbolic link functionality.
/---

# ....................{ PRINTERS                           }....................
:func.doc <<'/---'
[stderr: string] print_warning_if_symlink_broken(string pathname1, ...)

Print a warning to standard error for each passed broken symbolic link.

See :is_symlink_broken() for further details.
/---
function print_warning_if_symlink_broken() {
    # Validate sanity.
    die_unless_args_1_or_more 'Expected one or more pathnames.'
    :str pathname_target

    # Print a warning for all shifted paths that are broken symbolic links.
    :str pathname
    for  pathname ("${@}") {
        if { is_symlink "${pathname}" :and :is_symlink_broken "${pathname}" } {
            :set_string_to_symlink_target_first pathname_target "${pathname}"
            :warning.print "Symbolic link \"${pathname}\" target \"${pathname_target}\" not found."
        }
    }
}

:func.doc <<'/---'
[stderr=:str] print_warning_if_symlink_broken_by_path_change(
    +:str source_pathnames :str target_pathname)

Print a warning to standard error for each passed broken symbolic link after
copying or moving paths.

This utility function is intended to be called only by copy_path*() and
move_path*() functions.
/---
function print_warning_if_symlink_broken_by_path_change() {
    # Validate sanity.
    die_unless_args_2_or_more\
        'Expected one or more source pathnames and one target pathname.'

    # List of target pathnames to be tested for broken symbolic links.
    :list target_pathnames

    # If passed two arguments and...
    if { is_args_2 } {
        # The second passed argument is a directory, the target pathname is such
        # argument appended with the basename of the first passed argument.
        if { is_dir "${2}" } {
            target_pathnames=( "${2}/${1:t}" )
        # Else, the second passed argument is itself the target pathname.
        } else {
            target_pathnames=( "${2}" )
        }
    # If passed three or more arguments, the latter is the target dirname. Find
    # the target pathnames by appending the basename of each source pathname to
    # such dirname. Dismantled, this is:
    #
    # * "${@[-1]}", expanding to the target pathname. Since at least three paths
    #   were passed and the underlying copy or move command returned
    #   successfully, this is always a dirname.
    # * "${^@[1,-2]:t}", iteratively expanding to the basename for each passed
    #   target pathname.
    } else {
        target_pathnames=( "${@[-1]}/${^@[1,-2]:t}" )
    }

    # Print such warnings.
    print_warning_if_symlink_broken "${target_pathnames[@]}"
}
