#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2015 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'---'
Handle *character randomizers* (i.e., functions returning pseudo-random
characters).
---

# ....................{ GLOBALS                            }....................
#FIXME: Rename to ZY_CHARS_ALPHANUMERIC_ASCII.

:listset.global ZY_CHARACTERS_ALPHANUMERIC <<'/---'
List set of all *alphanumeric characters* (i.e., characters in character class
`[a-zA-Z0-9]`).
/---
ZY_CHARACTERS_ALPHANUMERIC=(
    a b c d e f g h i j k l m n o p q r s t u v w x y z
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
    0 1 2 3 4 5 6 7 8 9
)

# ....................{ GETTERS                            }....................
#FIXME: Rename to :char.set_to_random_alphanumeric_ascii().
:func.doc <<'/---'
:void :set_char_to_random_alphanumeric_ascii(^:char char_name+__cstras)

Set the value of the passed character variable to a random *alphanumeric ASCII
character* (i.e., character in ASCII-specific character class `[a-zA-Z0-9]`,
equivalent to the non-Unicode subset of POSIX character class `[[:alnum:]]`):
e.g.,

.:set_char_to_random_alphanumeric_ascii()
==========================================
[source]
------------------------------------------
>>> :char random1 random2 random3
>>> :set_char_to_random_alphanumeric_ascii random1
>>> :set_char_to_random_alphanumeric_ascii random2
>>> :set_char_to_random_alphanumeric_ascii random3
>>> :str.output "${random1}${random2}${random3}"
6OZ
------------------------------------------
==========================================
/---
function :set_char_to_random_alphanumeric_ascii() {
    # Validate sanity.
    die_unless_arg 'Expected one character name.'
    :str char_name__sctraa="${1}"
    :int index__sctra char_count__sctra

    # Number of all possible alphanumeric characters.
    :set_int_to_list_size char_count__sctra ZY_CHARACTERS_ALPHANUMERIC

    # Pseudo-random index of list global ${ZY_CHARACTERS_ALPHANUMERIC}.
    :set_int_to_random_in_range index__sctra 1 "${char_count__sctra}"

    # Set such character to the list item with such index.
    :set_char_to_char "${char_name__sctraa}"\
        "${ZY_CHARACTERS_ALPHANUMERIC[index__sctra]}"
}

# --------------------( WASTELANDS                         )--------------------
    #FUXME: Implement! For efficiency, just modulo ${RANDOM} into a new list global
    #${ZY_CHARACTERS_ALPHANUMERIC}. Sweet, no?
