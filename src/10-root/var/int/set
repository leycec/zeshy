#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2014 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Handle *integer setters* (i.e., functions setting the values of integer
variables).
/---

# ....................{ SETTERS                            }....................
:func.document <<'/---'
:void :int.set(^:int int_name, :int int)

Set the value of the passed integer variable to the passed integer: e.g.,

.:int.set()
==========================================
[source]
------------------------------------------
>>> :int euler_gompertz
>>> :int.set euler_gompertz 59634736232319407434107849936927937
>>> :string.output ${euler_gompertz}
59634736232319407434107849936927937
------------------------------------------
==========================================
/---
function :int.set() {
    # Validate sanity.
    die_unless_args_2 'Expected one integer name and one integer.'
    :string int_name__siti="${1}" int__siti="${2}"
    :var.die_unless_type_int "${int_name__siti}"
    :int.die_unless "${int__siti}"

    # Set such integer via assignment indirection.
    noop ${(P)int_name__siti::=${int__siti}}
}

# --------------------( WASTELANDS                         )--------------------
