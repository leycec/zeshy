#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2016 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'---'
Handle *string tabulators* (i.e., functions reformatting each line of a string
into horizontally aligned columns).
---

#FIXME: Add examples.

# ....................{ TABULATORS                         }....................
:func.doc <<'/---'
string tabulate_string(string text1, string text2, ...)

Tabulate each line of the passed strings on one or more *whitespace characters*
(i.e., ASCII space, tab, and newline) into horizontally aligned columns.
/---
function tabulate_string() {
    die_unless_args 'Expected one or more strings.'
    :stdout.echo "${*}" | command column -t
}

:func.doc <<'/---'
string tabulate_stdin[stdin: string text]

Tabulate each line of standard input on one or more *whitespace characters*
(i.e., ASCII space, tab, and newline) into horizontally aligned columns.
/---
function tabulate_stdin() {
    die_if_args
    :stdin | command column -t
}

# ....................{ TABULATORS ~ separator             }....................
:func.doc <<'/---'
string tabulate_string_split_on_string(string text, string separator)

Tabulate each line of the passed string on substrings matching the passed
separator into horizontally aligned columns. Such separator must be nonempty and
_not_ contain a newline but may otherwise be of arbitrary length and content.
/---
function tabulate_string_split_on_string() {
    #FIXME: If such separator contains a newline, throw an exception.
    # Validate sanity.
    die_unless_args_2 'Expected one string and one separator.'
    string text="${1}" separator="${2}"
    die_unless_string_nonempty "${separator}" 'Expected nonempty separator.'

    # Tabulate such string.
    :stdout.echo "${text}" | command column -t -s "${separator}"
}

:func.doc <<'/---'
string tabulate_stdin_split_on_string[
    args: string separator, stdin: string separator]

Tabulate each line of standard input on substrings matching the passed separator
into horizontally aligned columns. See tabulate_string_split_on_string() for
further details.
/---
function tabulate_string_split_on_string() {
    # Validate sanity.
    die_unless_arg 'Expected one separator.'
    string separator="${2}"
    die_unless_string_nonempty "${separator}" 'Expected nonempty separator.'

    # Tabulate such input.
    :stdin | command column -t -s "${separator}"
}

# --------------------( WASTELANDS                         )--------------------
