#!/usr/bin/env zsh
# ====================[ option                             ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2015 by Cecil Curry.
# See "LICENSE" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle PCRE options.

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
<globbable> [status: boolean] is_pcre_enabling_option(
    string pcre, character option)

Return success if the passed PCRE enables the passed PCRE option: e.g.,

.is_pcre_enabling_option()
==========================================
[source]
------------------------------------------
>>> is_pcre_enabling_option ^.*?('granite cocks'|'monstrous bombs')(?Jism-U) U or
...     :string.output "They broke their backs lifting Moloch to Heaven!"
------------------------------------------
==========================================
/---
function is_pcre_enabling_option() {
    # Validate passed arguments.
    die_unless_arg 'expected one PCRE and one PCRE option'
    string pcre="${1}" option="${2}"
    :die_unless_char "${option}"

    # Test such PCRE.
    is "${pcre}" == *'(?'[imsxJUX]#${option}[imsxJUX-]#')'* si
}

# ....................{ CONVERTERS                         }....................
declare_function_with_stdin <<'/---'
<globbable> string convert_string_to_pcre_enabling_option(
    string pcre, character option)

Convert the passed PCRE to enable the passed option, if not already doing so.
/---
function convert_string_to_pcre_enabling_option() {
    # Validate passed arguments.
    die_unless_args_2 'expected one PCRE and one option character'
    string pcre="${1}" option="${2}"

    # If such PCRE already enables such option, return such PCRE as is.
    if { is_pcre_enabling_option "${pcre}" "${option}" } {
        return_string "${pcre}"
    # Else, return such PCRE prefixed with such option.
    } else {
        return_string "(?${option})${pcre}"
    }
}

# --------------------( WASTELANDS                         )--------------------
