#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2018 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
*String reducers* (i.e., functions replacing substrings with smaller substrings).
/---

# ....................{ REDUCERS                           }....................
:func_ ':void :str.Str.reduce_boxing(:str text :Str str_name) [
    var_name_suffix="__sSrb"]' :func{
    :str.Str.replace_^= "${text__sSrb}" "${str_name__sSrb}"\
        '${ZY_ASCII_NEWLINE}'[[:blank:]]# ' '
}:func <<'/---'
Reduce each *boxing* (i.e., substring of a newline followed by zero or more
horizontal whitespace characters) in the passed string to a single space.

Functions accepting human-readable string arguments internally split on newlines
and optional indentation (e.g., print_message_unboxed()) typically convert these
arguments to machine-readable `zsh` format containing no such newlines or
indentation by calling this function.

== Examples ==

==========================================
[source]
------------------------------------------
$$$ :str on_separation="
^^^     Men often hate each other because they fear each other; they fear each
^^^     other because they don't know each other; they don't know each other
^^^     because they cannot communicate; they cannot communicate because they
^^^     are separated."
$$$ replace_string_boxing_with_spaces "${on_separation}"
Men often hate each other because they fear each other; they fear each other because they don't know each other; they don't know each other because they cannot communicate; they cannot communicate because they are separated.
------------------------------------------
==========================================
/---
