#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2018 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
*Documentation parsers* (i.e., functions parsing `zeshy`-specific help strings).
/---

# ....................{ MAIN                               }....................
#FIXME: Nice PCRE, but we don't currently do anything with it. Perhaps
#globalize string local ${pcre_asciidoc} -- say, into ${ZY__ASCIIDOC_PCRE}.

# ugh() {
#     # Function description. Ignore cross-references embedded in the following
#     # AsciiDoc-specific passthrough syntactic constructs, which AsciiDoc and hence
#     # zeshy ignores for parsing purposes:
#     #
#     # * "`"-delimited passthrough quotes.
#     # * "pass:["- and "]"-delimited passthrough macros.
#     # * "+++"-delimited passthrough macros.
#     # * "$$"-delimited passthrough macros.
#     # * "\n----"-delimited listing blocks.
#     # * "\n...."-delimited literal blocks.
#     # * "\n////"-delimited comment blocks.
#     # * "\n++++"-delimited passthrough blocks.
#     # * "\n[literal]"-prefixed literal paragraphs.
#     # * "\n "- and "\n\t"-prefixed literal lines.
#     #
#     # Ignore cross-references embedded in the following AsciiDoc-specific anchored
#     # syntactic constructs, which AsciiDoc anchors for subsequent cross-referencing
#     # and hence should not themselves contain cross-references:
#     #
#     # * "\n."-prefixed block titles.
#     :str pcre_asciidoc_quote_backtick='\b`\N*?`\b'
#     :str pcre_asciidoc_macro_pass='pass:\[(?:\\\]|\N)*?\]'
#     :str pcre_asciidoc_macro_plus='\+\+\+\N*?\+\+\+'
#     :str pcre_asciidoc_macro_dollar='\$\$\N*?\$\$'
#     :str pcre_asciidoc_block_listing='-{4,}+\n.*?\n-{4,}+'
#     :str pcre_asciidoc_block_literal='\.{4,}+\n.*?\n\.{4,}+'
#     :str pcre_asciidoc_block_comment='/{4,}+\n.*?\n/{4,}+'
#     :str pcre_asciidoc_block_pass='\+{4,}+\n.*?\n\+{4,}+'
#     :str pcre_asciidoc_block_title_or_line_literal='(?:\.|[ \t]++)\N+'
#     :str pcre_asciidoc_paragraph_literal='^\[literal\]\n.*?(?:\n\n|\Z)'
#
#     #FIXME: Duplicated from "00-declare/00-match/pcre.zy", which is bad.
#     :str pcre_operable_name='[a-zA-Z0-9-_]++'
#
#     :str pcre_asciidoc_cross_reference='((?:'${pcre_asciidoc_quote_backtick}'|\b(?:'${pcre_asciidoc_macro_pass}'|'${pcre_asciidoc_macro_plus}'|'${pcre_asciidoc_macro_dollar}')\b|^(?:'${pcre_asciidoc_block_listing}'|'${pcre_asciidoc_block_literal}'|'${pcre_asciidoc_block_comment}'|'${pcre_asciidoc_block_pass}'|'${pcre_asciidoc_block_title_or_line_literal}')$|'${pcre_asciidoc_paragraph_literal}'|.)*?)([$@]\{'${pcre_operable_name}'\}|(?:(alias|func):)?'${pcre_operable_name}'\(\))'
#     :str pcre_asciidoc_suffix='(.*)'
#     :str pcre_asciidoc='\s*+(.*)'
# }

# ugh() {
#     # Function description. Ignore cross-references embedded in the following
#     # AsciiDoc-specific passthrough syntactic constructs, which AsciiDoc and hence
#     # zeshy ignores for parsing purposes:
#     #
#     # * "`"-delimited passthrough quotes.
#     # * "pass:["- and "]"-delimited passthrough macros.
#     # * "+++"-delimited passthrough macros.
#     # * "$$"-delimited passthrough macros.
#     # * "\n----"-delimited listing blocks.
#     # * "\n...."-delimited literal blocks.
#     # * "\n////"-delimited comment blocks.
#     # * "\n++++"-delimited passthrough blocks.
#     # * "\n[literal]"-prefixed literal paragraphs.
#     # * "\n "- and "\n\t"-prefixed literal lines.
#     #
#     # Ignore cross-references embedded in the following AsciiDoc-specific anchored
#     # syntactic constructs, which AsciiDoc anchors for subsequent cross-referencing
#     # and hence should not themselves contain cross-references:
#     #
#     # * "\n."-prefixed block titles.
#     :str pcre_asciidoc_quote_backtick='\b`\N*?`\b'
#     :str pcre_asciidoc_macro_pass='pass:\[(?:\\\]|\N)*?\]'
#     :str pcre_asciidoc_macro_plus='\+\+\+\N*?\+\+\+'
#     :str pcre_asciidoc_macro_dollar='\$\$\N*?\$\$'
#     :str pcre_asciidoc_block_listing='-{4,}+\n.*?\n-{4,}+'
#     :str pcre_asciidoc_block_literal='\.{4,}+\n.*?\n\.{4,}+'
#     :str pcre_asciidoc_block_comment='/{4,}+\n.*?\n/{4,}+'
#     :str pcre_asciidoc_block_pass='\+{4,}+\n.*?\n\+{4,}+'
#     :str pcre_asciidoc_block_title_or_line_literal='(?:\.|[ \t]++)\N+'
#     :str pcre_asciidoc_paragraph_literal='^\[literal\]\n.*?(?:\n\n|\Z)'
#
#     #FIXME: Duplicated from "00-declare/00-match/pcre.zy", which is bad.
#     :str pcre_operable_name='[a-zA-Z0-9-_]++'
#
#     :str pcre_asciidoc_cross_reference='((?:'${pcre_asciidoc_quote_backtick}'|\b(?:'${pcre_asciidoc_macro_pass}'|'${pcre_asciidoc_macro_plus}'|'${pcre_asciidoc_macro_dollar}')\b|^(?:'${pcre_asciidoc_block_listing}'|'${pcre_asciidoc_block_literal}'|'${pcre_asciidoc_block_comment}'|'${pcre_asciidoc_block_pass}'|'${pcre_asciidoc_block_title_or_line_literal}')$|'${pcre_asciidoc_paragraph_literal}'|.)*?)([$@]\{'${pcre_operable_name}'\}|(?:(alias|func):)?'${pcre_operable_name}'\(\))'
#     :str pcre_asciidoc_suffix='(.*)'
#     :str pcre_asciidoc='\s*+(.*)'
# }
