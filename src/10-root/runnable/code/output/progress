#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2015 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'-/-'
Run commands *progressively* (i.e., with visual progress indicators).
-/-

# ....................{ RUNNERS                            }....................
#FIXME: Shouldn't this be run_code_with_progress_bar()? Much more intelligible, and
#straight forward. Or perhaps "run_code_with_progress_indicator()", which seems a
#bit more agnostic to the output indicator.
#FIXME: Actually, how about renaming this to simply run_code_progressively()?
#Hmm... Nah. That brings the inevitable question to mind: "What does
#'progressively' mean?" Right. Rename to run_code_with_progress_indicator()!
declare_function_with_stdin <<'/---'
[stdout: string, stderr: string, status: integer]
    run_code_with_progress_timer(
        string command_name, string command_arg1, string command_arg2, ...)

Run the passed command, printing a progress timer on standard error displaying
how many seconds have elapsed since running such command. Consider calling
this function on silent and/or slow commands (e.g., `ntpd -q -s`,
synchronizing the local system time against remote time servers but displaying
no progress while doing so).
/---
function run_code_with_progress_timer() {
    # Validate passed arguments.
    die_unless_args 'expected one command'

    #FIXME: If "pv" is *NOT* installed, are there any respectable alternatives?
    #Surely we could cobble together a weak pure-zsh solution, no? I wonder if
    #anything similar's been done in bash, actually...

    # If "pv" (i.e., pipe viewer) is available, pipe such command to "pv".
    if { is_pathable pv } {
        run_code "{
            ${*}
        } | pv -t"
#       print "progress_time: ${@}"; run "${@} | pv -t"
    # Else, simply run such command.
    } else {
        run_code "${@}"
    }
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: This component's getting a bit long in the tooth. Contemplate shifting
#such functions to "os/time/run".
