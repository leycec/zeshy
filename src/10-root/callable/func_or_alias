#!/usr/bin/env zsh
# ====================[ function_or_alias                  ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2017 by Cecil Curry.
# See "LICENSE" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle runnables that may be either functions or aliases.

# ....................{ EXCEPTIONS                         }....................
declare_function '
void die_unless_function_or_alias(
  string runnable_name,
  string error_message = "\"${runnable_name}\" not a function or alias")

Throw an exception unless the passed function or alias exists.
'
function die_unless_function_or_alias() {
    die_unless_args_1_to_2\
        'expected one runnable name and optional error message'
    string runnable_name="${1}"
    :is_func_or_alias "${runnable_name}" or
        :die "${2:-\"${runnable_name}\" not a function or alias}"
}

# ....................{ TESTERS                            }....................
declare_function '
boolean :is_func_or_alias(string runnable_name)

Return true if the passed runnable exists.
'
function :is_func_or_alias() {
    die_unless_arg 'expected one runnable name'
    is_runnable_type_match "${1}" 'function|alias'
}

# ....................{ UNDEFINERS                         }....................
#FIXME: Rename to :undefine_func_or_alias_match() and define a new
#:undefine_func_or_alias() function.
declare_function '
void undefine_runnables_matching(string glob)

Undefine all aliases and functions matching the passed glob.
'
function undefine_runnables_matching() {
    # Validate passed arguments.
    die_unless_arg 'expected one glob'
    string glob="${1}"

    # Undefine such runnables.
    unalias    -m -- "${glob}"
    unfunction -m -- "${glob}"
}

# --------------------( WASTELANDS                         )--------------------
#   string runnable_name="${1}"
#   is_runnable "${runnable_name}" and {
#   }
