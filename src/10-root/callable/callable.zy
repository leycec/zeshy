#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2017 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
*Callables* (i.e., functions, aliases).
/---

# ....................{ EXCEPTIONS                         }....................
#FIXME: Rename to :callable.die_unless().
:func.doc <<'/---'
:void die_unless_function_or_alias(
    :str runnable_name
    ?:str error_message='"${runnable_name}" not a function or alias')

Throw an exception unless the passed *callable* (i.e., function, alias) exists.
/---
function die_unless_function_or_alias() {
    die_unless_args_1_to_2\
        'expected one runnable name and optional error message'
    :str runnable_name=${1}
    :is_func_or_alias "${runnable_name}" :or
        :die "${2:-\"${runnable_name}\" not a function or alias}"
}

# ....................{ TESTERS                            }....................
#FIXME: Rename to :callable.is().
:func.doc <<'/---'
[status=:bool] :is_func_or_alias(:str runnable_name)

Return true if the passed runnable exists.
/---
function :is_func_or_alias() {
    die_unless_arg 'expected one runnable name'
    is_runnable_type_match "${1}" 'function|alias'
}

# ....................{ UNDEFINERS                         }....................
#FIXME: Rename to :callable.undefine_^=() and define a new
#:callable.undefine() function.
:func.doc <<'/---'
:void undefine_runnables_matching(:str glob)

Undefine all aliases and functions matching the passed glob.
/---
function undefine_runnables_matching() {
    # Validate passed arguments.
    die_unless_arg 'expected one glob'
    :str glob=${1}

    # Undefine such runnables.
    unalias    -m -- "${glob}"
    unfunction -m -- "${glob}"
}
