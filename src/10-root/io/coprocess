#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2017 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
*Coprocesses* (i.e., subshells of the current shell with standard input and
output attached to temporary anonymous FIFOs readable and writable only by the
current shell).
/---

# ....................{ SETTERS                            }....................
:func.doc <<'/---'
:void set_string_to_coprocess_output(:str string_name)

Set the string variable with the passed name to all standard output of the
coprocess for the current shell.

If no such coprocess exists, an exception is thrown.
/---
function set_string_to_coprocess_output() {
    die_unless_arg 'Expected one string name.'

    #FIXME: Hmm; actually, wouldn't the following work in a non-blocking
    #manner?
    #
    #    IFS= read -rp -t 0 -d '' "${1}"

    # Set such string. Ideally, the following (slightly more efficient)
    # assignment should also work:
    #
    #     IFS= read -rp -d "" "${1}"
    #
    # Instead, such assignment silently blocks.
    :Str.from_stdin "${1}" <&p
}
