#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2018 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Bind keys to commands for interactive use at the command line. Default
bindings include:

* <Alt-p>, search history for commands starting with the current command-line.
* <Ctrl-r>, search history for commands containing the current command-line.
* <Esc-h>, display the man page for the command in the current command-line.
* `cd -`<Tab>, change to the Nth oldest directory on the directory stack.
* `cd +`<Tab>, change to the Nth newest directory on the directory stack.
/---

#FIXME: Untie key bindings from theme selection, perhaps by adding support for a
#${ZY_KEY_BINDINGS} global in the Zeshy configuration file *AND* separating this
#file into a new "autoload/if_key_bindings/" directory.

# ....................{ EXPANDERS                          }....................
#FIXME: Very much non-ideal, but still wanted. The problem is the glob
#expression matched below: it's too simple. It currently matches *ANYWHERE*
#(e.g., the ".." in "2012~...And Death Said Live"), when ideally it should only
#match at the start of shell word boundaries. Shouldn't be terribly difficult to
#implement. Just do so, eh?

:func.doc <<'/---'
:void expand_zle_buffer_left_ellipses()

Expand `...` to `../..` when typed interactively.
/---
function expand_zle_buffer_left_ellipses() {
    if :is "${LBUFFER}" == *'..' :si
    then LBUFFER+='/..'
    else LBUFFER+='.'
    fi
}

# ....................{ STARTUP                            }....................
:hook.shell_interactive.startup.add startup_zeshy_terminal_zle


:func.doc <<'/---'
:void startup_zeshy_terminal_zle()

Define Zeshy-specific key bindings for the zsh line editor (ZLE).
/---
function startup_zeshy_terminal_zle() {
    die_if_args
    die_unless_shell_interactive

    # Disable flow control key bindings conflicting with those of popular
    # command-line applications (e.g., irssi, rtorrent). Specifically, prevent
    # <Ctrl-s> and <Ctrl-q> from disabling and enabling flow control.
    :stdout.is_terminal and stty -ixon -ixoff

    #FIXME: Wrap builtin "bindkey" in a variety of Zeshy functions. As is the
    #zsh standard, "bindkey" supports an absolutely inspiring plethora of
    #options and arguments. I'm unsure where to even start, really.
    # Implicitly expand "..." to "../.." while typing.
    zle -N    expand_zle_buffer_left_ellipses
    bindkey . expand_zle_buffer_left_ellipses
}
