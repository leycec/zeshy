#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2018 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
*Terminal hooks* (i.e., functions manipulating the current terminal called on
particular shell events).
/---

# ....................{ STARTUP                            }....................
:func.doc <<'/---'
:void ::startup.term()

Reconfigure the current terminal for improved interoperability.

Specifically:

* Permit *meta characters* (i.e., characters with the high bit set) to be both
  input and output.
/---
function ::startup.term() {
    die_if_args
    die_unless_shell_interactive

    # Enable meta character use.
    set meta-flag    on
    set input-meta   on
    set output-meta  on
    set convert-meta off
}


:hook.shell_interactive.startup.add ::startup.term

# ....................{ RESETTERS                          }....................
:func.doc <<'/---'
:void ::term.reset_before_input_run(
    :str history_line :str readable_line :str command)

Reset the terminal attached to the current shell before running the passed
command input by the current user.

Specifically:

* Reset terminal colors to terminal-specific defaults (typically, a white
  foreground on a black background with plain typeface).
* Reset printer function globals. See ${ZY_PRIOR_PRINTER_STDOUT_MTIME} and
  ${ZY_PRIOR_PRINTER_NAME} for further details.
/---
function ::term.reset_before_input_run() {
    # Do *NOT* bother validating sanity, as zsh calls this hook with ignorable
    # options. For the same reason, this hook cannot be reduced to simply
    # calling reset_output_state(), as such function sensibly
    # expects no such arguments. Hence, this function exists solely to ignore
    # such arguments. Slightly overkill, but there you are. *shrug*
    :reset_stdout_state
}


run_hook_before_input_run ::term.reset_before_input_run
