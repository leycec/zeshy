#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2017 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Canonical shell globals, typically but not necessarily POSIX-mandated (e.g.,
${EDITOR}, ${PAGER}).
/---

#FIXME: Yeah... getters are terrible. Good thing we implemented this entire
#parcel as getters. *sigh* That said, the implementation below *IS* fairly
#clever. Retain the cleverness; just convert everything to equivalent setters.

# ....................{ GETTERS                            }....................
:func.doc <<'/---'
string get_pager_path()

Get the absolute path of the pager preferred by the current user. Specifically,
get global ${PAGER}, which if unset set to the first command in the following
list installed in the current user's ${PATH}: `most`, `less`, `more`.
/---
function get_pager_path() {
    die_if_args
    :str.return "${PAGER:=$(get_pathable_path_first most less more)}"
}

:func.doc <<'/---'
string get_list_colors()

Get the colon-delimited string with which `ls` colors output. Specifically,
get global ${LS_COLORS}, which if unset set to the output of `dircolors`.
/---
function get_list_colors() {
    # Validate sanity.
    die_if_args

    # If global ${LS_COLORS} has not yet been set and "dircolors" is available,
    # set such global by evaluating the output of such command as a Bourne shell
    # script. While odd, this remains the canonical method for doing so.
    :not :Var.is LS_COLORS :and :pathable.is dircolors :and
        run_code_under_shell "$(dircolors --sh)" 'sh'

    # Get such colors.
    :str.return "${LS_COLORS}"
}

# ....................{ GETTERS ~ editor                   }....................
:func.doc <<'/---'
string get_editor_path()

Get the absolute path of the editor command preferred by the current user.
Specifically, get global ${EDITOR}, which if unset set to the first command in
the following list installed in the current user's ${PATH}:
`emacs`, `vim`, `vi`, `nano`, `pico`, `ed`.
/---
function get_editor_path() {
    # Emacs precedes Vi[M] not due to any personal preference on the part of
    # Zeshy developers (to the contrary, I largely prefer Vi[M]) but due to the
    # likelihood of only Emacs users installing Emacs. Since most *nix distros
    # package Vi[M] by default, the same cannot be said of Vi[M].
    die_if_args
    :str.return "${EDITOR:=$(get_pathable_path_first\
        emacs vim vi nano pico ed)}"
}

:func.doc <<'/---'
string get_editor_path_visual()

Get the absolute path of the visual editor command preferred by the current
user. Specifically, get global ${VISUAL}, which if unset set to the return value
of get_editor_path().
/---
function get_editor_path_visual() {
    die_if_args
    :str.return "${VISUAL:=$(get_editor_path)}"
}

# ....................{ PRECOMPILERS                       }....................
:run_hook_on_zeshy_precompile precompile_zeshy_zsh_globals

:func.doc <<'/---'
void precompile_zeshy_zsh_globals()

Define canonical shell globals, typically but not necessarily POSIX-mandated:

* ${LS_COLORS}, the `ls` color theme. See get_list_colors().
* ${PAGER}, the absolute path of the preferred pager. See get_pager_path().
* ${EDITOR}, the absolute path of the preferred editor. See get_editor_path().
* ${VISUAL}, mostly synonymous with ${EDITOR}. See get_editor_path_visual().
/---
function precompile_zeshy_zsh_globals() {
    # Validate sanity.
    die_if_args

    # Set such globals as beneficial side effects of calling such functions,
    # discarding function output.
    run_code_silent get_editor_path
    run_code_silent get_editor_path_visual
    run_code_silent get_list_colors
    run_code_silent get_pager_path

    # The string global get_list_colors() defines above transitively depends on
    # system-wide and user-specific "ls" color theme files. Add such files to
    # the list of paths zeshy's user digest file depends on.
    add_zeshy_digest_dependency_path '/etc/DIR_COLORS' "${HOME}/.dir_colors"
}
