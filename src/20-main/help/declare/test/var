#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Document all globals, functions, and aliases declared by @{*-test/var}.
/---

# ....................{ EXCEPTIONS                         }....................
:document_func <<'/---'
:void :die_unless_var_bool(:string:var var_name1, ...)

Throw an exception unless all passed variables are existing booleans. See
:is_bool() for further details.
/---

:document_func <<'/---'
:void :die_unless_var_char(:string:var var_name1, ...)

Throw an exception unless all passed variables are existing characters. See
:is_char() for further details.
/---

:document_func <<'/---'
:void :die_unless_var_float(:string:var var_name1, ...)

Throw an exception unless all passed variables are existing floats. See
:is_float() for further details.
/---

:document_func <<'/---'
:void :die_unless_var_int(:string:var var_name1, ...)

Throw an exception unless all passed variables are existing integers. See
:is_int() for further details.
/---

:document_func <<'/---'
:void :die_unless_var_list(:string:var var_name1, ...)

Throw an exception unless all passed variables are existing lists. See
:is_var_list() for further details.
/---

:document_func <<'/---'
:void :die_unless_var_map(:string:var var_name1, ...)

Throw an exception unless all passed variables are existing maps. See :is_map()
for further details.
/---

:document_func <<'/---'
:void :die_unless_var_string(:string:var var_name1, ...)

Throw an exception unless all passed variables are existing strings. See
:is_string() for further details.
/---

# ....................{ TESTERS                            }....................
:document_func <<'/---'
[status = :bool] :is_var_bool(:string:var var_name1, ...)

Report success if all passed variables are existing booleans. If any such
variable does _not_ exist, an exception is thrown.
/---

:document_func <<'/---'
[status = :bool] :is_var_char(:string:var var_name1, ...)

Report success if all passed variables are existing characters. If any such
variable does _not_ exist, an exception is thrown.
/---

:document_func <<'/---'
[status = :bool] :is_var_float(:string:var var_name1, ...)

Report success if all passed variables are existing floats. If any such
variable does _not_ exist, an exception is thrown.
/---

:document_func <<'/---'
[status = :bool] :is_var_int(:string:var var_name1, ...)

Report success if all passed variables are existing integers. If any such
variable does _not_ exist, an exception is thrown.
/---

:document_func <<'/---'
[status = :bool] :is_var_list(:string:var var_name1, ...)

Report success if all passed variables are existing lists. If any such variable
does _not_ exist, an exception is thrown.
/---

:document_func <<'/---'
[status = :bool] :is_var_map(:string:var var_name1, ...)

Report success if all passed variables are existing maps. If any such variable
does _not_ exist, an exception is thrown.
/---

:document_func <<'/---'
[status = :bool] :is_var_string(:string:var var_name1, ...)

Report success if all passed variables are existing strings. If any such
variable does _not_ exist, an exception is thrown.
/---

# ....................{ TESTERS ~ private                  }....................
:document_func <<'/---'
[status = :bool] ::is_var_type_matches_glob(
    :string:var var_name1, ...,
    :glob type_glob)

Report success if the types of all passed variables match the passed glob. If
any such variable does _not_ exist, an exception is thrown.
/---

# --------------------( WASTELANDS                         )--------------------
