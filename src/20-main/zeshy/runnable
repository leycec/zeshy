#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'-/-'
Handle `zeshy`-specific *runnables* (i.e., aliases and functions defined by the
`zeshy` codebase).
-/-

# ....................{ EXCEPTIONS                         }....................
declare_function_with_stdin <<'/---'
void die_unless_zeshy_runnable(
    string runnable_name,
    string error_message = "${runnable_name}() not a zeshy function or alias")

Throw an exception with the passed message unless the passed runnable exists and
is `zeshy`-specific. See is_zeshy_runnable() for further details.
/---
function die_unless_zeshy_runnable() {
    die_unless_args_1_to_2\
        'expected one runnable name and optional error message'
    string runnable_name="${1}"
    is_zeshy_runnable "${runnable_name}" or
        die "${2:-${runnable_name}() not a zeshy function or alias}"
}

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
[status: boolean]  is_zeshy_runnable(string runnable_name)

Return success if the passed *runnable* (i.e., alias or function) exists and is
*`zeshy`-specific* (i.e., defined under either the system-wide or user-specific
`zeshy` overlay). Since `zeshy` defines neither `zsh` builtins or operators or
external commands, such runnable is necessarily either an alias or function.
/---
function is_zeshy_runnable() {
    # Validate passed arguments.
    die_unless_one_arg 'expected one runnable name'
    string runnable_name="${1}"

    # If such runnable is not an existing alias or function, return failure.
    :is_func_or_alias "${runnable_name}" or report_failure

    #FIXME: This could be rendered dramatically more efficient via map rather
    #than list lookup. I'm unsure we currently define such a map, however; it
    #seems overkill defining one simply to improve efficiency here.
    # If the passed function exists, return true if zeshy defined such function.
    # Since most zeshy runnables are functions, check for functions first.
    if { :func.is "${runnable_name}" } {
        is_list_contains "${ZESHY_FUNCTION_NAMES}" "${runnable_name}" and
            report_status
    # If the passed alias exists, return success if Zeshy defined such alias.
    } else {
        is_list_contains "${ZESHY_ALIAS_NAMES}" "${runnable_name}" and
            report_status
    }
}

# --------------------( WASTELANDS                         )--------------------
#Zeshy-specific runnables are only those zsh aliases and functions
#defined by the Zeshy codebase.
#(despite the simulacra of global aliases)
    #FUXME: Once we define maps from function and alias names to the Zeshy
    #components defining such names, switch this for an is_map_key()-style
    #implementation for *MUCH* better efficiency.
