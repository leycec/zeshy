#!/usr/bin/env zsh
# ====================[ glob                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2014 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Match function names.

# ....................{ GETTERS                            }....................
# string get_functions_matching(string glob)
#
# Get all function names matching the passed glob, delimited by newlines: e.g.,
#
#     >>> get_functions_matching 'get_z*s*h*_version'
#     get_zeshy_version
#     get_zsh_version
function get_functions_matching() {
    # Validate passed arguments.
    die_unless_arg 'expected one glob'

    # Match such glob. Dismantled, this is:
    #
    # * "-fm", matching only function names (rather than all "object" names).
    # * "+", printing only function names (rather than function definitions).
    typeset -fm '+' -- "${1}"
}

# ....................{ SETTERS                            }....................
# void set_list_to_function_matches(string list_name, string glob)
#
# Set the passed list to all function names matching the passed glob: e.g.,
#
#     >>> list function_names
#     >>> set_list_to_function_matches function_names '*test_z[aeou]shy'
#     >>> :string.output ${function_names[1]}
#     unit_test_zeshy
function set_list_to_function_matches() {
    # Validate passed arguments.
    die_unless_args_2 'expected one list name and one glob'
    string list_name="${1}" __glob__="${2}" function_names
    :var.die_unless_type_list "${list_name}"

    # Match such glob.
    function_names="$(get_functions_matching "${__glob__}")"
    set_list_to_string_lines "${list_name}" "${function_names}"
}

# --------------------( WASTELANDS                         )--------------------
