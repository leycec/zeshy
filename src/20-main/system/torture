#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2014 by Cecil Curry.
# See "COPYING" for additional details.

:parcel <<'/---'
Handle *torture testers* (i.e., functions subjecting the current system to
rigorous computational demands, typically for long durations of time to test
system stability).
/---

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
string :torture_system()

Torture test the current system, typically to test system stability.

[CAUTION]
*Monitor system temperatures when running such tests.* If temperatures exceed
acceptable thresholds, *terminate this function immediately*. By definition,
acceptable thresholds differ with make and manufacturer. As a rule of thumb:
+
* Motherboard temperatures should:
** Rarely exceed 65째C.
** _Never_ exceed 70째C.
* CPU temperatures should:
** Rarely exceed 75째C.
** _Never_ exceed 80째C.
/---
function :torture_system() {
    # Validate sanity.
    die_if_args
    die_unless_shell_interactive

    #FIXME: Add support for the Phoronix test suite, available in ~arch. See:
    #  http://www.phoronix-test-suite.com
    #FIXME: Add support for "cpuburn". Ohhhh, ya.

    # Find "mprime", if not installed in the $PATH (as under Gentoo).
    :string torture_command
    if { is_pathable 'mprime' } {
        torture_command='mprime'
    } elif { is_pathable '/opt/gimps/mprime' } {
        torture_command='/opt/gimps/mprime'
    } else {
        die '"mprime" not found in $PATH'
    }

    # Notify the user of impending torture.
    print_message_unboxed\
        'Consider monitoring system temperatures with either "monitor_sensors"'
        'in another shell or your preferred GUI monitor (e.g., "conky"). If'
        'safe thresholds for your system are exceeded, immediately kill this'
        'process with <Ctrl-C>. To repeat: *FAILURE TO MONITOR HEAT WHILE'
        'TORTURING MAY RESULT IN PERMANENT HARDWARE FAILURE*.'

    # Require the user confirm such torture.
    query_character_ignored 'Press any key to begin torture test.'

    # Torture test.
    case "${torture_command}" {
    *mprime) "${torture_command}" -t -w"${ZESHY_TEMPORARY_DIR}";;
    *) die 'something wicked this way sways';;
    }
}

# --------------------( WASTELANDS                         )--------------------
# Handle *system * (i.e., collection of all hardware underlying the
# current operating system).

    #FUXME: Create a new print_message_block_ignoring_newlines(), to permit such
    #messages to be defined in a readable manner.
    #FUXME: "conky" is probably preferable for users having installed that.
    #FUXME: Spawn "monitor_sensors" ourselves for GUI-driven torture tests? Or
    #perhaps not, as users might require CLI output even in such case.
#   print_message 'consider monitoring CPU MCE errors with "mcelog" in another shell.'
    #FUXME: This highlights the need for a new function prefixing each line with
    #the message prefix (e.g., "zeshy: "). This approach of manually splitting
    #lines on an ad-hoc 80 characters obviously doesn't scale. Perhaps name the
    #function print_message_block().
