#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *sorted listers* (i.e., functions listing paths sorted in a manner
_other_ than the default lexicographic order of `ls`).
/---

# ....................{ LISTERS                            }....................
declare_function_with_stdin <<'/---'
[stdout: string, stderr: string, status: int]
    :list_path_verbose_sans_content_sorted_by_mtime_descending(
        string pathname1, ...)

Verbosely list the passed paths themselves -- rather than the content such paths
contain -- with the currently configured `ls`-specific options (e.g.,
${ZESHY_OPTIONS_LS_IF_OS_GNU}), sorted in descending order of *mtime* (i.e., the
last time the contents of such paths were modified). Specifically, for each
such:

* File, verbosely list such filename. (This is unchanged from default `ls`
  behaviour.)
* Directory, verbosely list such directory but neither the files or
  subdirectories such directory contains. (By default, `ls` lists both.)
* Symbolic link, verbosely list such link but not the target of such link. (By
  default, `ls` lists both.)

See list_path_verbosely_with_options() and get_path_mtime() for further details.
/---
function :list_path_verbose_sans_content_sorted_by_mtime_descending() {
    die_unless_args 'Expected one or more pathnames.'
    run_code_with_options_configured 'run_code_paged command ls'\
        'ZESHY_OPTIONS_LS ZESHY_OPTIONS_LS_IF_VERBOSE ZESHY_OPTIONS_LS_SANS_CONTENT_IF_OS_GNU ZESHY_OPTIONS_LS_SORTED_BY_MTIME_IF_OS_GNU'\
        "${(q)@}"
}

# ....................{ LISTERS ~ dir                      }....................
declare_function_with_stdin <<'/---'
string :list_dir_dirs_recursive_sorted_by_mtime_descending(
    string dirname="$(get_dir)")

Recursively verbosely list all directories found under the passed directory
(defaulting to the current directory, if called directly from the command line)
but _not_ the files or subdirectories such directories contain, sorted in
descending order of *directory mtime* (i.e., the last time a path was added to,
removed from, or renamed in such directories). See :get_path_mtime() for
further details.
/---
function :list_dir_dirs_recursive_sorted_by_mtime_descending() {
    # Validate sanity.
    if { is_context_cli_function } {
        die_unless_args_0_to_1 'Expected optional dirname.'
        is_arg or set_args "$(get_dir)"
    } else {
        die_unless_arg 'Expected one dirname.'
    }
    :string dirname="${1}"
    :list dir_dirs

    # List of all such directories. Since path listers internally run "ls" *AND*
    # since even GNU "ls" provides no means of sorting listed paths in argument
    # order, refrain from sorting such directories by mtime from within zsh
    # (e.g., via recursive path glob "**/*(/om)"). Instead, call a path lister
    # below passing "ls" options sorting paths by mtime.
    :set_list_to_dir_dirs_recursive dir_dirs "${dirname}"

    # Print such directories.
    {
        print_message_heading 'Newest "'${dirname}'" Directories'
        :list_path_verbose_sans_content_sorted_by_mtime_descending\
            "${dir_dirs[@]}"
    } | page_stdin
}

# --------------------( WASTELANDS                         )--------------------
# Handle *sorted listers* (i.e., functions listing the pathnames -- as well as
# commonly the metadata and/or directory contents -- of passed directories).
