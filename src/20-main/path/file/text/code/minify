#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *text file minifiers* (i.e., functions compressing software-specific text
file content).
/---

# ....................{ MINIFIERS                          }....................
declare_function_with_stdin <<'/---'
void :minify_file(str filename1, ...)

*Minify* (i.e., compress) the contents of the passed software-specific text
files. See :minify_file_to_file() for further details.
/---
function :minify_file() {
    die_unless_args 'Expected one or more filenames.'
    :string filename
    for  filename ("${@}") {
        :minify_file_to_file "${filename}" "${filename}"
    }
}

declare_function_with_stdin <<'/---'
void :minify_file_to_file(str source_filename, str target_filename)

*Minify* (i.e., compress) the contents of the passed software-specific source
text file into the passed target file. This function currently supports the
following software languages:

* *CSS* (`.css`).
/---
function :minify_file_to_file() {
    # Validate sanity.
    die_unless_args_2 'Expected one source filename and one target filename.'
    :string filename_src="${1}" filename_trg="${2}" filetype function_name
    die_unless_file_text "${filename_src}"

    # Since :set_string_to_file_media_type() is incapable of reliably detecting
    # software language media types (e.g., returning "text/plain" for CSS
    # files), dispatch based on raw filetype rather than 
    :set_string_to_file_type filetype "${filename_src}"

    # Name of the function minifying files of such type.
    function_name=":minify_file_to_file:${filetype}"
    :func.die_unless "${function_name}"\
        "File \"${filename_src}\" type ${filetype} not minifiable (i.e., ${function_name}() not found)."

    #FIXME: If such target file already exists, should we throw an exception or
    #silently remove such file? The former seems quite safer. Or perhaps just
    #let each underlying utility handle that case, yes?

    # Minify such file by calling such function.
    "${function_name}" "${filename_src}" "${filename_trg}"
}

# ....................{ MINIFIERS ~ css                    }....................
declare_function_with_stdin <<'/---'
void :minify_file_to_file:css(str source_filename, str target_filename)

*Minify* (i.e., compress) the contents of the passed source CSS file into the
passed target CSS file.
/---
if { is_pathable yuicompressor } {
    #FIXME: Implement me!
    function :minify_file_to_file:css() {
        die_unless_args_2 'Expected one source filename and one target filename.'
    }
}

# --------------------( WASTELANDS                         )--------------------
#* *JavaScript* (`.js`).
