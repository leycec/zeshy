#!/usr/bin/env zsh
# ====================[ rsync                              ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy rsync.

# ....................{ PRINTERS                           }....................
# string print_rsync_modules(string hostname)
#
# Print a list of rsync modules accessible from the rsync daemon at the passed
# hostname: e.g.,
#
#     >>> print_rsync_modules 'o.isis.com'
#     und
#     osiris
print_rsync_modules() {
    die_unless_one_arg 'expected exactly one hostname'
    rsync --no-motd "${1}"::
}

# ....................{ SYNCHRONIZERS                      }....................
# void rsync_safely(
#   string source_uri1, string source_uri2, ..., string target_uri)
#
# Synchronize the passed source URI to the passed target URI with "rsync",
# passing the ZESHY_RSYNC_OPTIONS* family of default options supplemented by the
# passed custom options. If running under an interactive shell, interactively
# list and require the current user confirm such changes prior to permanently
# doing so. Source and target URIs may be any of the following, "["- and "]"-
# delimiters signifying optional parameters:
#
# * Local paths (e.g., "/zauber/flote/").
# * SSH-style remote paths shuttled under a remote shell transport, specified as
#   "[${username}@]${hostname}:${path}" (e.g., "holle@papa:/gena/").
# * rsync-style remote paths shuttled under the TCP-driven rsync daemon protocol,
#   specified as either "[${username}@]${hostname}::${module}" or
#   "rsync://[${username}@]${hostname}[:${port}]/${module}" (e.g.,
#   "rache@papa::geno", "rsync://herzen@papa:446/geno"). rsync modules are
#   effectively pathnames mapped by the remote rsync daemon to absolute paths on
#   that remote host.
#
# If passing:
#
# * Exactly one source URI directory, such directory should typically be
#   suffixed with a trailing "/". Omitting "/" instructs rsync to create a
#   directory under the target URI directory having the same basename as such
#   directory, a rarely useful instruction.
# * Two or more source URI directories, such directories should typically not be
#   suffixed with a trailing "/". (See above.)
#
# Target URIs should typically be absolute paths.
#
# rsync can behave (un)intentionally destructively under certain options (e.g.,
# "--delete"). As a precaution against potentially catastrophic large-scale
# deletion, we recommend users call rsync_safely() interactively when first
# attempting a new synchronization.
rsync_safely() {
    die_unless_at_least_two_args\
        'expected zero or more rsync options, one or more source URIs, and exactly one target URI'

    # Last source URI and target URI.
    string last_source_uri="${@[-2]}" target_uri="${@[-1]}"

    # Command line to be run.
    list rsync; rsync=( run_slowly rsync "${ZESHY_RSYNC_OPTIONS[@]}" )

    # If either the last source URI or target URI are *NOT* absolute paths, this
    # synchronization is (probably) synchronizing either to or from some remote
    # host. Append appropriate user-configured options (e.g., "--compress").
    is_path_absolute "${last_source_uri}" or
        rsync+=( "${ZESHY_RSYNC_OPTIONS_IF_REMOTE_SOURCE[@]}" )
    is_path_absolute "${target_uri}" or
        rsync+=( "${ZESHY_RSYNC_OPTIONS_IF_REMOTE_TARGET[@]}" )

    # If the current shell is interactive, interactively list and require the
    # current user confirm all filesystem changes to be performed prior to
    # permanently doing so.
    #
    # Run "rsync" deprioritized to avoid resource starvation of other processes.
    if is_shell_interactive; then
        rsync+=( "${ZESHY_RSYNC_OPTIONS_IF_INTERACTIVE[@]}" )

        # List all filesystem changes to be performed prior to doing so and
        # confirm the current user wants to do so.
#       say "running \"${rsync[@]} ${@}\"..."; sleep 2s
        say "fake synchronizing to \"${target_uri}\"..."
        "${rsync[@]}" --dry-run "${@}"
        print
        ask_boolean "really synchronize to \"${target_uri}\"?" or return_false

        # Synchronize.
        print
        say "synchronizing to \"${target_uri}\"..."
        "${rsync[@]}" "${@}"
    # Otherwise, synchronize without interactive confirmation -- riskily unsafe!
    else
        "${rsync[@]}" "${ZESHY_RSYNC_OPTIONS_IF_NON_INTERACTIVE[@]}" "${@}"
    fi
}

#FIXME: Obsolete.
    # Last source URI and target URI, for display purposes.
#   string last_source_uri="\"${@[-2]}\"" target_uri="\"${@[-1]}\""

    # If a possible prior source URI was passed, adjust the last source URI.
#   is_at_least_three_args and last_source_uri="${last_source_uri}, etc."

#       'expected one source URI, one target URI, and optional "rsync" options'

#   string source_uri="$(suffix_string "${1}" '/')" target_uri="${1}"
#   shift_two_args

    # Source and target URIs, suffixing the former with a backslash if not
    # already to satisfy "rsync" requirements. See <USAGE> for "man rsync".
#   string source_uri="$(suffix_string "${1}" '/')" target_uri="${1}"

#   , string option1, string option2, ...
    # List of "rsync" options constructed from default and passed options.
#   list rsync; rsync=( 'rsync' "${ZESHY_RSYNC_OPTIONS[@]}" "${@}" )

    #FIXME: Generalize this for use elsewhere. Specifically, use the
    #deprioritize() function of "always/process".
    # If "nice" and/or "ionice" are installed, run "rsync" under whichever are
    # available to prevent CPU and hard-drive starvation.
#   is_installed nice   and rsync=(   nice -n19    "${rsync[@]}" )
#   is_installed ionice and rsync=( ionice -c2 -n7 "${rsync[@]}" )

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
