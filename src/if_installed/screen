#!/usr/bin/env zsh
# ====================[ screen                             ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Screen, handling "screen"-driven shell multiplexing.

# ....................{ ALIASES                            }....................
interactive_alias screen='screen -U'
interactive_alias scr='restore_screen_session'

# ....................{ PRINTERS                           }....................
# string print_screen_sessions(void)
#
# Print all screen sessions attached to the current user.
print_screen_sessions() {
    die_if_args
    screen -list
}

# ....................{ RUNNERS                            }....................
# void restore_screen_session(string session_name)
#
# Reattach the screen session with the passed name.
restore_screen_session() {
    die_unless_one_arg 'expected one screen session name'
    screen -d -a -A -r -- "${1}"
}

# void screenify(string command, string username = get_username())
#
# Screenify the passed command. Specifically:
#
# * If no screen session named according to the basename of the passed command
#   has been attached to the passed user, then attach a new screen session
#   having this name to this user running the passed command.
# * Otherwise, reattach this existing screen session to this user.
#
# The username defaults to the current user, if not passed.
screenify() {
    die_unless_one_or_two_args 'expected one command and optional username'

    # Parse passed parameters.
    string screen_command="${1}" screen_username screen_session
    screen_username="${2:-$(get_username)}"
    screen_session="$(basename "${screen_command}")"

    #FIXME: Call get_pcre_line_match_count() here rather than "grep".
    # Locate "screen" and check whether or not a session already exists.
#   string screen=$(which_command screen)
    integer screen_session_count
    screen_session_count="$(run_as "${screen_username}" "screen -list | grep --count '\.${screen_session}[[:space:]]'")"

    # screen's argument passing engine is a wee faulty. Order is important in
    # the argument list below, therefore.
    if (( screen_session_count == 0 )); then
        utter "attaching ${screen_session}..."
        run_as "${screen_username}"\
          screen -m -fa -U -S "${screen_session}" "${screen_command}"
    elif (( screen_session_count == 1 )); then
        utter "reattaching ${screen_session}..."
        run_as "${screen_username}" screen -d -a -A -r "${screen_session}"
    else
        die "${screen_session_count} \"${screen_session}\" screen sessions already started"
    fi
}
