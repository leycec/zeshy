#!/usr/bin/env zsh
# ====================[ keychain                           ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Keychain, enabling SSH and GnuPG key caching with "keychain".

# ....................{ FUNCTIONS                          }....................
# void setup_keychain(void)
#
# Cache SSH and GnuPG keys for the current user, if not already cached.
setup_keychain() {
    die_if_args

    # If "ssh-agent" is already running and hence caching SSH keys, return
    # immediately. "Nothing to see here, folks..."
    is_running ssh-agent or return_true

    # Remove all currently cached keys from the keychain, for safety.
    keychain --clear

    #FIXME: Insufficient. "id_edcsa" (or some such) is also valid. Instead, call
    #the existing get_ssh_public_key_file() function of Zeshy SSH.

    # If a permissible SSH public key exists for this user, cache it.
    string ssh_key_filename
    ssh_key_filename="$(get_first_file_if_found "${HOME}/.ssh/id_rsa" "${HOME}/.ssh/id_dsa")" and
        source_script_safely_command_output 'sh'\
            "keychain --eval --quick '${ssh_key_filename}'"
}

# --------------------( WASTELANDS                         )--------------------
# Remove all cached keys from the keychain, for safety. Note that all calls
# to this script must temporarily clear any "${GREP_OPTIONS}" when doing so,
# as this script expects default "grep" options. (Fair enough, friend.)
#GREP_OPTIONS='' keychain --clear
