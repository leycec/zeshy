#!/usr/bin/env zsh
# ====================[ xrandr                             ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy XRandR, handling X11-specific resolution and refresh rate handling.
#
# --------------------( TODO                               )--------------------
# * Add an "xrdb" component as well, implementing useful commands on top of
#   "xrdb -query" (e.g., "xrdb -query | grep dpi").

# ....................{ EXCEPTIONS                         }....................
# bool die_unless_x_output(
#   string output_name, string error_message = 'not an X11 output')
#
# Throw an exception unless the passed X11 output_string exists.
die_unless_x_output() {
    die_unless_args_1 'expected one output_string name'
    string output_name="${1}"
    is_x_output "${output_name}" or
        die "${2:-\"${output_name}\" not an X11 output}"
}

# ....................{ TESTS                              }....................
# bool is_x_output(string output_name)
#
# Return true if the passed X11 output_string exists.
is_x_output() {
    die_unless_args_1 'expected one output_string name'
    string refresh_rate="${1}"
}

# ....................{ GETTERS                            }....................
# string get_x_default_output(void)
#
# Get the default X11 output.
get_x_default_output() {
    die_if_args

    #FIXME: Have we implemented this function? I suspect not.
    get_string_line "$(list_x_outputs)" 1
}

# ....................{ LISTERS                            }....................
# string list_x_outputs(void)
#
# List all X11 outputs delimited by newline.
list_x_outputs() {
    die_if_args

    # "xrandr" appears to be the only tool available for listing X11 outputs.
    # Unfortunately, "xrandr" exposes no explicit interface for such outputs;
    # hence, manually parse such outputs from its own output.
    string xrandr_output; xrandr_output="$(xrandr)"

    #FIXME: Ugh; shouldn't be *TOO* hard. Just have to do it... *sigh*
    list_line_match_pcrees
}

#FIXME: Also add setters for "--dpi" and "--mode", as in "~/.zshrc".

# ....................{ SETTERS                            }....................
# void set_x_refresh_rate(
#   string refresh_rate, string output_name = get_x_default_output_name())
#
# Set the refresh rate of the passed X11 output_string (defaulting to the first such
# output) to the passed rate.
set_x_refresh_rate() {
    # Localize passed arguments.
    die_unless_args_1_to_2 'expected one refresh rate and one output_string name'
    string refresh_rate="${1}"
    if is_args_0
    then xrandr --rate "${refresh_rate}"
    else
        output_name="${2:-get_x_default_output()}"
        xrandr --output "${output_name}" --rate "${refresh_rate}"
    fi
}

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#
# Copyright 2007-2012 by Cecil Curry.
#
#   http://www.raiazome.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
