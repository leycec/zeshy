#!/usr/bin/env zsh
# ====================[ grub2-install                      ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle GRUB2, a Linux boot loader.

# ....................{ INSTALLERS                         }....................
document_function '
void install_grub2_to_disk(string device_filename = "/dev/sda")

Install GRUB2 to the Master Boot Record (MBR) of the passed disk and a
corresponding GRUB2 boot image to the "grub" subdirectory of the boot partition.
'
function install_grub2_to_disk() {
    # Validate passed arguments.
    die_unless_args_0_to_1 'expected one device filename'
    string device_filename="${1:-/dev/sda}"
    die_unless_disk "${device_filename}"

    #FIXME: The disk should probably be unmounted, no?
#   die_if_mounted_disk "${device_filename}"

    # If interactively confirmed, install GRUB2.
    is_response_yes_strongly_for_question\
        "really overwrite the Master Boot Record (MBR) of \"${device_filename}\" with GRUB2?" and {
        mount_boot_partition_writable

        #FIXME: The boot partition doesn't necessarily mount to "/boot".
        #"grub2-install" defaults to such directory but also accepts an option
        #"--boot-directory=DIR", which we should probably always explicitly
        #pass. To do so, we'll need some means of reliably discerning the
        #"/boot" directory, probably leveraging "/etc/fstab". I'm thinking
        #we'll probably want to Google this one a bit, however.
        grub2-install "${device_filename}"
    }
}

# ....................{ MAKERS                             }....................
#FIXME: It'd be nice to add an "always" block unmounting "/boot" if unmounted
#before entering this function, both to preserve security and user expectations.
#Do this everywhere else boot is mounted, as well.

document_function '
void make_grub2_boot_image(void)

Update the current kernel, initramfs, and GRUB2 installation to reflect
recent system changes (e.g., kernel upgrades). Specifically, in order:

* Rebuild and reinstall the current kernel (e.g., "/usr/src/linux") to
  "/boot/kernel-${kernel_version}".
* Reinstall the current initramfs (defined by ${ZESHY_INITRAMFS_HOME}) to
  "/boot/initramfs-${kernel_version}.img", if such directory exists.
* Update the GRUB2 configuration file "/boot/grub2/grub.cfg" accordingly.
'
function make_grub2_boot_image() {
    # Validate sanity.
    die_if_args

    # Update kernel installation.
    say_heading 'kernel'
    make_kernel

    # Update initramfs installation, if available.
    is_dir "${ZESHY_INITRAMFS_HOME}" and {
        say_heading 'initramfs'
        make_initramfs
    }

    # Update GRUB2.
    say_heading 'grub2'
    make_grub2_boot_configuration_file
}

document_function '
void make_grub2_boot_configuration_file(void)

Update the GRUB2 configuration file on the "/boot" partition to reflect the
set of all currently installed scripts and kernel and initramfs images.
'
function make_grub2_boot_configuration_file() {
    # Validate sanity.
    die_if_args

    # Mount the "/boot" partition writably.
    mount_boot_partition_writable

    # Update the GRUB2 configuration file.
    string grub2_config_file='/boot/grub2/grub.cfg'
    say "updating \"${grub2_config_file}\"..."
    grub2-mkconfig -o "${grub2_config_file}"
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to make_grub2_boot_image_image().
#FUXME: Add an alias to update_grub2_boot_image().
#   interactively say 'updating "/boot"...'
# Update the GRUB2 installation on the "/boot" partition or install GRUB2 on
# such partition if not previously with the current GRUB2 configuration.
# provides a one-stop-shop to
# updating the system after a change (e.g.,
# machine to reflect recent kernel, initramfs,
# and/or GRUB2 changes (e.g., kernel upgrades).
#
# Update the GRUB2 configuration file and install all images such file expects.
#
# Specifically, in order:
# Assuming the current kernel, optional initramfs, and GRUB2 installation to be
# properly configured, this function seemlessly updates the current machine to reflect
# recent changes (e.g., kernel upgrades, initramfs edits).
