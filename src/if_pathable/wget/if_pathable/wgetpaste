#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2018 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Handle `wgetpaste`, a shell script uploading text files to *pastebin providers*
(i.e., public websites temporarily publishing uploaded text files).
/---

# ....................{ UPLOADERS                          }....................
#FIXME: Add support for alternative pasters.
#FIXME: Actually, this is *DAMN* silly. Just reimplement wgetpaste in zeshy. The
#fewer external dependencies in the core zeshy codebase, by far the better.
#We'll probably still need at least one of either "curl" or "wget", but that's
#still quite an improvement. (Indeed, since "wgetpaste" strictly requires "wget",
#abstracting out such pasting to use either "curl" or "wget" as dynamically
#available is already a demonstrable improvement.)
#FIXME: Accept multiple filenames.

:func.doc <<'/---'
void pastebin_file(string filename)

Upload the contents of the passed file to the default pastebin provider
currently configured with such utility. The resulting upload will be publicly
accessible in plaintext format.
/---
function pastebin_file() {
    # Validate sanity.
    die_unless_arg 'Expected one filename.'
    string pastebin_file="${1}"

    # Paste such file.
    print_message_item "Pastebinning \"${pastebin_file}\"..."
    get_file_text "${pastebin_file}" | command wgetpaste --raw --verbose
}

# --------------------( WASTELANDS                         )--------------------
#Handle *text file pastebinning* (i.e., uploading text files to public websites
#temporarily publishing such files).
# p, and hence best applicable for logs.
