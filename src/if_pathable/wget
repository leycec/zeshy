#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'-/-'
Handle `wget`, a CLI downloader.
-/-

# ....................{ CANONICALIZERS                     }....................
#FIXME: This is also implementable via 'curl -sI "${url}"'. Do so.
#FIXME: After doing so, rename to canonicalize_url() and shift to a more
#general-purpose parcel -- say, "always/net/url".
#FIXME: Documentation could certainly use sprucing up. Add a proper example.

declare_function_with_stdin <<'/---'
string wget_resolve_url(string url)

Transitively resolve the passed URL of all intermediary redirects. For
example, if http://dieoff.com redirected to http://holoceneextinction.com
redirected to http://raiazome.com, then this function prints the final URL,
"http://raiazome.com".
/---
function wget_resolve_url() {
    # Validate sanity.
    die_unless_arg 'expected one URL'
    string url="${1}" url_resolved wget_output

    # Run "wget". Dismantled, this is:
    #
    # * "-t 1" to prevent retrying, if the first attempt fails.
    # * "--spider" to prevent actual retrieval of page content.
    # * "-O -" to permit redirection to a pipe.
    #
    # Redirect standard error to output, as "wget" requires us to do so.
    wget_output="$(wget --max-redirect=0 --spider --tries=1 -O - "${url}" 2>&1)"

    # If such URL redirects to another URL, return the latter.
    if { url_resolved="$(get_string_text_matching_glob_group_if_found\
        "${wget_output}" 'Location: '([^ ]##)' ' 1)" } {
        return_string "${url_resolved}"
    # Else, return such URL as is.
    } else {
        return_string "${url}"
    }
}

# --------------------( WASTELAND                          )--------------------
    # Avoid running under "try" as that currently fails to interpret shell
    # sensitive characters properly (e.g., "&"), and redirect stderr to stdout
    #FUXME: This is broken. What did we replace match_multiline_first_group()
    #with, again? Given the simplicity of the PCRE, shift to using a glob instead.
