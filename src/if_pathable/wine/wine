#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2015 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Handle `wine`, the popular Windows API compatibility layer.
/---

# ....................{ ALIASES                            }....................
#FIXME: Nice, but insufficient. If the executable to be run exists under the
#current WINEPREFIX (or the default WINEPREFIX "~/.wine" if no such global is
#set), this works perfectly; else, it attempts to run such executable under the
#current WINEPREFIX rather than the WINEPREFIX in which such executable resides,
#which is rarely the right thing to do. Hence, replace this with:
#
#    :alias_command_filetype exe='run_wine_command_disowned'
#
#run_wine_command_disowned() should be implemented to:
#
#* Iteratively search upwards from such executable's path for the WINEPREFIX
#  containing such executable.
#* If no such WINEPREFIX exists, throw an exception.
#* Else, temporarily set WINEPREFIX to such dirname and run such executable: e.g.,
#    WINEPREFIX="${wine_dirname}" run_code_disowned wine "${exe_filename}"
#
#Note that we also need to implement similar iterative searching upwards in
#@{git} to find the top-level "git" directory containing the passed path. I
#strongly suspect "zsh" provides an efficient means of searching upwards;
#research online and reap the sweet rewards. ;}

:alias_command_filetype ':void exe(:string... args?)' 'run_code_disowned wine' <<'/---'
Run Windows executables under Wine.
/---

:alias_command_filetype ':void msi(:string... args?)' 'run_code_disowned msiexec' <<'/---'
Run Windows installers under Wine's ``MSI Installer`` implementation.
/---

# ....................{ CONFIGURERS                        }....................
declare_function_with_stdin <<'/---'
void configure_wine()

Graphically configure the current WINEPREFIX.
/---
function configure_wine() {
    die_if_args
    run_code_disowned command winecfg
}

declare_function_with_stdin <<'/---'
void configure_wine_windows()

Run Wine's ``Control Panel'' implementation in the current WINEPREFIX.
/---
function configure_wine_windows() {
    die_if_args
    run_code_disowned command wine control
}

declare_function_with_stdin <<'/---'
void configure_wine_windows_registry()

Run Wine's `regedit32` implementation in the current WINEPREFIX for graphically
editing the system-wide Windows registry.
/---
function configure_wine_windows_registry() {
    die_if_args
    run_code_disowned command wine regedit
}

declare_function_with_stdin <<'/---'
void uninstall_wine_programs()

Run Wine's ``Add & Remove Programs'' implementation in the current WINEPREFIX.
/---
function uninstall_wine_windows_programs() {
    die_if_args
    run_code_disowned command wine uninstaller
}

# ....................{ APPLICATIONS                       }....................
declare_function_with_stdin <<'/---'
void wine_explorer()

Run Wine's ``Explorer'' implementation in the current WINEPREFIX.
/---
function wine_explorer() {
    die_if_args
    run_code_disowned command wine explore
}

declare_function_with_stdin <<'/---'
void wine_internet_explorer(string filename = "")

Run Wine's ``Internet Explorer'' implementation in the current WINEPREFIX.
/---
function wine_internet_explorer() {
    run_code_disowned command wine iexplore "${@}"
}

declare_function_with_stdin <<'/---'
void wine_notepad(string filename = "")

Run Wine's ``Notepad'' implementation in the current WINEPREFIX.
/---
function wine_notepad() {
    run_code_disowned command wine notepad "${@}"
}

declare_function_with_stdin <<'/---'
void wine_wordpad(string filename = "")

Run Wine's ``Wordpad'' implementation in the current WINEPREFIX.
/---
function wine_wordpad() {
    run_code_disowned command wine wordpad "${@}"
}

# ....................{ LIFECYCLE                          }....................
declare_function_with_stdin <<'/---'
void reboot_wine()

Reboot the Windows installation in the current WINEPREFIX.
/---
function reboot_wine() {
    # Do not pass option "--restart", which fails to startup Windows.
    die_if_args
    command wineboot
}

declare_function_with_stdin <<'/---'
void shutdown_wine()

Shutdown the Windows installation in the current WINEPREFIX.
/---
function shutdown_wine() {
    die_if_args
    command wineboot --shutdown
}

# --------------------( WASTELANDS                         )--------------------
# Run Windows executables under Wine.
# Run Windows installers under Wine's "MSI Installer" implementation.

# ....................{ APPLICATIONS ~ admin               }....................
#declare_function '
#void wine_uninstaller(string program_name = "")
#
#Run Wine's administrator-specific "Add & Remove Programs" implementation in the
#current WINEPREFIX.
#'
#function wine_uninstaller() {
#    run_code_disowned wine uninstaller "${@}"
#}

