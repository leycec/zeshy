#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

:parcel <<'---'
Handle `hg`, the CLI for the Mercurial revision control system.
---

# ....................{ ALIASES                            }....................
#FIXME: Shift to an "hg"-specific configuration file.
alias_cli_abbreviation {hg}{r}emoved{l}ist='get_hg_files_removed'
alias_cli_abbreviation {hg}{r}emoved{m}atch='get_hg_files_removed_matching_glob'
alias_cli_abbreviation {hg}{r}emoved{r}ecover='recover_hg_file_removed_in_revision'

# ....................{ GETTERS                            }....................
declare_function_with_stdin <<'/---'
string get_hg_files_removed()

List all removed files in the current Mercurial repository, delimited by
newline.
/---
function get_hg_files_removed() {
    #FIXME: zeshify.
    die_if_args
    command hg log --template '\"{file_dels}\" removed in revision {rev}.\n' |
        grep -v '^\"\"'
}

#FIXME: Switch to a glob pattern instead.
declare_function_with_stdin <<'/---'
string get_hg_files_removed_matching_glob(string grep_pattern)

Find the removed file in the current Mercurial repository whose filename
corresponds to the passed grep pattern.
/---
function get_hg_files_removed_matching_glob() {
    # Validate sanity.
    die_unless_arg 'Expected one grep expression.'
    string grep_pattern="${1}"

    # Match such files.
    print_message_item "Finding removed files matching \"${grep_pattern}\"..."
    get_hg_files_removed | grep "${ZESHY_OPTIONS_GREP[@]}" "^${grep_pattern}"
}

# ....................{ RECOVERERS                         }....................
declare_function_with_stdin <<'/---'
void recover_hg_file_removed_in_revision(
    string filename, integer revision_integer)

Recover the removed file from the current Mercurial repository corresponding
to the passed revision of the passed file. This function is intended to be
called after manually calling get_hg_files_removed_matching_glob() to find the
most recent revision number containing such file.
/---
function recover_hg_file_removed() {
    # Validate sanity.
    die_unless_args_2 'Expected one filename and one revision number.'
    string removed_file="${1}" revision_integer="${2}"
    :int.die_unless_positive "${revision_integer}"

    # Recover such files.
    print_message_item\
        "Recovering \"${removed_file}\" from revision ${revision_integer}..."
    command hg revert -r ${revision_integer} "${removed_file}"
}

# --------------------( WASTELANDS                         )--------------------
#== Commands ==
#
#Additional commands, for which this script provides no aliases or functions
#due to innate riskiness, include:
#     # Revert the repository to the remote master.

# on a separate line,
#formatted:
#    "${removed_filename}" removed in revision ${revision_integer}.

#FUXME: Obsolete.
#print_hg_removed_files() {
#   die_if_args
#   print_message 'listing removed files...'
#   page _get_hg_files_removed
#}
