#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'-/-'
Handle `keychain`, a CLI front end to both `ssh-agent` and `gpg-agent` for
caching SSH and GnuPG keys.
-/-

#FIXME: "keychain" is a single bash script that hasn't been updated since 2010
#and in all likelihood is dormant. Reimplement in pure zeshy to eliminate yet
#another unfortunate dependency.

# --------------------( STARTUP                            )--------------------
run_hook_on_zeshy_startup_if_login startup_zeshy_login_keychain

declare_function_with_stdin <<'/---'
void startup_zeshy_login_keychain(void)

Cache available SSH and GnuPG keys configured by the current user if not already
cached.
/---
function startup_zeshy_keychain() {
    # Validate sanity.
    die_if_args
    string ssh_key_filename

    # If "ssh-agent" is already running and hence caching SSH
    # keys, return immediately. ("Nothin' to see here, folks...")
    if { is_command_running ssh-agent } {
        return_true
    }

    #FIXME: Insufficient. "id_edcsa" (or some such) is also valid. Instead, call
    #the existing get_ssh_key_public_file_default() function of zeshy SSH.

    # If a permissible SSH public key exists for this user, cache it.
    ; ssh_key_filename="$(get_file_first_if_found\
        "${HOME}/.ssh/id_rsa" "${HOME}/.ssh/id_dsa")" and
        run_command_under_shell "$(keychain --eval --quick "${ssh_key_filename}")" 'sh'
}

# --------------------( WASTELANDS                         )--------------------
    # Remove all currently cached keys, for safety.
#   command keychain --clear

# ....................{ STARTUP                            }....................
#run_hook_on_zeshy_startup_if_login startup_zeshy_keychain

#declare_function '
#void startup_zeshy_keychain(void)
#
#Cache available SSH and GnuPG keys for the current user, if not already cached.
#'
#function startup_zeshy_keychain() {
#    # Validate sanity. If "ssh-agent" is already running and hence caching SSH
#    # keys, return immediately. ("Nothin' to see here, folks...")
#    die_if_args
#    is_command_running ssh-agent or return_true
#
#    # Remove all currently cached keys, for safety.
#    keychain --clear
#
#    #FUXME: Insufficient. "id_edcsa" (or some such) is also valid. Instead, call
#    #the existing get_ssh_public_key_file() function of Zeshy SSH.
#
#    # If a permissible SSH public key exists for this user, cache it.
#    string ssh_key_filename; ssh_key_filename="$(get_file_first_if_found\
#        "${HOME}/.ssh/id_rsa" "${HOME}/.ssh/id_dsa")" and
#        run_command_under_shell "$(keychain --eval --quick "${ssh_key_filename}")" 'sh'
#}

# Remove all cached keys from the keychain, for safety. Note that all calls
# to this script must temporarily clear any "${GREP_OPTIONS}" when doing so,
# as this script expects default "grep" options. (Fair enough, friend.)
#GREP_OPTIONS='' keychain --clear
