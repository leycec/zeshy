#!/usr/bin/env zsh
# ====================[ keychain                           ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle SSH and GnuPG key caching with "keychain".

# ....................{ STARTUP                            }....................
append_startup_zeshy_command_if_shell_login startup_zeshy_keychain

document_function '
void startup_zeshy_keychain(void)

Cache available SSH and GnuPG keys for the current user, if not already cached.
'
function startup_zeshy_keychain() {
    # Validate sanity. If "ssh-agent" is already running and hence caching SSH
    # keys, return immediately. ("Nothin' to see here, folks...")
    die_if_args
    is_running ssh-agent or return_true

    # Remove all currently cached keys, for safety.
    keychain --clear

    #FIXME: Insufficient. "id_edcsa" (or some such) is also valid. Instead, call
    #the existing get_ssh_public_key_file() function of Zeshy SSH.

    # If a permissible SSH public key exists for this user, cache it.
    string ssh_key_filename; ssh_key_filename="$(get_file_first_if_found\
        "${HOME}/.ssh/id_rsa" "${HOME}/.ssh/id_dsa")" and
        run_under_shell "$(keychain --eval --quick "${ssh_key_filename}")" 'sh'
}

# --------------------( WASTELANDS                         )--------------------
# Remove all cached keys from the keychain, for safety. Note that all calls
# to this script must temporarily clear any "${GREP_OPTIONS}" when doing so,
# as this script expects default "grep" options. (Fair enough, friend.)
#GREP_OPTIONS='' keychain --clear
