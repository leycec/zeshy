#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2014 by Cecil Curry.
# See "COPYING" for additional details.

:parcel <<'-/-'
Handle `xrandr`, a CLI utility configuring the X11 RandR protocol (e.g., screen
resolution and refresh rate).
-/-

#FIXME: Add an "xrdb" parcel as well, implementing useful commands on top of
#"xrdb -query" (e.g., "xrdb -query | grep dpi").

# ....................{ EXCEPTIONS                         }....................
declare_function_with_stdin <<'/---'
void die_unless_x_output(
    string output_name,
    string error_message = "\"${output_name}\" not an X11 output")

Throw an exception with the passed message unless the passed X11 output exists.
/---
function die_unless_x_output() {
    die_unless_arg 'expected one output name'
    string output_name="${1}"
    is_x_output "${output_name}" or
        :die "${2:-\"${output_name}\" not an X11 output}"
}

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
[status: boolean] is_x_output(string print_name)

Return success if the passed X11 output exists.
/---
function is_x_output() {
    die_unless_arg 'expected one output name'
    is_string_line "$(get_x_outputs)" "${1}"
}

# ....................{ GETTERS                            }....................
declare_function_with_stdin <<'/---'
string get_x_output_default()

Get the default X11 output name.
/---
function get_x_output_default() {
    die_if_args
    get_string_line "$(get_x_outputs)" 1
}

declare_function_with_stdin <<'/---'
string get_x_outputs()

List all X11 output names, delimited by newline.
/---
function get_x_outputs() {
    # Validate sanity.
    die_if_args

    # "xrandr" appears to be the only tool available for listing X11 outputs.
    # Unfortunately, "xrandr" exposes no explicit interface for such outputs.
    # Hence, match such outputs from its human-readable output. The first shell
    # word of every line whose second shell word matches either "disconnected"
    # or "connected" is such an output.
    for_string_line_words "$(command xrandr)"\
        'is "${word[2]}" == ("dis"|)"connected" si and
            :string.output "${word[1]}"'
}

# ....................{ SETTERS ~ rate                     }....................
#FIXME: Also add setters for "--dpi" and "--mode", as in "~/.zshrc".

declare_function_with_stdin <<'/---'
void set_x_refresh_rate(float refresh_rate)

Set the refresh rate of the default X11 output to the passed float (e.g., 75.0).
/---
function set_x_refresh_rate() {
    # Validate passed arguments.
    die_unless_arg 'expected one refresh rate'
    string refresh_rate="${1}"
    die_unless_float "${refresh_rate}"

    # Set such rate.
    command xrandr --rate "${refresh_rate}"
}

declare_function_with_stdin <<'/---'
void set_x_output_refresh_rate(string output_name, float refresh_rate)

Set the refresh rate of the passed X11 output to the passed float (e.g., 75.0).
Consider calling get_x_outputs() for a list of such outputs.
/---
function set_x_output_refresh_rate() {
    # Validate passed arguments.
    die_unless_args_2 'expected one output name and one refresh rate'
    string output_name="${1}" refresh_rate="${2}"
    die_unless_x_output "${output_name}"
    die_unless_float "${refresh_rate}"

    # Set such rate.
    command xrandr --output "${output_name}" --rate "${refresh_rate}"
}

# --------------------( WASTELANDS                         )--------------------
