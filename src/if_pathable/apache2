#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

:parcel <<'/---'
Handle the *Apache HTTP Server.*
/---

# ....................{ PRINTERS                           }....................
declare_function_with_stdin <<'/---'
string :print_apache2()

Print a human-readable synopsis of the currently running Apache HTTP Server.
Such synopsis includes the following metadata:

* Version.
* Compile-time build parameters.
* Compile-time static modules.
* Dynamic shared modules (DSOs).
/---
function :print_apache2() {
    # Validate sanity.
    die_if_args

    # Print such synopsis.
    {
        print_message_heading 'Apache Version and Build Parameters'
        command apache2 -V

        print_message_heading 'Apache Modules (Loaded)'
        command apache2 -M

        print_message_heading 'Apache Modules (Static)'
        command apache2 -l

        print_message_heading 'Apache Settings (Virtual Host)'
        command apache2 -S
    } | page_stdin
}

# ....................{ TAILERS                            }....................
#FIXME: Generalize such useful functionality into a cross platform-portable
#tail function.

function tail_apache2_access_log() {
    # Validate sanity.
    die_if_args
    :int terminal_height

    # Height of the current terminal.
    :set_int_to_terminal_height terminal_height

    # Tail such log.
    run_code_as_superuser tail\
        -f\
        -n "${terminal_height}"\
        '/var/log/apache2/access_log'
}

function tail_apache2_error_log() {
    # Validate sanity.
    die_if_args
    :int terminal_height

    # Height of the current terminal.
    :set_int_to_terminal_height terminal_height

    # Tail such log.
    run_code_as_superuser tail\
        -f\
        -n "${terminal_height}"\
        '/var/log/apache2/error_log'
}

# --------------------( WASTELANDS                         )--------------------
    # :string apachectl_print_file

    #FUXME: Horrible!
    # # Temporary file to which we write Apache output.
    # apachectl_print_file=$(which_temporary_file 'print_apache2')

    # # Append Apache-specific :string.output to this file.
    # command apachectl -V  >> "${apachectl_print_file}"
    # output_         >> "${apachectl_print_file}"
    # command apachectl -MS >> "${apachectl_print_file}"
    # print         >> "${apachectl_print_file}"
    # command apachectl fullstatus >> "${apachectl_print_file}"

    # # Show it. Kill it.
    # page "${apachectl_print_file}"
    # rm   "${apachectl_print_file}"
