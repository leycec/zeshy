#!/usr/bin/env zsh
# ====================[ all                                ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy All. This Zeshy components imports all other Zeshy dependencies in a
# "system-sensitive" manner: i.e., importing only specific dependencies
# relevant to the current system.
#
# --------------------( TODO                               )--------------------
# * All binary-specific functions (e.g., screenify()) should be moved into a new
#   "zeshy/command/" directory, with one file under that directory per binary:
#   "zeshy/command/screen", "zeshy/command/mysql", and so forth. Then, the
#   "zeshy/command/main" dynamically imports all scripts in that directory
#   (ignoring itself, of course) which are also installed on the current system.
#   Bloody sweet, no? Though one could quite see that becoming expensive
#   quickly. Long-term, an autoload solution is far more elegant.

# ....................{ PREAMBLE                           }....................
# If this script has already been imported in the current shell process, destroy
# all existing aliases and functions. This is, of course, fairly destructive but
# does guard against desynchronization issues resulting from modification to the
# current Zeshy installation (e.g., as when upgrading).
if [[ $(whence -w import_all) =~ ': function' ]]; then
    unalias    -m '*'
    unfunction -m '*'
fi

# Zeshy home directory, if not already set.
[[ -n "${ZESHY_HOME}" ]] ||
    export ZESHY_HOME=$(readlink --canonicalize-existing "$(dirname "${0}")/..")

# ....................{ DEPENDENCIES                       }....................
# void _import_all(void)
#
# Import all Zeshy dependencies relevant for the current system. Typically, this
# means:
#
# * All scripts immediately under "zeshy/".
# * All scripts under "zeshy/distro" corresponding to the current distribution
#   (e.g., "zeshy/distro/exherbo" on Exherbo systems).
_import_all() {
    # Source "zeshy.core" prior to importing all other dependencies, as that
    # script defines the import() function (called below).
    [[ $(whence -w import) =~ ': function' ]] ||
        source "${ZESHY_HOME}/zeshy/core"
    
    # Source all shell scripts whose names start with "zeshy/" in this directory,
    # as these scripts constitute the set of all dependencies for this script.
    # 
    # Importation order is not important, as all dependencies use the "import"
    # mechanism to specifically import their sub-dependencies as required.
    local script_path
    for   script_path in "${ZESHY_HOME}/zeshy"/*; do
#       [[ -f "${script_path}" && ! (\
#           $(basename "${script_path}") =~ '^(\..*|all|core)$' ) ]] &&
        [[ $(basename "${script_path}") =~ '^(\..*|all)$' ]] ||
            import "${script_path}"
    done
}

# ....................{ OPTIONS                            }....................
# Permit input and output of meta characters (i.e., characters having the eighth
# bit set). Do not do this in Zeshy Core (although that would be preferable), as
# that appears to add these arguments to the current argument list "${@}".
set meta-flag    on
set input-meta   on
set output-meta  on
set convert-meta off

# ....................{ MAIN                               }....................
_import_all

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyleft 2007-2010 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
