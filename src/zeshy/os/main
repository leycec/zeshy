#!/usr/bin/env zsh
# ====================[ os                                 ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy System. This Zeshy component implements operating system-specific
# functionality: typically, harvesting metadata from such subsystems as the
# "/proc" and "/sys" pseudo-filesystems (under Linux).

# ....................{ IMPORTS                            }....................
import zeshy/string

# void _import_all_os(void)
#
# Import all Zeshy dependencies relevant for the current Linux system. This
# means:
#
# * All scripts under "zeshy/distro" corresponding to the current distribution
#   (e.g., "zeshy/distro/exherbo" on Exherbo systems).
_import_all_os() {
    local os_script_path="${ZESHY_HOME}/zeshy/os/$(get_os_name)"
    [[ -d "${os_script_path}" ]] && import "${os_script_path}"
}

# ....................{ METADATA                           }....................
# void get_os_name(void)
#
# Get the (strictly lowercase) name of the distro running on the current system:
# e.g.,
#
#     >>> get_os_name
#     freebsd   # under FreeBSD systems
#     gnu-linux # under GNU/Linux systems
get_os_name() {
    # "uname" reports Linux as "GNU/Linux", so replace backslashes with dashes.
    local os_name=$(lowercase $(uname --operating-system))
    os_name="${os_name//\//-}"
    echo "${os_name}"
}

# ....................{ DISK ~ cleaning                    }....................
# void clean_machine(void)
#
# Safely clean this machine of all transient files and directories.
clean_machine() {
    #FIXME: Prefix this with an interactive query: "Are you SURE you want...?"
    #Also, it would be nice to implement a clever "distfile" cleaner that ONLY
    #removed distfiles for which there is no corresponding installed version.
    if is_runnable ccache; then
        utter "cleaning \"ccache\"..."
        try_as_superuser ccache -C
    fi
    
    local cleanable_dir
    for   cleanable_dir in "/var/tmp/paludis/build/"; do
        if [[ -d "${cleanable_dir}" ]]; then
            utter "cleaning \"${cleanable_dir}\"..."
            try_as_superuser rm -rf "${cleanable_dir}"/*
        fi
    done
}

# ....................{ MEMORY                             }....................
# show_memory()
#
# Print an overview of current memory use, including free and used RAM in MB. 
show_memory() {
    [[ "${#}" -eq 0 ]] || die 'expected no arguments'
    utter "showing memory use in megabytes..."
    try free -mt
}

# ....................{ MAIN                               }....................
_import_all_os

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyleft 2007-2010 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
