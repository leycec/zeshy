#!/usr/bin/env zsh
# ====================[ server                             ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Server. This Zeshy component implements client/server functionality.

# ....................{ DEPENDENCIES                       }....................
import zeshy/file

# ....................{ APACHE                             }....................
# void apache-about()
#
# Print Apache-specific metadata, including:
#
# * Version.
# * Compile-time build parameters.
# * Compile-time static modules.
# * Dynamic shared modules (i.e., DSOs).
apache-about() {
    [[ "${#}" -eq 0 ]] || die 'expected no arguments'

    # Temporary file to which we write Apache output.
    apachectl_output_file=$(which_temporary_file 'apache-about')

    # Append Apache-specific output to this file.
    try apachectl -V >> "${apachectl_output_file}"
    try echo "" >> "${apachectl_output_file}"
    try apachectl -MS >> "${apachectl_output_file}"
    try echo "" >> "${apachectl_output_file}"
    try apachectl fullstatus >> "${apachectl_output_file}"

    # Show it; kill it.
    less "${apachectl_output_file}"
    rm "${apachectl_output_file}"
}

# ....................{ MYSQL                              }....................
# void mysql-about()
#
# Print MySQL-specific metadata, including:
#
# * Version.
mysql-about() {
    [[ "${#}" -eq 0 ]] || die 'expected no arguments'

    # Temporary file to which we write Apache output.
    mysql_output_file=$(which_temporary_file 'mysql-about')

    # Append Apache-specific output to this file.
    try mysql -V >> "${mysql_output_file}"

    # Show it; kill it.
    less "${mysql_output_file}"
    rm "${mysql_output_file}"
}

# void mysql-set-password(char *username, char *password)
#
# Set the passed password for the passed MySQL username. Username defaults to
# "root", if not passed.
mysql-set-password() {
    [[ "${#}" -ge 1 ]] || die 'expected at least a password'

    local username password
    if [[ -n "${2}" ]]; then
        username="${1}"
        password="${2}"
    else
        username="root"
        password="${1}"
    fi

    utter "setting \"${username}\" password..."
    try mysqladmin -u "${username}" password "${password}"
}

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyleft 2007-2010 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
