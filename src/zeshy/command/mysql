#!/usr/bin/env zsh
# ====================[ mysql                              ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy MySQL. This Zeshy component handles MySQL functionality.

# ....................{ IMPORTS                            }....................
zimport zeshy/file

# ....................{ MYSQL SHELL                        }....................
# Aliases.
alias mysql=mysql_shell

# MySQL options for the interactive MySQL shell.
typeset -ax ZESHY_MYSQL_SHELL_OPTIONS
ZESHY_MYSQL_SHELL_OPTIONS=(
    --pager=less
    --auto-rehash
    --column-names
    --compress
    --ignore-case
    --line-numbers
    --named-commands
    --no-beep
    --password
    --reconnect
    --secure-auth
    --show-warnings
    --sigint-ignore
    --skip-comments
    --table
)

# void mysql(char *username = 'root', char *password, ...)
#
# Run the interactive MySQL shell with sane option defaults under the passed
# username and password. Username defaults to "root", if not passed.
mysql_shell() {
    local username password
    if [[ -n "${2}" ]]; then
        username="${1}"
        password="${2}"
        shift
        shift
    elif [[ -n "${1}" ]]; then
        username="${1}"
        shift
    else
        username=root
    fi

    # Yes, the absence of a space after "-p" is intentional. Thanks, MySQL!
    utter "logging in as \"${username}\"..."
    command mysql "${ZESHY_MYSQL_OPTIONS[@]}" -u "${username}" -p"${password}" "${@}"
}

# ....................{ GETTERS                            }....................
# void mysql_info()
#
# Print MySQL-specific metadata, including:
#
# * Version.
mysql_info() {
    [[ ${#} -eq 0 ]] || die 'expected no arguments'

    # Temporary file to which we write Apache output.
    local mysql_output_file=$(which_temporary_file 'mysql-about')

    # Append Apache-specific output to this file.
    try mysql -V >> "${mysql_output_file}"

    # Show it; kill it.
    less   "${mysql_output_file}"
    try rm "${mysql_output_file}"
}

# ....................{ SETTERS                            }....................
# void mysql_set_password(char *username = 'root', char *password)
#
# Set the passed password for the passed MySQL username. Username defaults to
# "root", if not passed. Note that new users are best created via interactive
# "CREATE USER" SQL commands entered as the root user: e.g.,
#
#     # Enter the interactive MySQL shell.
#     mysql
#
#     # Create a new user and password.
#     CREATE USER 'new_username'@'localhost' IDENTIFIED BY 'password_for_new_username';
#
#     # Assign privileges to this user.
#     GRANT ALL ON *.* TO 'new_username'@'localhost';
#
#     # And... we're done.
#     exit
mysql_set_password() {
    [[ ${#} -ge 1 ]] || die 'expected at least a password'

    local username password
    if [[ -n "${2}" ]]; then
        username="${1}"
        password="${2}"
    else
        username="root"
        password="${1}"
    fi

    utter "setting \"${username}\" password..."
    try mysqladmin -u "${username}" password "${password}"
}

# ....................{ MUTATORS                           }....................
# void mysql_make_database(char *database_name,
#     char *username = 'root',  char *password = null)
#
# Make a new database using the passed MySQL username. The username defaults to
# the "root" user and the password defaults to nothing, in which case MySQL
# interactively queries you for that user's password.
mysql_make_database() {
    [[ "${#}" -ge 1 ]] || die 'expected at least one database name'

    local database_name="${1}"
    local username="${2:-root}"
    local password="${3}"
    
    utter "creating database \"${database_name}\" as user \"${username}\"..."
    try mysqladmin -u "${username}" -p create "${database_name}"
}

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2011 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
