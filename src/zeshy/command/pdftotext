#!/usr/bin/env zsh
# ====================[ pdftotext                          ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy pdftotext. This Zeshy component handles "pdftotext" functionality, a
# command-line utility for extracting plaintext from Adobe PDF files.

# ....................{ DEPENDENCIES                       }....................
zimport zeshy/shell/terminal

# ....................{ FUNCTIONS                          }....................
# void pdftotext_dir(char *dirname)
#
# Run "pdftotext" on all PDF files in the passed directory.
pdftotext_dir() {
    die_unless_at_least_one_argument\
        'expected no arguments or an optional dirname'
    string dirname="${1:-${PWD}}"

    utter "extracting plaintext from PDF files in \"${dirname}\"..."
    try pushd "${dirname}"

    # Do not bother dying if "pdftotext" fails, as it occasionally does on
    # poorly formatted PDF files.
    find -iname '*.pdf' -exec pdftotext {} \;

    try popd
}

# ....................{ GREP                               }....................
# void grep_pdf(char *pattern, char *filename1, ..., char *filenameN)
#
# Grep the passed PDF files for the passed pattern.
grep_pdf() {
    die_unless_at_least_one_argument\
        "expected one regular expression and zero or more filenames"

    string pattern="${1}"; shift
    list filenames;             filenames=( "${@}" )
    is_nonempty "${filenames[@]}" or filenames=( *.pdf(N) )
#   echo "files: ${filenames[@]}"

    for filename in "${filenames[@]}"; do
        is "${filename}" == *.pdf si or continue
        print_banner #"==============================================================================="
        utter "grepping \"${filename:t}\"..."
        print_banner
        pdftotext "${filename}" - | grep ${=ZESHY_GREP_OPTIONS} "${pattern}"
    done
}

grep_pdf_page() {
    zpage grep_pdf "${@}"
}

# ....................{ ALIASES                            }....................
#FIXME: It'd be far more elegant to rewrite grep_recursively() to manually
#recurse over files rather than leverage the "--recurse" option and, for each
#found PDF file, to call pdftotext() prior to calling grep on that file.
#Somewhat more work than I'm willing to invest in at the moment, however.
alias grpdf="grep_pdf_page"

#   echo "grepping: ${filenames[@]}"
#FIXME: Obsolete.
#die "\"${filename}\" not a PDF file" #| "${PAGER}"

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
