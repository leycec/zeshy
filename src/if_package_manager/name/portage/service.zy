#!/usr/bin/env zeshy
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2017 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Gentoo services and runlevels.
/---

#FIXME: It would be helpful to add support for systemd-style services. Hmm...

# ....................{ ALIASES                            }....................
#FIXME: Terrible. Transition to configurable aliases.
alias_cli rca='add_portage_service_to_runlevel'
alias_cli rcr='remove_portage_service_from_runlevel'
alias_cli rcs='start_portage_service'
alias_cli rco='stop_portage_service'
alias_cli rcl='print_portage_services'

# ....................{ GETTERS                            }....................
:func.doc <<'/---'
:str get_portage_service_home()

Absolute path of the directory containing Gentoo services.
/---
function get_portage_service_home() {
    #FIXME: I have no idea how to account for Gentoo Prefix, here and elsewhere.
    die_if_args
    :str service_home='/etc/init.d'
    die_unless_dir "${service_home}"
    :str.return "${service_home}"
}


:func.doc <<'/---'
:str get_portage_service_file(:str service_name)

Absolute path of the Gentoo service with the passed name.
/---
function get_portage_service_file() {
    die_unless_arg 'expected one service name'
    :str service_file; service_file="$(get_portage_service_home)/${1}"
    die_unless_file "${service_file}"
    :str.return "${service_file}"
}

# ....................{ PRINTERS                           }....................
:func.doc <<'/---'
:str print_portage_services()

Print a human-readable synopsis of Gentoo services and runlevels.
/---
function print_portage_services() {
    die_if_args
    :str is_terminal_color

    if { is_terminal_color } {
        is_terminal_color='yes'
    } else {
        is_terminal_color='no'
    }

    #FIXME: Should probably be transitioned to the conventional
    #run_code_with_options() model.
    command eselect --colour=${is_terminal_color} rc show --all --unused |
        page_stdin
}

# ....................{ SETTERS                            }....................
:func.doc <<'/---'
:void add_portage_service_to_runlevel(:str service_name +:str runlevels)

Add the passed Gentoo service to the passed runlevels (defaulting to
`default`, the customary runlevel).
/---
function add_portage_service_to_runlevel() {
    die_unless_args 'expected one service name and optional runlevels'
    command eselect rc add "${@}"
}


:func.doc <<'/---'
:void remove_portage_service_from_runlevel(:str service_name +:str runlevels)

Remove the passed Gentoo service from the passed runlevels (defaulting to
`default`, the customary runlevel).
/---
function remove_portage_service_from_runlevel() {
    die_unless_args 'expected one service name and optional runlevels'
    command eselect rc delete "${@}"
}

# ....................{ RUNNERS                            }....................
#FIXME: These are general enough to warrant extracting out to a new generalized
#parcel for managing system services and daemons -- say, "os/service".
:func.doc <<'/---'
:void start_portage_service(+:str service_names)

Start the passed Gentoo services, implicitly stopping before starting such
services if currently running.
/---
function start_portage_service() {
    die_unless_args 'expected at least one service name'
    command eselect rc restart "${@}"
}


:func.doc <<'/---'
:void stop_portage_service(+:str service_names)

Stop the passed Gentoo services.
/---
function stop_portage_service() {
    die_unless_args 'expected at least one service name'
    command eselect rc stop "${@}"
}
