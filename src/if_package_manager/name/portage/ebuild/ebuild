#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2014 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'/---'
Handle Gentoo ebuilds.
/---

# ....................{ MAKERS                             }....................
declare_function_with_stdin <<'/---'
void make_ebuild_manifest:(string ebuild_filename = "")

Updates or creates if not currently found the `Manifest` file for the passed
ebuild (defaulting to the newest ebuild in the current directory, if called
directly from the command line). This function resolves errors resembling:

    !!! Fetched file: howl-6.3.1926.tar.bz2 VERIFY FAILED!
    !!! Reason: Insufficient data for checksum verification

See `man ebuild` for further details.
/---
function make_ebuild_manifest:() {
    # Validate sanity.
    if { is_context_cli_function } {
        die_unless_args_0_to_1 'Expected optional filename.'
        is_arg or :args.set "$(get_dir)"
    } else {
        die_unless_arg 'Expected one filename.'
    }
    string ebuild_filename="${1}"

    # If the passed argument is a directory, default to the last ebuild in such
    # directory. The "ebuild" command behaves the same regardless of which
    # ebuild we pass it, so this selection is entirely arbitrary.
    if { is_dir "${ebuild_filename}" } {
        # List all ebuild files in the passed directory.
        string ebuild_dirname="${ebuild_filename}"
        list ebuild_filenames
        ebuild_filenames=( "${ebuild_dirname}/"*.ebuild )

        # Arbitrarily select the last in lexicographic order.
        die_unless_list_nonempty ebuild_filenames\
            "\"${ebuild_dirname}\" contains no ebuilds."
        ebuild_filename="${ebuild_filenames[-1]}"
    }

    # Make such manifest.
    die_unless_file "${ebuild_filename}"
    command ebuild  "${ebuild_filename}" manifest
}

# ....................{ WASTELANDS                         }....................
