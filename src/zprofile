#!/bin/zsh
# ====================[ zprofile                           ]====================
#                     [ Time-stamp: "2009-04-18 19:23:19 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Run after "zshenv" but before "zshrc" and "zlogin", for login shells.
#
# --------------------( VARIABLES                          )--------------------
# This script aggregates all environment variables into one file. Note that many
# distros dis-aggregate such environment variables into separate files under
# "/etc/env.d/", which they then programmatically aggregate into a composite
# "/etc/profile.env" file, which this script then sources. Since this tends to
# make for a rather clumsy and overly abstract means of defining environment
# variables, Zeshy prefers to "simply" clump such variables together, here.

# ....................{ PREAMBLE                           }....................
# Absolute path to the current script.
local zprofile_path="$(readlink --canonicalize-existing "${0}")"

# Directory having the current script.
[[ -n "${ZESHY_HOME}" ]] ||
    export ZESHY_HOME=$(readlink --canonicalize-existing "$(dirname "${zprofile_path}")/..")

# Import Zeshy Core.
if [[ $(whence -w zimport) =~ ': function' ]]
then zimport zeshy/core
else source "${ZESHY_HOME}/src/zeshy/core"
fi

# Inform the user that this script is being imported.
utter_import "${zprofile_path}"

# ....................{ IMPORTS                            }....................
zimport zeshy/file
zimport zeshy/number
zimport zeshy/os
zimport zeshy/shell

# ....................{ PROPERTIES                         }....................
# 077 would be more secure, but 022 is generally quite realistic.
umask 022

# ....................{ IMPORTS                       }....................
# Add Zeshy's "site-functions/" to the function path, if that directory exists.
[[ -n "${ZESHY_HOME}" && -d "${ZESHY_HOME}/site-functions" ]] &&
    FPATH="${ZESHY_HOME}/site-functions:${FPATH}"

# Import all shell scripts under "/etc/profile.d/", if that directory exists.
# Unlike "/etc/env.d/" shell scripts, which perform simple variable assignments,
# these scripts perform more complex (and therefore time- and space-consumptive)
# functionality. Fortunately, however, there rarely tend to be many of them.
if [[ -d /etc/profile.d ]]; then
    local shell_options=${-}

    setopt nullglob
    local profile_script_path
    for   profile_script_path in /etc/profile.d/*.sh; do
        [[ -r "${profile_script_path}" ]] && source "${profile_script_path}"
    done
    unsetopt nullglob

    set -${shell_options}
    unset sh
fi

# If "/etc/profile.env" exists, import it. Several popular Linux distributions
# programmatically aggregate this file as follows:
#
# * Under Gentoo, "env-update" from the files in "/etc/env.d/".
# * Under Exherbo, "eclectic env update" from the files in "/etc/env.d/".
[[ -e /etc/profile.env ]] && source /etc/profile.env
export PATH

# ....................{ PATHS                              }....................
# Set the user-specific $PATH.
PATH_init

# Read X.Org application defaults from this path.
export XAPPLRESDIR="${HOME}/.X"
make_directory_if_not_found "${XAPPLRESDIR}"

# ....................{ *NIX                               }--------------------
# Enable Unicode support, if not already enabled.
[[ -n "${LANG}"   ]] || export LANG="en_US.utf8"
[[ -n "${LC_ALL}" ]] || export LC_ALL="en_US.utf8"

# Enable a default command-line editor and pager, if not already enabled.
[[ -n "${EDITOR}" ]] || export EDITOR=$(which_binaries_nonfatal emacs vim nano ed)
[[ -n "${PAGER}"  ]] || export PAGER=$(which_binaries_nonfatal less more)

# ....................{ ZSH                                }....................
# Enable an in-memory cache of ZSH history; persist this history to some file.
export HISTSIZE=1024  # maintain this number of lines of history
export SAVEHIST=1024  # ..retain this number of lines of history between logins
export HISTFILE="${ZESHY_CACHE_HOME}/history"

# ....................{ NET                                }--------------------
#FIXME: Only do so if Firefox is installed.
# Disable Firefox's Pango-enabled font antialiasing on low-end machines.
export MOZ_DISABLE_PANGO=$([[ $(get_memory_total) -ge GB ]] || echo 1)

# Enable SSH over non-anonymous (i.e., non-pserver) CVS.
export CVS_RSH=ssh

export PATH
#FIXME: Obsolete.
# Lastly, export munged paths into our caller's shell environment.
#export MANPATH INFOPATH

#FIXME: Hmm; and what, prey tell, is this?
#export XUSERFILESEARCHPATH="${XAPPLRESDIR}/%N"
#make_directory_if_not_found "${XAPPLRESDIR}" "${XUSERFILESEARCHPATH}"

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyleft 2007-2011 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
