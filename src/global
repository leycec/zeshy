#!/usr/bin/env zsh
# ====================[ globals                            ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# ZeshyInit Globals, declaring globals of universal applicability to most other
# Zeshy components and scripts.

# ....................{ INTEGERS                           }....................
# "nice"-specific highest and lowest priority for CPU scheduling of processes.
global_integer ZESHY_NICE_PRIORITY_HIGH='-20' ZESHY_NICE_PRIORITY_LOW='19'

# "ionice"-specific highest and lowest priority pairs consisting of class and
# ioniceness for I/O scheduling of processes. Processes assigned to class 3
# signify "idle-only" processes to be scheduled only when no other process
# performs I/O. Since such processes are likely to suffer scheduling starvation,
# we omit class 3 from consideration.
global_integer\
    ZESHY_IONICE_CLASS_HIGH='1' ZESHY_IONICE_CLASS_LOW='2'\
    ZESHY_IONICE_CLASS_PRIORITY_HIGH='0' ZESHY_IONICE_CLASS_PRIORITY_LOW='7'

# ....................{ COMMANDS                           }....................
# "less"-specific options, as required by commands calling "less" (e.g., "man").
global_string LESS="${LESS:--R}"

# ....................{ I18N                               }....................
#FIXME: Is this globally safe? This should be safe assuming no terminal device.
#If this shell is attached to a terminal device, however, we should probably
#only accept UTF-8 output under terminal devices accepting such input. Perhaps
#the terminfo database publishes such details? Investigate.
# Enable Unicode support, if not already enabled.
global_string LANG="${LANG:-en_US.utf8}" LC_ALL="${LC_ALL:-en_US.utf8}"

# ....................{ PATHS                              }....................
# Directory hosting Zeshy scripts only conditionally needed during bootstrap.
global_string ZESHY_AUXILIARY_DIR="${ZESHY_SOURCE_DIR}/if_needed"

# Directory hosting Zeshy scripts whose functions are autoloadable.
global_string ZESHY_AUTOLOAD_DIR="${ZESHY_SOURCE_DIR}/autoload"
global_string\
    ZESHY_AUTOLOAD_CORE_DIR="${ZESHY_AUTOLOAD_DIR}/always"\
    ZESHY_AUTOLOAD_COMMAND_DIR="${ZESHY_AUTOLOAD_DIR}/if_installed"\
    ZESHY_AUTOLOAD_DISTRO_DIR="${ZESHY_AUTOLOAD_DIR}/if_distro"\
    ZESHY_AUTOLOAD_THEME_DIR="${ZESHY_AUTOLOAD_DIR}/if_theme"

# ....................{ PATHS ~ user                       }....................
# User-specific Zeshy dot directory. If ${HOME} is the root directory, this is
# probably a cronjob, in which case this directory resides under "/var".
if is "${HOME}" == '/' si
then global_string ZESHY_DOTDIR='/var/cache/zeshy'
else global_string ZESHY_DOTDIR="${HOME}/.zeshy"
fi

# Zeshy script setting the globals defined under "CONFIGURATION", below.
global_string ZESHY_CONFIG_FILE="${ZESHY_DOTDIR}/config"

# File to which compinit() caches its configuration. 
global_string ZESHY_COMPINIT_FILE="${ZESHY_DOTDIR}/compinit"

# File to which Zeshy caches its version specifier (e.g., to detect upgrades).
global_string ZESHY_VERSION_FILE="${ZESHY_DOTDIR}/version"

# Directory to which Zsh caches completions.
global_string ZESHY_COMPLETION_DIR="${ZESHY_DOTDIR}/completion"

# Directory to which Zeshy compiles itself. Since such compilation necessarily
# depends on user-specific configuration (e.g., theme selection, command $PATH),
# Zeshy recompiles itself under each user.
global_string ZESHY_DIGEST_FILE="${ZESHY_DOTDIR}/digest.zwc"

# ....................{ PATHS ~ user ~ history             }....................
# Maximum number of lines of Zsh command-line history to persist.
global_integer HISTSIZE="${HISTSIZE:-1024}"

# Maximum number of lines of Zsh command-line history to retain between logins.
global_integer SAVEHIST="${SAVEHIST:-1024}"

# File to which Zsh persists command-line history.
global_string  HISTFILE="${HISTFILE:-${ZESHY_DOTDIR}/history}"

# ....................{ CONFIGURATION                      }....................
# Zeshy configuration settings, set on sourcing the system- and user-specific
# Zeshy configuration file below.
global_bool\
    ZESHY_IS_DEBUG
global_string\
    ZESHY_INITRAMFS_HOME\
    ZESHY_THEME
global_list\
    ZESHY_CP_OPTIONS\
    ZESHY_CP_OPTIONS_IF_INTERACTIVE\
    ZESHY_CP_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_DIFF_OPTIONS\
    ZESHY_DIFF_OPTIONS_IF_INTERACTIVE\
    ZESHY_DIFF_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_DU_OPTIONS\
    ZESHY_DU_OPTIONS_IF_INTERACTIVE\
    ZESHY_DU_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_GREP_OPTIONS\
    ZESHY_GREP_OPTIONS_IF_INTERACTIVE\
    ZESHY_GREP_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_LESS_OPTIONS\
    ZESHY_LN_SYMBOLIC_OPTIONS\
    ZESHY_LN_SYMBOLIC_OPTIONS_IF_INTERACTIVE\
    ZESHY_LN_SYMBOLIC_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_LS_OPTIONS\
    ZESHY_LS_OPTIONS_IF_INTERACTIVE\
    ZESHY_LS_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_LS_OPTIONS_IF_CONCISE\
    ZESHY_LS_OPTIONS_IF_VERBOSE\
    ZESHY_LS_OPTIONS_IF_RECURSIVE\
    ZESHY_MYSQL_SHELL_OPTIONS\
    ZESHY_MV_OPTIONS\
    ZESHY_MV_OPTIONS_IF_INTERACTIVE\
    ZESHY_MV_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_NL_OPTIONS\
    ZESHY_NL_OPTIONS_IF_INTERACTIVE\
    ZESHY_NL_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_RM_OPTIONS\
    ZESHY_RM_OPTIONS_IF_INTERACTIVE\
    ZESHY_RM_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_RSYNC_OPTIONS\
    ZESHY_RSYNC_OPTIONS_IF_INTERACTIVE\
    ZESHY_RSYNC_OPTIONS_IF_NON_INTERACTIVE\
    ZESHY_RSYNC_OPTIONS_IF_REMOTE_SOURCE\
    ZESHY_RSYNC_OPTIONS_IF_REMOTE_TARGET 

# ....................{ MAIN                               }....................
() {
    # Make the Zeshy dot directory for the current user, if needed.
    mkdir -p "${ZESHY_DOTDIR}" 

    # Copy the default to a user-specific Zeshy configuration file, if the
    # latter is not found.
    if is not -f "${ZESHY_CONFIG_FILE}" si; then
        utter "fabricating \"${ZESHY_CONFIG_FILE}\"..."
        cp "${ZESHY_AUXILIARY_DIR}/config" "${ZESHY_CONFIG_FILE}"
    fi

    #FIXME: Nice try; but there's a new game in town. See Zeshy Core. The
    #specific problem with this is that it's slow. The config file is
    #increasingly large. We don't want to source it twice. But we also don't
    #want an empty or small user config file, since that renders the upgrade
    #process opaque (and also makes debugging by the user quite troublesome:
    #where is that global being set again and why?). The user can *CHOOSE* to
    #have a small local config, if they like; but that's a choice. This isn't.

    # Load the default and user-specific Zeshy configuration files, the former
    # ensuring all globals at least have some default value and the latter
    # replacing such value with user-specific settings.
#   source "${ZESHY_CONFIG_FILE_DEFAULT}"
    source "${ZESHY_CONFIG_FILE}"

    #FIXME: O.K.; technically, this works -- but not here, as we have yet to
    #autoload Zeshy. This is a fairly complex operation. (Can we reduce it to
    #more efficient Zsh builtins and ideally simply glob matching?)
    # Determine whether or not this process is running is a cronjob. This is
    # adapted from this itworld.com article, "Am I being run by cron?":
    #        http://www.itworld.com/Comp/3380/nls_unixcron041209/index.html
    # 
    # Do this prior to uttering imports, as the utter() function requires this.
#    string cron_pids="$(pgrep -x cron)"
#    integer grandparent_pid="$(ps -eo ppid,pid= | grep " ${PPID}$" | awk '{print $1}')"
#    ZESHY_IS_CRONJOB="$(one_if match_multiline "^${cron_pids}$" "${grandparent_pid}")"
#   echo "cron: ${ZESHY_IS_CRONJOB}; cron_pids: ${cron_pids}; gpid: ${grandparent_pid}"
}

#FIXME: Obsolete.
# ....................{ BOOLEANS                           }....................
# If non-empty, the current process is running as a cronjob. (Set below.)
#global_bool ZESHY_IS_CRONJOB

# Directory to which Zeshy mounts media.
#global_string ZESHY_MOUNT_HOME='/media'

# Directory to which Zeshy mounts ISOs.
#global_string ZESHY_MOUNT_ISO_PATH="${ZESHY_MOUNT_HOME}/iso"

# ....................{ STRINGS                            }....................
#FIXME: Erhm; I suspect the following global to be largely obsolete, now. (Or,
#at best, only applicable to Zeshy scripts requiring require().)
# Basename for all "main" Zeshy scripts. These are scripts Zeshy looks for when
# a caller attempts to import a path rather than a file: e.g.,
#
#     # Actually imports "zeshy/${ZESHY_MAIN_SCRIPT_BASENAME}", instead.
#     >>> zimport zeshy
#global_string ZESHY_MAIN_SCRIPT_BASENAME='.main'

#is_empty "${ZESHY_SCRIPT_NAME}" and
# Human-readable name of the current script. This is used only for output.
# Scripts are welcome to redefine it globally; likewise, functions are welcome
# to redefine it locally. (Set below.)
#global_string ZESHY_SCRIPT_NAME

# Directory to which Zeshy caches scripts implicitly compiled by zimport().
#global_string ZESHY_CACHE_COMPILATION_DIR="${ZESHY_DOTDIR}/compilation"

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
