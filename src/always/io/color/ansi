#!/usr/bin/env zsh
# ====================[ ansi                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle color-specific ANSI escape codes.
#
# --------------------( SEE ALSO                           )--------------------
# https://en.wikipedia.org/wiki/ANSI_escape_code
#   Excrutiatingly helpful dissection of ANSI escape codes.

# ....................{ GLOBALS                            }....................
document_global '
string ZESHY_ANSI_CSI

2-byte ANSI Control Sequence Introducer (CSI) prefixing all ANSI escape
sequences, equivalent to "<Esc>[".
'
ZESHY_ANSI_CSI=$'\E\['

document_global '
map ZESHY_ANSI_SGR

Map from lowercase Select Graphics Rendition (SGR) ANSI name to value.
'
ZESHY_ANSI_SGR=(
    reset 0

    # Attribute enablers.
    bold       1
    weak       2
    italic     3
    underline  4
    blink      5
    reverse    7
    conceal    8
    normal    22

    # Attribute disablers.
    italic_off    23
    underline_off 24
    blink_off     25
    reverse_off   27
    conceal_off   28

    # Foreground colors.
    black   30
    red     31
    green   32
    yellow  33
    blue    34
    magenta 35
    cyan    36
    white   37
    default 39

    # Background colors.
    black_background   40
    red_background     41
    green_background   42
    yellow_background  43
    blue_background    44
    magenta_background 45
    cyan_background    46
    white_background   47
    default_background 49

    # Foreground high-intensity colors.
    black_intense   90
    red_intense     91
    green_intense   92
    yellow_intense  93
    blue_intense    94
    magenta_intense 95
    cyan_intense    96
    white_intense   97
    default_intense 99

    # Background high-intensity colors.
    black_intense_background   100
    red_intense_background     101
    green_intense_background   102
    yellow_intense_background  103
    blue_intense_background    104
    magenta_intense_background 105
    cyan_intense_background    106
    white_intense_background   107
    default_intense_background 109
)

document_global '
string ZESHY_ANSI_SGR_NEXT

1-byte ANSI Select Graphics Rendition (SGR) delimiter separating subsequences
in all graphics-specific ANSI escape codes.
'
ZESHY_ANSI_SGR_NEXT=';'

document_global '
string ZESHY_ANSI_SGR_SUFFIX

1-byte ANSI Select Graphics Rendition (SGR) suffix for all graphics-specific
ANSI escape codes.
'
ZESHY_ANSI_SGR_SUFFIX='m'

document_global '
string ZESHY_ANSI_SGR_GLOB

Glob matching Select Graphics Rendition (SGR)-suffixed ANSI escape codes.
'
# Dismantled, this is:
#
# * (...)m", matching zero or more Select Graphic Rendition (SGR)
#   parameters also referred to as color indices:
#   * "|", matching the empty string and hence the ANSI escape code
#     "CSI m" identical to "<Esc>[0m" resetting all SGR parameters.
#   * "[0-9](#c1,3)", matching an 8-bit integer expressed as one to three
#     digits as the first SGR parameter.
#   * "(;[0-9](#c1,3))##", matching zero or more sequences of a semicolon
#     followed by an 8-bit integer as all following SGR parameters.
ZESHY_ANSI_SGR_GLOB="(|[0-9](#c1,3)(${ZESHY_ANSI_SGR_NEXT}[0-9](#c1,3))##)${ZESHY_ANSI_SGR_SUFFIX}"

# ....................{ GETTERS                            }....................
document_function '
integer get_string_length_printable_sans_ansi_colors(
  string text1, string text2, ...)

Get the total length of the passed strings in multibyte characters *AFTER*
removing ANSI color codes from such strings.
'
function get_string_length_printable_sans_ansi_colors() {
    die_unless_args 'expected at least one string'
    get_string_length_printable "$(remove_string_ansi_colors "${@}")"
}

# ....................{ REMOVERS                           }....................
document_function '
string remove_string_ansi_colors(string text1, string text2, ...)

Remove all ANSI color codes from the passed string. The resulting string will
retain non-color ANSI escapes (e.g., "\033[J", clearing from the current
cursor to the end of the screen).
'
function remove_string_ansi_colors() {
    # Avoid calling remove_string_matches(). zsh fails with "bad pattern" when
    # expanding ${ZESHY_ANSI_CSI} as a glob expression (e.g., as
    # "${~ZESHY_ANSI_CSI}").
    die_unless_args 'expected at least one string'
    print_string "${*//${ZESHY_ANSI_CSI}${~ZESHY_ANSI_SGR_GLOB}}"
}

# --------------------( WASTELANDS                         )--------------------
# Unfortunately, zsh fails with a "bad pattern" error when aggregating the
# following CSI and SGR globs into a single glob. Gotta keep them separated.
