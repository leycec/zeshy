#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'______________<heredoc?>______________'
Handle low-level *printer functions* (i.e., functions printing strings without
maintaining globals tracking standard output state). See @{print} for further
details.
______________<heredoc?>______________

# ....................{ OUTPUTTERS                         }....................
declare_function_with_stdin <<'/---'
string output_string_colored(string text1 = "", string text2, ...)

Print the passed strings (defaulting to the empty string) to standard output
suffixed by a newline _without_ handling or tracking state for standard output.
Specifically:

. Reset color attributes for the current terminal to such terminal's defaults.
. Print such strings in **raw mode** (i.e., printing embedded escape sequences
  such as `\n` as is rather than converting such sequences to the corresponding
  characters). See output_string() for further details.
. Reset color attributes for the current terminal again.

See print_string() for further details.
/---
function output_string_colored() {
    reset_terminal_color
    output_string "${*}"
    reset_terminal_color
}

declare_function_with_stdin <<'/---'
string print_hard_rule(void)

Print a *hard rule* (i.e., horizontal line) to standard output.
/---
function print_hard_rule() {
    # Validate sanity.
    die_if_args
    string hard_rule hard_rule_character

    # If the current locale encodes to UTF-8, output UTF-8; else, ASCII.
    if { is_locale_encoding_utf8 } {
        hard_rule_character='═'
    } else {
        hard_rule_character='='
    }

    # Print such rule.
    hard_rule="$(repeat_string "${hard_rule_character}" $(get_terminal_width))"
    output_string_colored "${ZESHY_STYLE_TO_COLOR[print_hard_rule-]}${hard_rule}"
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Right. Rename the existing parcel "io/output/output" to
#"io/output/print" and shift the following output_*() functions to a new parcel
#"io/output/output".
#FUXME: Rename to print_hard_rule(). The caller requires fine control over
#prefixing and suffixing whitespace; in this case, such whitespace cannot be
#reliably automated away.
#FUXME: Not necessarily the best parcel for such function, as it's a tad lower-
#level.
#FUXME: Shouldn't we suffix rather than prefix such output with delimiting
#whitespace, unlike most printer functions? If so, we'll need to call a new
#print_string_*() variant.
