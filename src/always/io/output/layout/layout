#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'______________<heredoc?>______________'
Handle *output layouts* (i.e., spatial orientations with which to output
strings).
______________<heredoc?>______________

# ....................{ PRINTERS                           }....................
declare_function_with_stdin <<'/---'
string print_heading(string heading1 = "", string heading2, ...)

Print the passed strings (defaulting to the empty string) as a heading centered
to the width of the current terminal, styled under the user-configurable styles
prefixed by `print_heading.`.  See center_string_with_style_prefix() for further
details, replacing `${style_prefix}` with such prefix (e.g.,
`print_heading.border_right`, styling the right border).
/---
function print_heading() {
    # Mobilize printing on the current terminal.
    start_output_delimited

    # Print such heading.
    output_string_centered_with_style_prefix "${*}"

    # Finalize printing on the current terminal.
    stop_output
}

#FIXME: Revise documentation, naturally.
declare_function_with_stdin <<'/---'
string print_heading_and_body_with_style_prefix(
    string heading,
    string body,
    string style_prefix = "$(get_caller).")

Print the first passed string centered to the width of the current terminal
followed by the second string wrapped to such width, both styled under the user-
configurable styles prefixed by the passed prefix (defaulting to the dot-
suffixed name of the caller).

== Styles ==

/---
function print_heading_and_body_with_style_prefix() {
    # Validate passed arguments.
    die_unless_args_2_to_3\
        'expected one heading string, one body string, and optional style prefix'
    string heading="${1}" body="${2}" style_prefix
    style_prefix="${3-$(get_caller).}"

    # Mobilize printing on the current terminal.
    start_output_delimited

    # Print such heading and body.
    output_string_centered_with_style_prefix\
        "${heading}" "${style_prefix}heading."
    output_string_wrapped_with_style_prefix\
        "${body}"    "${style_prefix}body."

    # Print the bottom edge of the box, assuming default styles.
    output_string_centered_with_style_prefix\
        ''           "${style_prefix}footing."

    # Finalize printing on the current terminal.
    stop_output
}

#FIXME: In lieu of unit tests, this will do.
function boxy() {
    print_heading_and_body_with_style_prefix 'Parable of the Box'\
        'The box is full of salmon, and a man sits atop the box. Long ago this
         man hired armed guards to keep anyone from eating his fish. The many
         people who sit next to the empty river starve to death. But they do
         not die of starvation. They die of a belief. Everyone believes that
         the man atop the box owns the fish. The soldiers believe it, and they
         will kill to protect the illusion. The others believe it enough that
         they are willing to starve. But the truth is that there is a box,
         there is an emptied river, there is a man sitting atop the box, there
         are guns, and there are starving people.'\
        'print_message.'
}

# --------------------( WASTELANDS                         )--------------------
    #FUXME: What's the "best" way to output the bottom edge of the box? I'm
    #contemplating generalizing output_string_centered_with_style_prefix() such
    #that, when called with the empty string, it simply 

