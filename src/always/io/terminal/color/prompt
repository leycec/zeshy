#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle color-specific prompt escape codes.
/---

# ....................{ GLOBALS ~ glob                     }....................
#FIXME: Shift elsewhere -- say, to a new parcel 'always/zsh/prompt'. This has
#literally *NOTHING* to do with the above functionality.

# Dismantled, this is:
#
# * "%(...)", matching a "%"-prefixed prompt escape.
# * "[BbSsUu]", matching a bold, italic, or underline parameter.
# * "[0-9]##[FfKk]", matching a fore- or background parameter prefixed by
#   integer argument consisting of one or more digits.
# * "[FfKk]\{?*\}", matching a fore- or background parameter suffixed by:
#   * String argument consisting of a well-known color name (e.g., "red").
#   * Integer argument consisting of one or more digits.
declare_global_with_stdin string\
    ZESHY_COLOR_PROMPT_GLOB='%([BbSsUu]|[0-9]##[FfKk]|[FfKk]\{?*\})' <<'/---'
Glob matching color-specific escape codes in `zsh` prompts.
/---

# ....................{ REMOVERS                           }....................
#FIXME: Shift elsewhere -- say, to a new parcel 'always/zsh/prompt'. See above.
#FIXME: Rename to remove_string_color_prompt().
declare_function_with_stdin <<'/---'
string remove_string_prompt_colors(string text1, string text2, ...)

Get the passed strings stripped of all color-specific prompt escape codes. The
resulting string thus retains only non-color-specific prompt escape codes (e.g.,
`%D`, dynamically expanding to the current date).
/---
function remove_string_prompt_colors() {
    die_unless_args 'expected at least one string'
    remove_string_substrings_matching_glob "${*}" "${ZESHY_COLOR_PROMPT_GLOB}"
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Excise, as discussed in "color".
#declare_global_with_stdin <<'/---'
#map ZESHY_COLOR_PROMPT
#
#Map lowercase color name followed by optional attributes to the prompt-specific
#ANSI escape code enabling such color at the shell prompt on the current
#terminal. See ${ZESHY_COLOR} for further details.
#/---
#
#FUXME: Excise, as discussed in "color".
#declare_global_with_stdin <<'/---'
#map ZESHY_COLOR_PROMPT_2
#
#Map lowercase color name followed by optional attributes to the prompt-specific
#ANSI escape code enabling such color at the shell prompt on monochrome terminals
#(i.e., _not_ supporting the canonical eight colors). See ${ZESHY_COLOR} for
#further details.
#/---
#
#FUXME: Excise, as discussed in "color".
#declare_global_with_stdin <<'/---'
#map ZESHY_COLOR_PROMPT_8
#
#Map lowercase color name followed by optional attributes to the prompt-specific
#ANSI escape code enabling such color at the shell prompt on polychrome terminals
#(i.e., supporting the canonical eight colors). See ${ZESHY_COLOR} for further
#details and ${ZESHY_COLOR_NAMES_8} for a list of such colors.
#/---

#Remove all color-specific `zsh` prompt escape codes from the passed strings. The resulting string will
#retain non-color prompt escapes (e.g., "%D", expanding to the current date).
