#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle color-specific ANSI escape codes.

== See Also ==

* https://en.wikipedia.org/wiki/ANSI_escape_code[ANSI escape code] reference.
/---

# ....................{ GLOBALS                            }....................
declare_global_with_stdin <<'/---'
string ZESHY_ANSI_CSI

2-byte Control Sequence Introducer (CSI) prefixing all ANSI escape sequences.
/---
# Set such global to the equivalent of "<Esc>[".
ZESHY_ANSI_CSI=$'\E\['

declare_global_with_stdin <<'/---'
map ZESHY_ANSI_SGR

Map from lowercase color attribute name to the Select Graphics Rendition (SGR)
integer configuring such attribute when preceded by ${ZESHY_ANSI_CSI}.
/---
ZESHY_ANSI_SGR=(
    reset 0

    # Attribute enablers.
    bold       1
    weak       2
    italic     3
    underline  4
    blink      5
    reverse    7
    conceal    8
    normal    22

    # Attribute disablers.
    italic_off    23
    underline_off 24
    blink_off     25
    reverse_off   27
    conceal_off   28

    # Foreground colors.
    black   30
    red     31
    green   32
    yellow  33
    blue    34
    magenta 35
    cyan    36
    white   37
    default 39

    # Background colors.
    black_background   40
    red_background     41
    green_background   42
    yellow_background  43
    blue_background    44
    magenta_background 45
    cyan_background    46
    white_background   47
    default_background 49

    # Foreground high-intensity colors.
    black_intense   90
    red_intense     91
    green_intense   92
    yellow_intense  93
    blue_intense    94
    magenta_intense 95
    cyan_intense    96
    white_intense   97
    default_intense 99

    # Background high-intensity colors.
    black_intense_background   100
    red_intense_background     101
    green_intense_background   102
    yellow_intense_background  103
    blue_intense_background    104
    magenta_intense_background 105
    cyan_intense_background    106
    white_intense_background   107
    default_intense_background 109
)

declare_global_with_stdin <<'/---'
string ZESHY_ANSI_SGR_NEXT

1-byte Select Graphics Rendition (SGR) delimiter for delimiting subsequences.
/---
ZESHY_ANSI_SGR_NEXT=';'

declare_global_with_stdin <<'/---'
string ZESHY_ANSI_SGR_SUFFIX

1-byte Select Graphics Rendition (SGR) suffix.
/---
ZESHY_ANSI_SGR_SUFFIX='m'

# ....................{ GLOBALS ~ glob                     }....................
declare_global_with_stdin <<'/---'
string ZESHY_ANSI_SGR_GLOB

Glob matching Select Graphics Rendition (SGR) ANSI escape codes, used for
setting color attributes of the current terminal.
/---
# Dismantled, this is:
#
# * (...)m", matching zero or more Select Graphic Rendition (SGR)
#   parameters also referred to as color indices:
#   * "|", matching the empty string and hence the ANSI escape code
#     "CSI m" identical to "<Esc>[0m" resetting all SGR parameters.
#   * "[0-9](#c1,3)", matching an 8-bit integer expressed as one to three
#     digits as the first SGR parameter.
#   * "(;[0-9](#c1,3))#", matching zero or more sequences of a semicolon
#     followed by an 8-bit integer as all following SGR parameters.
ZESHY_ANSI_SGR_GLOB="(|[0-9](#c1,3)(${ZESHY_ANSI_SGR_NEXT}[0-9](#c1,3))#)${ZESHY_ANSI_SGR_SUFFIX}"

# ....................{ GETTERS                            }....................
declare_function_with_stdin <<'/---'
integer get_string_length_printable_sans_ansi_colors(
    string text1, string text2, ...)

Get the total length of the passed strings in printable multibyte characters
excluding ANSI color codes in such strings. See get_string_length_printable()
for further details: e.g.,

.get_string_length_printable_sans_ansi_colors()
==========================================
[source]
------------------------------------------
>>> string on_flag_and_wind=\
...    "${ZESHY_STYLE_TO_COLOR[mumonkan]}
...     A temple flag flapped in the wind. Two monks stood watching. One said to
...     the other, \"The flag is moving.\" The other replied, \"The wind is
...     moving.\" The sixth patriarch, Eno, overheard this and said, \"Not the
...     wind; not the flag. It is the mind that is moving.\""
>>> string on_heaven_and_hell=\
...    "${ZESHY_STYLE_TO_COLOR[the.gateless.gate]}
...     Nobushige, a respected samurai, came to Hakuin and asked, \"Is there
...     really a heaven and hell?\"
...     \"Who are you?\" inquired Hakuin.
...     \"A samurai,\" Nobushige replied.
...     \"You, a samurai!\" exclaimed Hakuin. \"What kind of ruler would have
...     you as his guard? Your face looks like that of a beggar.\"
...     Nobushige drew his sword in anger, but Hakuin continued, \"So, you have
...     a sword? Your weapon is probably much too dull to cut off my head.\"
...     As Nobushige lifted his sword, Hakuin remarked, \"Here open the gates of
...     hell!\"
...     As Nobushige lowered his sword, Hakuin intoned, \"Here open the gates of
...     heaven.\""
>>> get_string_length_printable_sans_ansi_colors\
...     "${on_flag_and_wind}" "${on_heaven_and_hell}"
831
>>> get_string_length_printable_sans_ansi_colors\
...     "${ZESHY_STYLE_TO_COLOR[anaximander]}"
0
>>> get_string_length_printable_sans_ansi_colors\
...     "${ZESHY_STYLE_TO_COLOR[diogenes]}Gnomon"
6
------------------------------------------
==========================================
/---
function get_string_length_printable_sans_ansi_colors() {
    die_unless_args 'expected at least one string'
    get_string_length_printable "$(remove_string_ansi_colors "${@}")"
}

# ....................{ REMOVERS                           }....................
declare_function_with_stdin <<'/---'
string remove_string_ansi_colors(string text1, string text2, ...)

Remove all ANSI color codes from the passed string. The resulting string will
retain non-color ANSI escapes (e.g., `\033[J`, clearing from the current
cursor to the end of the screen).
/---
function remove_string_ansi_colors() {
    # Avoid calling remove_string_glob_matches(). zsh fails with "bad pattern" when
    # expanding ${ZESHY_ANSI_CSI} as a glob expression (e.g., as
    # "${~ZESHY_ANSI_CSI}").
    die_unless_args 'expected at least one string'
    return_string "${*//${ZESHY_ANSI_CSI}${~ZESHY_ANSI_SGR_GLOB}}"
}

# --------------------( WASTELANDS                         )--------------------
#>>> string on_salvia_divinorum=\
#...    "${ZESHY_STYLE_TO_COLOR[uroboros]} In all of our Pharmako/Poeia, this plant
#...     is the hidden pearl. Poets, like vintners, love such surprises, and seek
#...     them out beyond their better known brothers and sisters: an unknown poet
#...     found in a faded chapbook with light in his verses, an obscure vintage
#...     the reviewers missed, dust-covered, but filled with mouthfuls of
#...     delight. The little leaves, hiding off in the mountains, have
#...     successfully avoided the front pages for four centuries."
#>>> string on_hojas_de_la_pastora=\
#...    "${ZESHY_STYLE_TO_COLOR[bathyscaphe]} A Taoist sage, in another range of
#...     mountains, after many years of studying the secrets of alchemy with his
#...     master, feeling fully accomplished, descended the mountain to move into
#...     the world. When evening approached, he stopped at an inn. The people at
#...     the inn marveled at the light that seemed to hover about him – a sort of
#...     magical glow. The sage was chagrined, realizing that his studies were
#...     only half completed, and returned immediately to his teacher."
#...    "${ZESHY_STYLE_TO_COLOR[uroboros]} In all of our Pharmako/Poeia, this plant
#...     is the hidden pearl. Poets, like vintners, love such surprises, and seek
#...     them out beyond their better known brothers and sisters: an unknown poet
#...     found in a faded chapbook with light in his verses, an obscure vintage
#...     the reviewers missed, dust-covered, but filled with mouthfuls of
#...     delight. The little leaves, hiding off in the mountains, have
#...     successfully avoided the front pages for four centuries."
#>>> string on_hojas_de_la_pastora=\
#...    "${ZESHY_STYLE_TO_COLOR[bathyscaphe]} A Taoist sage, in another range of
#...     mountains, after many years of studying the secrets of alchemy with his
#...     master, feeling fully accomplished, descended the mountain to move into
#...     the world. When evening approached, he stopped at an inn. The people at
#...     the inn marveled at the light that seemed to hover about him – a sort of
#...     magical glow. The sage was chagrined, realizing that his studies were
#...     only half completed, and returned immediately to his teacher."
#>>> get_string_length_printable_sans_ansi_colors\
#Excrutiatingly helpful dissection of ANSI escape codes.
#function yoyo() {
#    is "${ZESHY_COLOR[reset]}" == ${ZESHY_ANSI_CSI}${~ZESHY_ANSI_SGR_GLOB} si
#    string yoyo="$(remove_string_ansi_colors "${ZESHY_COLOR[reset]}")"
#    print "reset after ANSI removed: $yoyo (${#yoyo}) ($(get_string_length_printable_sans_ansi_colors "${yoyo}"))"
#}
# Unfortunately, zsh fails with a "bad pattern" error when aggregating the
# following CSI and SGR globs into a single glob. Gotta keep them separated.
