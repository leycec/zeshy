#!/usr/bin/env zsh
# ====================[ input                              ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle interactive standard input.

# ....................{ TESTERS                            }....................
document_function '
boolean is_input_character_y_or_Y(void)

Return true if the current user interactively enters either "y" or "Y" on
standard input.
'
function is_input_character_y_or_Y() {
    die_if_args
    die_unless_shell_interactive
    read -eq
}

# ....................{ GETTERS                            }....................
document_function '
string get_input_line(void)

Request the current user interactively enter a newline-delimited string on
standard input.
'
function get_input_string() {
    die_if_args
    die_unless_shell_interactive
    read -e
}

document_function '
string get_input_character(void)

Request the current user interactively enter a single-character string on
standard input.
'
function get_input_character() {
    die_if_args
    die_unless_shell_interactive
    read -ek
}

# ....................{ SETTERS                            }....................
document_function '
string set_string_to_input_line(string variable_name)

Set the passed string variable to a newline-delimited string interactively
entered by the current user on standard input.
'
function set_string_to_input_line() {
    # Validate passed arguments.
    die_unless_args_1 'expected one variable name'
    die_unless_shell_interactive
    string string_name="${1}"
    die_unless_string "${string_name}"

    # Request such line.
    read "${string_name}"
}

document_function '
string set_string_to_input_character(string variable_name)

Set the passed string variable to a single-character string interactively
entered by the current user on standard input.
'
function set_string_to_input_character() {
    # Validate passed arguments.
    die_unless_args_1 'expected one variable name'
    die_unless_shell_interactive
    string string_name="${1}"
    die_unless_string "${string_name}"

    # Request such character.
    read -k "${string_name}"
}

# --------------------( WASTELANDS                         )--------------------
# Get an interactively entered string from standard input.
# Get a string interactively entered by the current user on standard input.
