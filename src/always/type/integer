#!/usr/bin/env zsh
# ====================[ integer                            ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle integers (i.e., variables with values constrained to natural numbers
# and negatives of such numbers).

# ....................{ EXCEPTIONS                         }....................
# void die_unless_integer(
#   string variable_name,
#   string error_message = "\"${variable_name}\" not of type integer")
#
# Throw an exception unless the variable with the passed name is of type integer
# (i.e., declared as either "integer" or "global_integer").
die_unless_integer() {
    die_unless_one_or_two_args\
        'expected one variable name and optional error message'
    is_integer "${1}" or die "${2:-\"${1}\" not of type integer}"
}

# void die_unless_integer_positive(
#   string variable_name,
#   string error_message = "\"${value}\" not a positive integer")
#
# Throw an exception unless the passed variable is a positive integer.
die_unless_integer_positive() {
    die_unless_one_or_two_args\
        'expected one variable name and optional error message'
    is_integer_positive "${1}" or die "${2:-\"${1}\" not a positive integer}"
}

# ....................{ TESTS                              }....................
# boolean is_integer(string variable_name)
#
# Return true if the variable with the passed name has type "integer".
is_integer() {
    die_unless_one_arg 'expected one variable name'
    string type; type="$(get_type "${1}")"
    is_string_prefix "${type}" 'integer'
}

# boolean is_integer_positive(string variable_name)
#
# Return true if the passed string is a positive integer.
is_integer_positive() {
    die_unless_one_arg 'expected one string'
    string variable_name="${1}"
    is_integer "${variable_name}" and (( "${(P)variable_name}" > 0 ))
}

# --------------------( WASTELANDS                         )--------------------
