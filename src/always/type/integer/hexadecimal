#!/usr/bin/env zsh
# ====================[ hexadecimal                        ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Hexadecimal, handling hexadecimals (i.e., base 16 integers signifying
# 10 through 15 as A through F).

# ....................{ EXCEPTIONS                         }....................
# void die_unless_hexadecimal(
#   string text, string error_message = 'not hexadecimal')
#
# Throw an exception unless the passed string is hexidecimal. See
# is_hexadecimal() for further details.
die_unless_hexadecimal() {
    die_unless_one_or_two_args\
        'expected one string and optional error message'
    is_hexadecimal "${1}" or die "${2:-\"${1}\" not hexadecimal}"
}

# ....................{ TESTS                              }....................
# bool is_hexadecimal(string string)
#
# Return true if the passed string is a hexadecimal in either C format (e.g.,
# "0xFEEDBEEF") or Zsh format (e.g., "16#DEADFACE").
is_hexadecimal() {
    die_unless_one_arg 'expected one string'
    is "${1}" == ('0x'|[[:digit:]]##'#')[[:xdigit:]]## si
}

# ....................{ CONVERTERS                         }....................
# string convert_decimal_to_hexadecimal(integer decimal)
#
# Convert the passed decimal to hexadecimal: e.g.,
#
#     >>> convert_decimal_to_hexadecimal 3405691582
#     0xCAFEBABE
convert_decimal_to_hexadecimal() {
    # Validate passed arguments.
    die_unless_one_arg 'expected one integer'
    die_unless_decimal "${1}"

    # Locally guarantee Zsh option "c_bases", required by sputter() below.
    localize_zsh_options c_bases

    # Convert.
    integer_in_base 16 hexadecimal="${1}"
    sputter ${hexadecimal}
}

# string convert_hexadecimal_to_decimal(string hexadecimal)
#
# Convert the passed hexadecimal to decimal: e.g.,
#
#     >>> convert_hexadecimal_to_decimal 0xBADF00D
#     195948557
convert_hexadecimal_to_decimal() {
    # Validate passed arguments.
    die_unless_one_arg 'expected one hexadecimal string'
    die_unless_hexadecimal "${1}"

    # Convert. Unlike convert_decimal_to_hexadecimal(), this does not require
    # Zsh option "c_bases".
    integer_in_base 10 decimal="${1}"
    sputter ${decimal}
}

# --------------------( WASTELANDS                         )--------------------
