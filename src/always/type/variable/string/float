#!/usr/bin/env zsh
# ====================[ float                              ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle floating point variables and values.

# ....................{ EXCEPTIONS                         }....................
# void die_unless_string_float(
#   string value,
#   string error_message = "\${value}\" not a float")
#
# Throw an exception unless the passed string is a floating point number.
die_unless_string_float() {
    die_unless_one_or_two_args\
        'expected one string and optional error message'
    is_string_float "${1}" or die "${2:-\"${1}\" not a float}"
}

# ....................{ TESTS                              }....................
# boolean is_string_float(string value)
#
# Return true if the passed string is a floating point number (i.e., an optional
# negative sign, one or more digits, a decimal point, and one or more digits).
is_string_float() {
    die_unless_one_arg 'expected one string'
    is "${1}" == (-|)<->.<-> si  # see is_string_integer()
}

# ....................{ WRITERS                            }....................
# float round_string_float(float number, integer precision = 0)
#
# Round the passed float to the passed number of decimal places (defaulting to 0
# and hence rounding to a whole integer).
round_string_float() {
    die_unless_one_or_two_args 'expected one float and optional precision'
    string number="${1}" precision="${2:-0}"
    die_unless_string_float "${number}"
    die_unless_string_nonnegative_number "${precision}"
    printf "%.${precision}f\n" ${number}
}
