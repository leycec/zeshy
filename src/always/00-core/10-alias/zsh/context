#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'-/-'
Handle `zsh` *context* (i.e., lowercase strings describing the current shell
execution environment) aliases.
-/-

# ....................{ GLOBALS                            }....................
declare_global_with_stdin\
    string_constant ZESHY_CONTEXT_COMMAND_SUBSTITUTION='cmdsubst' <<'/---'
Value of ${zsh_eval_context} elements whose corresponding runnables are *command
substitutions* (i.e., `\``- _or_ `$(`- and `$)`-delimited commands substituted
with the output of such commands).
/---

declare_global_with_stdin\
    string_constant ZESHY_CONTEXT_FUNCTION='shfunc' <<'/---'
Value of ${zsh_eval_context} elements whose corresponding runnables are `zsh`
functions, including *trap functions* (i.e., traps implemented as functions
rather than through a call to builtin trap()).
/---

# ....................{ GLOBALS ~ builtin                  }....................
declare_global_with_stdin string_constant\
    ZESHY_CONTEXT_EVALUATION='eval' <<'/---'
Value of ${zsh_eval_context} elements whose corresponding runnables run under a
call to builtin eval().
/---

declare_global_with_stdin string_constant\
    ZESHY_CONTEXT_SCHEDULED='sched' <<'/---'
Value of ${zsh_eval_context} elements whose corresponding runnables run under a
call to builtin sched().
/---

declare_global_with_stdin string_constant\
    ZESHY_CONTEXT_TRAP='trap' <<'/---'
Value of ${zsh_eval_context} elements whose corresponding runnables run under a
call to builtin trap(). This excludes trap functions, which `zsh` classifies as
functions and hence confers a context of ${ZESHY_CONTEXT_FUNCTION}.
/---

# ....................{ GLOBALS ~ toplevel                 }....................
# Define root context globals *AFTER* all other context globals, as the former
# depends on the latter.

declare_global_with_stdin string_constant\
    ZESHY_CONTEXT_ROOT='toplevel' <<'/---'
Value of ${zsh_eval_context} elements whose corresponding runnables run under
*root context* (i.e., run either by the current user directly at an interactive
command line _or_ at the top-level of a non-interactive shell script). See
is_context_root() for further details.
/---

declare_global_with_stdin string_constant\
    ZESHY_CONTEXT_ROOT_COMMAND_SUBSTITUTION="${ZESHY_CONTEXT_ROOT}:${ZESHY_CONTEXT_COMMAND_SUBSTITUTION}" <<'/---'
Value of ${ZSH_EVAL_CONTEXT} substrings whose corresponding runnables are
command substitutions called under root context. See ${ZESHY_CONTEXT_ROOT} for
further details.
/---

declare_global_with_stdin string_constant\
    ZESHY_CONTEXT_ROOT_FUNCTION="${ZESHY_CONTEXT_ROOT}:${ZESHY_CONTEXT_FUNCTION}" <<'/---'
Value of ${ZSH_EVAL_CONTEXT} substrings whose corresponding runnables are `zsh`
functions called under root context. See ${ZESHY_CONTEXT_ROOT} for further
details.
/---

# ....................{ TESTERS                            }....................
declare_alias_with_stdin\
    '[status: boolean] is_context_root(void)'\
    'is "${ZSH_EVAL_CONTEXT}" == "'${ZESHY_CONTEXT_ROOT}'" si' <<'/---'
Return success if the current shell context is the *root context* (i.e., if this
alias was expanded either by the current user directly at an interactive command
line _or_ at the top-level of a non-interactive shell script): e.g.,

.is_context_root()
==========================================
[source]
------------------------------------------
>>> string on_authoritarian_demagoguery=\
...    "One Folk, One Realm, One Leader. Union with the unity of an insect
...     swarm. Knowledgeless understanding of nonsense and diabolism. And then
...     the newsreel camera had cut back to the serried ranks, the swastikas,
...     the brass bands, the yelling hypnotist on the rostrum. And here once
...     again, in the glare of his inner light, was the brown insectlike column,
...     marching endlessly to the tunes of this rococo horror-music. Onward Nazi
...     soldiers, onward Christian soldiers, onward Marxists and Muslims, onward
...     every chosen People, every Crusader and Holy War-maker. Onward into
...     misery, into all wickedness, into death!"
>>> is_context_root and get_string_line "${on_authoritarian_demagoguery}" 1
One Folk, One Realm, One Leader. Union with the unity of an insect
------------------------------------------
==========================================
/---

# ....................{ TESTERS ~ cli                      }....................
declare_alias_with_stdin\
    '[status: boolean] is_context_cli(void)'\
    'is -o interactive and "${ZSH_EVAL_CONTEXT}" == "'${ZESHY_CONTEXT_ROOT}'" si' <<'/---'
Return success if the current shell context is the *root CLI context* (i.e., if
this alias was expanded by the current user directly at an interactive command
line): e.g.,

.is_context_cli()
==========================================
[source]
------------------------------------------
>>> string on_golden_ages=\
...    "We may not appreciate the fact; but a fact nevertheless it remains: we
...     are living in a Golden Age, the most gilded Golden Age of human history
...     — not only of past history, but of future history. For, as Sir Charles
...     Darwin and many others before him have pointed out, we are living like
...     drunken sailors, like the irresponsible heirs of a millionaire uncle. At
...     an ever accelerating rate we are now squandering the capital of metallic
...     ores and fossil fuels accumulated in the earth’s crust during hundreds
...     of millions of years. How long can this spending spree go on? Estimates
...     vary. But all are agreed that within a few centuries or at most a few
...     millennia, Man will have run through his capital and will be compelled
...     to live, for the remaining nine thousand nine hundred and seventy or
...     eighty centuries of his career as Homo sapiens, strictly on income."
>>> is_context_cli and get_string_line "${on_golden_ages}" -1
eighty centuries of his career as Homo sapiens, strictly on income.
------------------------------------------
==========================================
/---

declare_alias_with_stdin\
    '[status: boolean] is_context_cli_command_substitution(void)'\
    'is -o interactive and "${ZSH_EVAL_CONTEXT}" == "'${ZESHY_CONTEXT_ROOT_COMMAND_SUBSTITUTION}'" si' <<'/---'
Return success if the current shell context is a *command substitution* (i.e.,
`\``- _or_ `$(`- and `$)`-delimited commands substituted with the output of such
commands) substituted directly from the root CLI context. See is_context_cli()
for further details: e.g.,

.is_context_cli_command_substitution()
==========================================
[source]
------------------------------------------
>>> string on_truth_peace_love_and_plenty=\
...    "The Ministry of Truth, which concerned itself with news, entertainment,
...     education and the fine arts. The Ministry of Peace, which concerned
...     itself with war. The Ministry of Love, which maintained law and order.
...     And the Ministry of Plenty, which was responsible for economic affairs."
>>> $(if { is_context_cli_command_substitution }
...       output_string 'get_string_line "${on_truth_peace_love_and_plenty}" -1'
...   } else {
...       output_string 'get_string_line "${on_truth_peace_love_and_plenty}" 1'
...   })
And the Ministry of Plenty, which was responsible for economic affairs.
------------------------------------------
==========================================
/---

declare_alias_with_stdin\
    '[status: boolean] is_context_cli_function(void)'\
    'is -o interactive and "${ZSH_EVAL_CONTEXT}" == "'${ZESHY_CONTEXT_ROOT_FUNCTION}'" si' <<'/---'
Return success if the current shell context is a `zsh` function called directly
from the root CLI context. See is_context_cli() for further details: e.g.,

.is_context_cli_function()
==========================================
[source]
------------------------------------------
>>> string on_animality=\
...    "\"Animals don't behave like men,\" he said. \"If they have to fight,
...     they fight; and if they have to kill they kill. But they don't sit down
...     and set their wits to work to devise ways of spoiling other creatures'
...     lives and hurting them. They have dignity and animality.\""
>>> function on_dignity() {
...     is_context_cli_function and get_string_line "${on_animality}" 1
... }
>>> on_dignity
"Animals don't behave like men," he said. "If they have to fight,
------------------------------------------
==========================================
/---

# --------------------( WASTELANDS                         )--------------------
#String assigned to ${zsh_eval_context} elements whose corresponding runnables
#run under *root context*. See is_context_root() for further details.
#String assigned to ${zsh_eval_context} elements whose corresponding runnables
#are `zsh` functions.
#Value of ${zsh_eval_context} elements signifying `zsh` functions.

#>>> is_context_root and print_string\
#...     "Facts do not cease to exist because they are ignored."
#Facts do not cease to exist because they are ignored.
#(i.e., either directly by the current user from an
#interactive command line or by top-level of a non-interactive shell script).
