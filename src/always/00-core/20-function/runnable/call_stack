#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle core functionality for the *call stack* (i.e., list of runnables on the
call path from the initial to the current runnable, where the former is
typically the runnable called directly from the CLI by an interactive user).
/---

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
[status: boolean] is_call_stack_contains(string runnable_name)

Return success if the call stack contains the passed *runnable* (i.e., function
or script), in which case such runnable is either the current function or
transitively called such function.
/---
function is_call_stack_contains() {
    # Validate sanity.
    die_unless_arg 'Expected one runnable name.'
#   print "function: ${1}\nfuncstack: ${funcstack[*]}"

    # Test such stack. Avoid calling additional functions (e.g.,
    # is_list_contains(), get_list_size()) to avoid polluting the call stack
    # being tested. See is_list_contains() for further details.
    (( ${funcstack[(ie)${1}]} <= ${#funcstack} ))
}

# ....................{ GETTERS                            }....................
declare_function_with_stdin <<'/---'
integer get_call_stack_size(void)

Get the size of the call stack, excluding the call to this function.
/---
function get_call_stack_size() {
    # Get such size. Avoid calling additional functions (e.g.,
    # get_list_size()) to avoid polluting the call stack being examined.
    die_if_args
    output_string $(( ${#funcstack} - 1 ))
}

# ....................{ GETTERS ~ root                     }....................
declare_function_with_stdin <<'/---'
string get_call_stack_root(void)

Get the *call stack root* (i.e., the runnable at the bottom of such stack and
hence responsible for initiating all calls on such stack). The format for such
string depends on the type of such runnable. Specifically, if such runnable is
a:

* Function, this is the name of such function.
* Script, this is the path (either absolute or relative and hence _not_
  necessarily canonical) such script was originally run as.
/---
function get_call_stack_root() {
    # If the call stack is nonempty, return the first runnable on such stack;
    # else, return "zeshy". (The latter should *NEVER* trigger, but is provided
    # as a failsafe backup.)
    die_if_args
    output_string "${funcstack[-1]-zeshy}"
}

declare_function_with_stdin <<'/---'
string get_call_stack_root_basename(void)

Get the basename of the call stack root. If such root is a script, this is the
basename of such script. Otherwise, this is equivalent to get_call_stack_root().
See such function for further details.
/---
function get_call_stack_root_basename() {
    die_if_args
    command basename -- "$(get_call_stack_root)"
}

# --------------------( WASTELANDS                         )--------------------
