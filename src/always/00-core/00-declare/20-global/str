#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *string variable declarators* (i.e., aliases declaring non-numeric scalar
variables).
/---

# For readability, "string" is intentionally *NOT* abbreviated to "str". As an
# ad-hoc heuristic, all zeshy primitives must contain at least one vowel --
# which "str" clearly does not. Interestingly, all other canonical primitive
# type abbreviations adhere to such heuristic (e.g., "bool", "char", "int").

# ....................{ DECLARATORS                        }....................
declare_alias_with_stdin 'void :str(string variable_name1, ...)'\
    'local --' <<'/---'
Declare the passed strings locally, initialized to the following `=`-delimited
string if specified or to the empty string otherwise.
/---

#FIXME: Excise everywhere in favor of :str().
declare_alias_with_stdin 'void string(string variable_name1, ...)'\
    'local --' <<'/---'
Declare
/---

declare_alias_with_stdin 'void string_global(string variable_name1, ...)'\
    'typeset -g --' <<'/---'
Declare the passed strings globally _not_ exported to the calling shell. See
:str() for further details.
/---

declare_alias_with_stdin\
    'void string_global_export(string variable_name1, ...)'\
    'export --' <<'/---'
Declare the passed strings globally exported to the calling shell. See :str()
for further details.
/---

# ....................{ DECLARATORS ~ constant             }....................
declare_alias_with_stdin\
    'void :str_const(string variable_name1, ...)'\
    'local -r --' <<'/---'
Declare the passed string constants locally, defined to the following
`=`-delimited string if specified or to the empty string otherwise. If such
constant is (attempted to be) redefined, an exception is thrown.
/---

declare_alias_with_stdin\
    'void string_constant_global(string variable_name1, ...)'\
    'typeset -gr --' <<'/---'
Declare the passed string constants globally _not_ exported to the calling
shell, defined to the following `=`-delimited string if specified or to the
empty string otherwise. Attempting to subsequently redefine such constant throws
an exception.
/---

declare_alias_with_stdin\
    'void string_constant_global_export(string variable_name1, ...)'\
    'export -r --' <<'/---'
Declare the passed string constants globally exported to the calling shell. See
string_constant_global() for further details.
/---

# --------------------( WASTELANDS                         )--------------------
