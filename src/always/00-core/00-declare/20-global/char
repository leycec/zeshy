#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *character* (i.e., string of length 1) variable declarators.
/---

#FIXME: Rename "character" to "char".

# ....................{ DECLARATORS                          }....................
declare_alias_with_stdin 'void character(string variable_name1, ...)'\
    'string' <<'/---'
Declare the passed *character* (i.e., string of length one) locally. By `zsh`
constraint, characters are currently indistinguishable from strings. However,
explicitly declaring characters as such improves clarity, (possible) forwards
compatibility, and symmetry with existing builtins integer() and float().
/---

declare_alias_with_stdin 'void character_global(string variable_name1, ...)'\
    'string_global' <<'/---'
Declare the passed character globally, but _not_ exported to the calling shell.
See character() for further details.
/---

declare_alias_with_stdin\
    'void character_global_export(string variable_name1, ...)'\
    'string_global_export' <<'/---'
Declare the passed character globally exported to the calling shell. See
character() for further details.
/---

declare_alias_with_stdin\
    'void character_constant_global_export(string variable_name1, ...)'\
    'string_constant_global_export' <<'/---'
Declare the passed character constant globally exported to the calling shell. See
character() for further details.
/---

# --------------------( WASTELANDS                         )--------------------
