#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle core operating system functionality.
/---

# Note that canonical string global ${OSTYPE} is set during zsh compilation by
# autotools script "configure.ac" to the autotools-specific string global
# $host_os. Unfortunately, there appears to exist no definitive list of all
# $host_os values, necessitating an ad-hoc, piecemeal approach.
#
# Reliable sources for such values include:
#
# * "https://ftp.samba.org/pub/unpacked/ctdb/lib/replace/libreplace_ld.m4", the
#   suite of autotools macro definitions for SAMBA's libreplace.
# * "http://git.savannah.gnu.org/cgit/grub.git/plain/configure.ac", the
#   autotools configuration for GRUB2.
#
# We explicitly exclude operating systems no longer under active development,
# including but hardly limited to SunOS, SGI's IRIX, and Hewlett Packard's
# Tru64 UNIX. (They're strongly unlikely to ever run zeshy reliably.)

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
[status: bool] :is_os_aros(void)

Report success if the current operating system is an *AROS* (i.e., AROS Research
Operating System, an open-source implementation of the AmigaOS 3.1 APIs)
distribution.
/---
function :is_os_aros() {
    die_if_args
    is "${OSTYPE}" == 'aros'* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_darwin(void)

Report success if the current operating system has an Apple Darwin core. This
implies such system to provide both the *XNU kernel* (i.e., hybrid kernel
combining the Mach 3 microkernel and BSD 4.4 kernel subsystems) and well-known
low-level open-source components (e.g., `launchd`, `mDNSResponder`). While both
the OS X and iOS platforms leverage Darwin, this does _not_ necessarily imply
the current system to also provide high-level closed-source components commonly
associated with either platform (e.g., Carbon, Cocoa).
/---
function :is_os_darwin() {
    die_if_args
    is "${OSTYPE}" == 'darwin'* si
}

# ....................{ TESTERS ~ bsd                      }....................
declare_function_with_stdin <<'/---'
[status: bool] :is_os_bsd(void)

Report success if the current operating system is a BSD derivative. This implies
such system to have a BSD kernel but _not_ necessarily the customary BSD
toolchain. Currently, this includes:

* DragonFly BSD.
* FreeBSD.
* GNU/kFreeBSD.
* NetBSD.
* OpenBSD.
/---
function :is_os_bsd() {
    die_if_args
    is "${OSTYPE}" == ('dragonfly'|'freebsd'|'netbsd'|'openbsd'|'kfreebsd'*'-gnu')* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_dragonfly_bsd(void)

Report success if the current operating system is DragonFly BSD.
/---
function :is_os_dragonfly_bsd() {
    die_if_args
    is "${OSTYPE}" == 'dragonfly'* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_freebsd(void)

Report success if the current operating system is FreeBSD. This does _not_
include GNU/kFreeBSD, which only provides the FreeBSD kernel (rather than both
the FreeBSD kernel and corresponding userland toolchain).
/---
function :is_os_freebsd() {
    die_if_args
    is "${OSTYPE}" == 'freebsd'* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_netbsd(void)

Report success if the current operating system is NetBSD.
/---
function :is_os_netbsd() {
    die_if_args
    is "${OSTYPE}" == 'netbsd'* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_openbsd(void)

Report success if the current operating system is OpenBSD.
/---
function :is_os_openbsd() {
    die_if_args
    is "${OSTYPE}" == 'openbsd'* si
}

# ....................{ TESTERS ~ linux                    }....................
declare_function_with_stdin <<'/---'
[status: bool] is_os_linux(void)

Report success if the current operating system is a Linux distribution,
including but _not_ limited to GNU/Linux distributions.
/---
function is_os_linux() {
    die_if_args
    is "${OSTYPE}" == 'linux'* si
}

# ....................{ TESTERS ~ gnu                      }....................
declare_function_with_stdin <<'/---'
[status: bool] :is_os_gnu(void)

Report success if the current operating system supports the entirety of the *GNU
toolchain* (i.e., suite of programming tools produced by the GNU Project). This
excludes operation systems not affiliated with GNU but nonetheless supporting a
subset of such toolchain (e.g., Apple Darwin).
/---
function :is_os_gnu() {
    die_if_args
    is "${OSTYPE}" == ('gnu'*|*'-gnu') si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_gnu_hurd(void)

Report success if the current operating system is GNU/Hurd.
/---
function :is_os_gnu_hurd() {
    # Yes, GNU/Hurd's choice of identifier is... unfortunate.
    die_if_args
    is "${OSTYPE}" == 'gnu'* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_gnu_kfreebsd(void)

Report success if the current operating system is GNU/kFreeBSD.
/---
function :is_os_gnu_kfreebsd() {
    die_if_args
    is "${OSTYPE}" == 'kfreebsd'*'-gnu' si
}

declare_function_with_stdin <<'/---'
[status: bool] is_os_linux_gnu(void)

Report success if the current operating system is GNU/Linux.
/---
function is_os_linux_gnu() {
    die_if_args
    is "${OSTYPE}" == 'linux-gnu' si
}

# ....................{ TESTERS ~ sysv                     }....................
declare_function_with_stdin <<'/---'
[status: bool] :is_os_sysv(void)

Report success if the current operating system is a Unix System V derivative.
This implies such system to have a System V kernel, typically either Release 3
or 4. Currently, this includes:

* All Solaris variants (e.g., Oracle Solaris, illumos).
* Hewlett Packard's HP-UX.
* IBM's AIX.
/---
function :is_os_sysv() {
    die_if_args
    is "${OSTYPE}" == ('aix'|'hpux'|'solaris')* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_aix(void)

Report success if the current operating system is IBM's AIX.
/---
function :is_os_aix() {
    die_if_args
    is "${OSTYPE}" == 'aix'* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_hpux(void)

Report success if the current operating system is Hewlett Packard's HP-UX.
/---
function :is_os_hpux() {
    die_if_args
    is "${OSTYPE}" == 'hpux'* si
}

declare_function_with_stdin <<'/---'
[status: bool] :is_os_solaris(void)

Report success if the current operating system is a Solaris variant (e.g.,
Oracle Solaris, Sun Solaris, OpenSolaris, illumos).
/---
function :is_os_solaris() {
    die_if_args
    is "${OSTYPE}" == 'solaris'* si
}

# ....................{ TESTERS ~ windows                  }....................
declare_function_with_stdin <<'/---'
[status: bool] :is_os_windows(void)

Report success if the current operating system is Microsoft Windows.
/---
function :is_os_windows() {
    die_if_args
    is "${OSTYPE}" == ('cygwin'|'mingw32'|'windows')* si
}

# --------------------( WASTELANDS                         )--------------------
