#!/usr/bin/env zsh
# ====================[ redirect                           ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle command output redirection (e.g., to standard error or file).

# ....................{ RUNNERS                            }....................
#FIXME: I've become increasingly less fond of such nomenclature. It's just too
#verbose, and needlessly so. Everyone knows what "stdout" and "stderr" refers
#to, so just refer to them as such. Also, avoid the preposition "to" here, which
#we use elsewhere to denote a "set" verb. This isn't setting; it's...well,
#output. So how about the preposition "into," instead? All told, this gives us
#the following renamings:
#
#* run_command_into_stdout().
#* run_command_into_stderr().
#* run_command_into_file().

document_function '
string run_command_to_standard_output(
  string command_name, string command_arg1, string command_arg2, ...)

Run the passed command, redirecting standard error to output.
'
function run_command_to_standard_output() {
    run_command "${@}" 2>&1
}

document_function '
string run_command_to_standard_error(
  string command_name, string command_arg1, string command_arg2, ...)

Run the passed command, redirecting standard output to error.
'
function run_command_to_standard_error() {
    run_command "${@}" 1>&2
}

# ....................{ RUNNERS ~ file                     }....................
document_function '
void run_command_to_file(
  string command_name, string command_arg1, string command_arg2, ...,
  string filename)

Run the passed command, redirecting both standard output and error to the passed
file by overwriting such file with such output.
'
function run_command_to_file() {
    # Validate passed arguments.
    die_unless_args_2_or_more 'expected one command and one filename'
    string filename="${@[-1]}"
    die_unless_file_plain_or_not_path "${filename}"
    pop_arg

    # Run such command.
    run_command "${@}" >&!"${filename}"
}

document_function '
void run_command_to_file_from_standard_output(
  string command_name, string command_arg1, string command_arg2, ...,
  string filename)

Run the passed command, redirecting standard output but not error to the passed
file by overwriting such file with such output.
'
function run_command_to_file_from_standard_output() {
    # Validate passed arguments.
    die_unless_args_2_or_more 'expected one command and one filename'
    string filename="${@[-1]}"
    die_unless_file_plain_or_not_path "${filename}"
    pop_arg

    # Run such command.
    run_command "${@}" >!"${filename}"
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to run_command_silent_output_exit_status().
#FUXME: Rename run_command_redirecting_to_*() to run_command_redirected_to_*() everywhere below.
#Actually, how about just run_command_output_*().
