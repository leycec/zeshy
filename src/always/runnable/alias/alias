#!/usr/bin/env zsh
# ====================[ alias                              ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle core alias functionality.

# ....................{ EXCEPTIONS                         }....................
document_function '
void die_unless_file_suffix_aliased(
  string filename,
  string error_message = "\"${filename}\" not suffix aliased")

Throw an exception with the passed message unless a suffix alias with the passed
file''s filetype exists.
'
function die_unless_file_suffix_aliased() {
    die_unless_args_1_to_2\
        'expected one filename and optional error message'
    string filename="${1}"
    is_file_suffix_aliased "${filename}" or
        die "${2:-\"${filename}\" not suffix aliased}"
}

# ....................{ TESTERS                            }....................
document_function '
boolean is_alias(string alias_name)

Return true if the passed alias exists.
'
function is_alias() {
    die_unless_arg 'expected one name'
    run_command_silent alias -- "${1}"
}

document_function '
boolean is_suffix_alias(string alias_name)

Return true if the passed suffix alias exists.
'
function is_suffix_alias() {
    die_unless_arg 'expected one name'
    run_command_silent suffix_alias -- "${1}"
}

document_function '
boolean is_file_suffix_aliased(string filename)

Return true if a suffix alias with the passed file''s filetype exists.
'
function is_file_suffix_aliased() {
    die_unless_arg 'expected one filename'
    string filetype; filetype="$(get_file_type_if_found "${1}")"
    is_string_nonempty "${filetype}" and is_suffix_alias "${filetype}"
}

# ....................{ GETTERS                            }....................
document_function '
string get_aliases(void)

Get a newline-delimited list of all currently declared alias names.
'
function get_aliases() {
    # See top-level component "compile" for further details.
    die_if_args
    alias +
    alias +s
}

# ....................{ DEFINERS                           }....................
document_function '
void undefine_alias(string alias_name1, string alias_name2, ...)

Undefine the passed aliases.
'
function undefine_alias() {
    die_unless_args 'expected at least one alias name'
    unalias -- "${@}"
}

# --------------------( WASTELANDS                         )--------------------
