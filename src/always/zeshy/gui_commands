#!/usr/bin/env zsh
# ====================[ gui_commands                       ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define interactive aliases for installed GUI commands.

# ....................{ DEFINERS                           }....................
#FIXME: It'd be nice to permit users to dynamically add aliases to such list.
#Since we already helpfully use a global variable below, we need only add a few
#helper functions to enable this.

# void setup_interactive_aliases_for_gui_commands(void)
#
# Define interactive aliases for a subset of hard-coded GUI commands.
setup_interactive_aliases_for_gui_commands() {
    # List of GUI command names in interactive substitution name format (e.g.,
    # embedding "{"- and "}"-delimited strings defining the corresponding
    # interactive abbreviation name).
    global_list ZESHY_INTERACTIVE_SUBSTITUTION_NAMES_FOR_GUI_COMMANDS
    ZESHY_INTERACTIVE_SUBSTITUTION_NAMES_FOR_GUI_COMMANDS+=(
        {acr}oread                     # Adobe Acrobat.
    )

    # For each such name, if such name stripped of "{"- and "}"-delimited
    # substrings produces a currently installed command name, define such name
    # to interactively expand to such command name "disowned" from the current
    # shell. GUI commands should almost always run "disowned" to prevent their
    # termination on termination of the parent shell.
    string command_name
    for subst_name\
        ("${ZESHY_INTERACTIVE_SUBSTITUTION_NAMES_FOR_GUI_COMMANDS[@]}") {
        command_name="${subst_name//[\{\}]}"
        is_installed "${command_name}" and
            interactive_substitution ${subst_name}="run_disowned ${command_name}"
    }
}

# --------------------( WASTELANDS                         )--------------------
#Of course, this begins to raise awkward timing issues, as well... Ah. No; it
#doesn't, really.

# Unlike Zeshy Interactive Alias, this component need not reside under
# "00-setup". It does, however, need be imported after importing Zeshy
# Interactive Alias. Thus, its filename.
        # If such command is installed, define such substitution.
