#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'-/-'
Handle `zeshy`-specific paths.
-/-

# ....................{ PATHS                              }....................
# Such paths depend on command-line option "--zeshy-dot-dir" and hence cannot be
# defined until having matched such option (e.g., zeshy startup).

declare_global_with_stdin <<'/---'
string ZESHY_USER_PID_DIR

Absolute path of the directory caching `zeshy`-managed process IDs. If the
current user has superuser privileges, this is a canonical system-wide directory
if such directory exists (e.g., `/run`, `/var/run`); else, this is a user-
specific subdirectory of `zeshy`\'s dot directory.
/---

# ....................{ PATHS ~ completion                 }....................
declare_global_with_stdin string ZESHY_USER_COMPLETION_STARTUP_FILE <<'/---'
Absolute path of the file caching compinit() completion initialization.
/---

declare_global_with_stdin string ZESHY_USER_COMPLETION_RESULTS_DIR <<'/---'
Absolute path of the directory caching `zsh` completion results.
/---

# ....................{ PATHS ~ documentation              }....................
declare_global_with_stdin string ZESHY_USER_HELP_DIR <<'/---'
Absolute path of the directory caching `zeshy` documentation.
/---

declare_global_with_stdin string ZESHY_USER_HELP_ALIAS_DIR <<'/---'
Absolute path of the directory caching `zeshy`-specific alias documentation.
/---

declare_global_with_stdin string ZESHY_USER_HELP_FUNCTION_DIR <<'/---'
Absolute path of the directory caching `zeshy`-specific function documentation.
/---

declare_global_with_stdin string ZESHY_USER_HELP_GLOBAL_DIR <<'/---'
Absolute path of the directory caching `zeshy`-specific global documentation.
/---

# ....................{ PATHS ~ zsh                        }....................
declare_global_with_stdin string ZESHY_USER_DIR_STACK_FILE <<'/---'
Absolute path of the file persisting `zsh` directory stack directories.
/---

declare_global_with_stdin string HISTFILE <<'/---'
Absolute path of the file persisting `zsh` command-line history.
/---

# ....................{ GETTERS                            }....................
#FIXME: Such globals should be set *MUCH* earlier in the startup logic --
#ideally, immediately after calling startup_zeshy_globals(). To ensure this,
#contemplate adding a new run_hook_on_zeshy_startup_globals() function; then,
#ensure that our startup_zeshy_globals() implementation calls all hooks
#registered in this manner.
#FIXME: Alternatively, this logic should *REALLY* be performed at digest
#compilation time. It's just too awkward to perform dynamically on each startup,
#especially when such logic is the same *EACH* time, most times. This implies
#that, when the user passes command-line option "--zeshy-dot-dir", @{main}
#should force a digest recompilation. This is perfectly acceptable, at the
#moment. Indeed, if need ever arose, such logic is readily optimizable by
#caching under "~/.zeshy/cache/digest/" digests specific to passed paths (e.g.,
#if the user runs "zeshy --zeshy-dot-dir ~/.akbar", compiling such digest to a
#new file "~/.zeshy/cache/digest/fi8uYWtiYXI.zwc", where "fi8uYWtiYXI" is the
#base64 encoding of "~/.akbar"). Note, in the prior example, that safely
#converting pathnames to basenames requires some encoding scheme: base64 is one,
#but there exist *MANY* others. Honestly, it would be most efficient to simply
#encode the two prohibited characters (i.e., directory separators and null
#characters). *shrug*
run_hook_on_zeshy_startup startup_zeshy_paths

#FIXME: Rename to startup_zeshy_globals_path().
declare_function_with_stdin <<'/---'
void startup_zeshy_paths(void)

Define `zeshy`-specific paths. Such paths depend on string global
${ZESHY_USER_CACHE_DIR} itself depending on optional command-line option
`--zeshy-dot-dir`. Hence, such paths must be defined on each `zeshy` startup
rather than statically precompiled into `zeshy`\'s user digest file.
/---
function startup_zeshy_paths() {
    # Validate sanity. If ignoring zeshy's dot directory, return silently.
    die_if_args
    is_string_nonempty "${ZESHY_DOT_DIR}" or return_true

    # Set such paths, having now matched command-line option "--zeshy-dot-dir"
    # and hence string global ${ZESHY_USER_CACHE_DIR}.
    ZESHY_USER_COMPLETION_STARTUP_FILE="${ZESHY_USER_CACHE_DIR}/completion_startup"
    ZESHY_USER_COMPLETION_RESULTS_DIR="${ZESHY_USER_CACHE_DIR}/completion_results"
    ZESHY_USER_DIR_STACK_FILE="${ZESHY_USER_CACHE_DIR}/dir_stack"
    HISTFILE="${ZESHY_USER_CACHE_DIR}/history"
    ZESHY_USER_HELP_DIR="${ZESHY_USER_CACHE_DIR}/help"
    ZESHY_USER_HELP_ALIAS_DIR="${ZESHY_USER_HELP_DIR}/alias"
    ZESHY_USER_HELP_FUNCTION_DIR="${ZESHY_USER_HELP_DIR}/function"
    ZESHY_USER_HELP_GLOBAL_DIR="${ZESHY_USER_HELP_DIR}/global"

    # See ${ZESHY_USER_PID_DIR} documentation for further details.
    if { is_superuser } {
        ZESHY_USER_PID_DIR="$(get_dir_writable_first_if_found /run /var/run)" or
        ZESHY_USER_PID_DIR="${ZESHY_USER_CACHE_DIR}/pid"
    } else {
        ZESHY_USER_PID_DIR="${ZESHY_USER_CACHE_DIR}/pid"
    }

    # Create all non-extant directories not managed elsewhere. Note "zeshy/help"
    # components manage all help documentation directories.
    make_dir_if_not_found\
        "${ZESHY_USER_COMPLETION_RESULTS_DIR}"\
        "${ZESHY_USER_PID_DIR}"

    #FIXME: Obviously, should be rewritten on upgrades. I believe we intend on
    #testing for that somewhere, yes? Wherever we end up doing that, this line
    #of code should obviously be shifted to such process.

    # Cache the currently installed version of Zeshy if not already cached.
    if { not is_file "${ZESHY_USER_VERSION_FILE}" } {
        write_file_with_string\
            "${ZESHY_USER_VERSION_FILE}" "$(get_zeshy_version)"
    }
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Ah! Yes. This is *ABSOLUTELY* the way forward on both this issue and
#others. Why? Because this provides an elegant means of resetting global

#FUXME: This is *NONSENSE*. No, really. All such paths should absolutely be
#set at precompile time, as we *NEVER* 
    #FUXME: Either shift somewhere more appropriate or rename this function to
    #something more appropriate. It's pretty much just a grab-bag of
    #miscellaneous startup code, at the moment.

#FUXME: Since the dot directory can be changed from the command-line, this
#probably isn't quite right. Indeed, this should really be pushed out of this
#file and into the Zeshy codebase. (Unsure quite where, of course...)
