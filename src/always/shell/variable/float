#!/usr/bin/env zsh
# ====================[ float                              ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle floating point variables and values.

# ....................{ EXCEPTIONS                         }....................
#FIXME: Also implement genuine die_unless_float() and is_float() methods.
#(Pilfer the implementation from the "integer" component.)
document_function '
void die_unless_string_float(
  string value,
  string error_message = "\${value}\" not a float")

Throw an exception unless the passed string is a float. See is_string_float()
for further details.
'
function die_unless_string_float() {
    die_unless_args_1_to_2\
        'expected one string and optional error message'
    string text="${1}"
    is_string_float "${text}" or die "${2:-\"${text}\" not a float}"
}

# ....................{ TESTERS                            }....................
document_function '
boolean is_string_float(string value)

Return true if the passed string is a float (i.e., a string consisting of an
optional negative sign, one or more digits, a decimal point, and one or more
digits).
'
function is_string_float() {
    die_unless_arg 'expected one string'
    is "${1}" == (-|)<->.<-> si  # see is_string_integer()
}

# ....................{ WRITERS                            }....................
document_function '
float round_string_float(float number, integer precision = 0)

Round the passed float to the passed number of decimal places (defaulting to 0
and hence rounding to a whole integer).
'
function round_string_float() {
    # Validate passed arguments.
    die_unless_args_1_to_2 'expected one float and optional precision'
    string number="${1}" precision="${2:-0}"
    die_unless_string_float "${number}"

    #FIXME: Uh. What's this?
    die_unless_string_nonnegative_number "${precision}"

    # Round such float.
    printf "%.${precision}f\n" ${number}
}

# --------------------( WASTELANDS                         )--------------------
