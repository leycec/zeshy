#!/usr/bin/env zsh
# ====================[ integer                            ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle integer variables.

# ....................{ EXCEPTIONS                         }....................
# void die_unless_integer(
#   string variable_name,
#   string error_message = "\"${variable_name}\" not an integer")
#
# Throw an exception unless the passed variable is an integer.
function die_unless_integer() {
    die_unless_one_or_two_args\
        'expected one variable name and optional error message'
    string variable_name="${1}"
    is_integer "${variable_name}" or
        die "${2:-\"${variable_name}\" not an integer}"
}

# void die_unless_integer_positive(
#   string variable_name,
#   string error_message = "\"${variable_name}\" not a positive integer")
#
# Throw an exception unless the passed variable is an integer > 0.
function die_unless_integer_positive() {
    die_unless_one_or_two_args\
        'expected one variable name and optional error message'
    string variable_name="${1}"
    is_integer_positive "${variable_name}" or
        die "${2:-\"${variable_name}\" not a positive integer}"
}

# void die_unless_integer_nonnegative(
#   string variable_name,
#   string error_message = "\"${variable_name}\" not a nonnegative integer")
#
# Throw an exception unless the passed variable is an integer >= 0.
function die_unless_integer_nonnegative() {
    die_unless_one_or_two_args\
        'expected one variable name and optional error message'
    string variable_name="${1}"
    is_integer_nonnegative "${variable_name}" or
        die "${2:-\"${variable_name}\" not a nonnegative integer}"
}

# ....................{ TESTERS                            }....................
# boolean is_integer(string variable_name)
#
# Return true if the passed variable is an integer.
function is_integer() {
    die_unless_one_arg 'expected one variable name'
    is_variable_type_match "${1}" 'integer*'
}

# boolean is_integer_positive(string variable_name)
#
# Return true if the passed variable is an integer > 0.
function is_integer_positive() {
    die_unless_one_arg 'expected one string'
    string variable_name="${1}"
    is_integer "${variable_name}" and (( ${(P)variable_name} > 0 ))
}

# boolean is_integer_nonnegative(string variable_name)
#
# Return true if the passed variable is an integer >= 0.
function is_integer_nonnegative() {
    die_unless_one_arg 'expected one string'
    string variable_name="${1}"
    is_integer "${variable_name}" and (( ${(P)variable_name} >= 0 ))
}

# --------------------( WASTELANDS                         )--------------------
# (i.e., constrained to natural numbers and
# negatives of such numbers)
