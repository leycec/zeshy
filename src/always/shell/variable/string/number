#!/usr/bin/env zsh
# ====================[ number                             ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle string variables with either integer or floating point values.
#
# --------------------( SEE ALSO                           )--------------------
# "number"
#     Handle string variables with only integer values.
# "float"
#     Handle string variables with only floating point values.

# ....................{ EXCEPTIONS                         }....................
# void die_unless_string_number(
#   string value,
#   string error_message = "\"${value}\" not an integer or float")
#
# Throw an exception unless the passed string is an integer or float.
die_unless_string_number() {
    die_unless_one_or_two_args\
        'expected one string and optional error message'
    string value="${1}"
    is_string_number "${value}" or
        die "${2:-\"${value}\" not an integer or float}"
}

# void die_unless_string_number_nonnegative(
#   string value,
#   string error_message = "\"${value}\" not a nonnegative number or float")
#
# Throw an exception unless the passed string is an number >= 0.
die_unless_string_number_nonnegative() {
    die_unless_one_or_two_args\
        'expected one string and optional error message'
    string value="${1}"
    is_string_number_nonnegative "${value}" or
        die "${2:-\"${value}\" not a nonnegative number or float}"
}

# ....................{ TESTS                              }....................
# boolean is_string_number(string value)
#
# Return true if the passed string is an integer or float (i.e., a string with
# an optional negative sign, one or more digits, and an optional decimal point
# and one or more digits).
is_string_number() {
    die_unless_one_arg 'expected one string'
    is "${1}" == (-|)<->(.<->|) si  # see is_string_integer() and ..._float()
}

# boolean is_string_number_nonnegative(string value)
#
# Return true if the passed string is an integer or float >= 0.
is_string_number_nonnegative() {
    die_unless_one_arg 'expected one string'
    string value="${1}"
    is_string_number "${value}" and (( value >= 0 ))
}

# --------------------( WASTELANDS                         )--------------------
