#!/usr/bin/env zsh
# ====================[ hexadecimal                        ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle hexadecimal strings (i.e., base 16 integers signifying values 10
# through 15 as characters 'A' through 'F').

# ....................{ EXCEPTIONS                         }....................
# void die_unless_string_hexadecimal(
#   string value,
#   string error_message = "\"${value}\" not a hexadecimal string")
#
# Throw an exception unless the passed string is hexidecimal. See
# is_hexadecimal() for further details.
die_unless_string_hexadecimal() {
    die_unless_args_1_to_2\
        'expected one string and optional error message'
    is_string_hexadecimal "${1}" or
        die "${2:-\"${1}\" not a hexadecimal string}"
}

# ....................{ TESTS                              }....................
# boolean is_string_hexadecimal(string value)
#
# Return true if the passed string is a hexadecimal in either C format (e.g.,
# "0xFEEDBEEF") or Zsh format (e.g., "16#DEADFACE").
is_string_hexadecimal() {
    die_unless_arg 'expected one string'
    is "${1}" == ('0x'|[[:digit:]]##'#')[[:xdigit:]]## si
}

# ....................{ CONVERTERS                         }....................
# string convert_integer_to_hexadecimal(string value)
#
# Convert the passed base 10 string integer to hexadecimal format: e.g.,
#
#     >>> convert_integer_to_hexadecimal 3405691582
#     0xCAFEBABE
convert_integer_to_hexadecimal() {
    # Validate passed arguments.
    die_unless_arg 'expected one integer'
    die_unless_integer "${1}"

    # Convert, locally guaranteeing Zsh option "c_bases" as output() requires.
    enable_shell_option_locally c_bases
    integer_in_base 16 hexadecimal="${1}"
    print_string ${hexadecimal}
}

# string convert_hexadecimal_to_integer(string hexadecimal)
#
# Convert the passed base 16 string hexadecimal to integer format: e.g.,
#
#     >>> convert_hexadecimal_to_integer 0xBADF00D
#     195948557
convert_hexadecimal_to_integer() {
    # Validate passed arguments.
    die_unless_arg 'expected one hexadecimal string'
    die_unless_string_hexadecimal "${1}"

    # Convert. Unlike convert_integer_to_hexadecimal(), this does not
    # require Zsh option "c_bases".
    integer_in_base 10 decimal="${1}"
    print_string ${decimal}
}

# --------------------( WASTELANDS                         )--------------------
