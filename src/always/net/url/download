#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *URL downloaders* (i.e., functions downloading remote webpages to local
files).
/---

# ....................{ DOWNLOADERS                        }....................
#FIXME: Provide support for user-configurable options implicitly expanded by
#calling run_code_with_options().

declare_function_with_stdin <<'/---'
void download_url_to_path:(string url, string filename)

Download the passed remote URL to the passed local file.
/---
# If "curl" is installed, download such URL to such file with such command.
# Since "curl" provides a more convenient interface for retrieving single files
# than "wget", prefer the former to latter.
if { is_pathable curl } {
    function download_url_to_path:() {
        # Validate sanity.
        die_unless_args_2 'Expected one URL and one pathname.'
        string url="${1}" filename="${2}"

        # Download such file.
        print_message 'Downloading '${url}' to "'${filename}'" with "curl"...'
        command curl --create-dirs --output "${filename}" "${url}"
    }
# If "wget" is installed, fallback to such command.
} elif { is_pathable wget } {
    function download_url_to_path:() {
        # Validate sanity.
        die_unless_args_2 'Expected one URL and one pathname.'
        string url="${1}" filename="${2}"

        #FIXME: We repeat such logic elsewhere. Since command substitution is
        #highly inefficient, however, such logic should be encapsulated in an
        #efficient function internally avoiding command substitution. Then, call
        #such function both here and wherever we repeat such logic. Just call it
        #make_file_dir_if_not_found().

        # While "curl" creates local directories as needed when passed option
        # "--create-dirs", "wget" provides no such option. Create such
        # directories manually to prevent "wget" from failing below.
        make_dir_if_not_found "$(get_path_dirname "${filename}")"

        # Download such file.
        print_message 'Downloading '${url}' to "'${filename}'" with "wget"...'
        command wget --no-clobber --output-document="${filename}" "${url}"
    }
}

# --------------------( WASTELANDS                         )--------------------
    # Else, neither command is installed. Throw an exception.
#   } else {
#       die '"curl" or "wget" not installed (or not in the current ${PATH}).'
#   }

# Since this function defers to whatever's
#available, we don't require a download_url_to_path_with_options:() alternative.
#FUXME: Rename to download_url_to_path:(). While the current nomenclature is
#slightly more terse, it's also harder for users to guess as well as having no
#clear inverse for uploading.
