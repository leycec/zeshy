#!/usr/bin/env zsh
# ====================[ time                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle path access, change, and modification times.

# ....................{ GETTERS                            }....................
# integer get_path_modification_time(string pathname)
#
# Get the modification time (i.e., mtime) of the passed path in Unix time,
# guaranteed to be the most recent time from the following list:
#
# * Such path's creation.
# * The most recent change to such path's permissions.
# * The most recent change to such path's content. If such path is a:
#   * File, this is the most recent change to such file's content.
#   * Directory, this is the most recent creation, deletion, or renaming (but
#     not change to permissions or content) of a file or subdirectory in such
#     directory.
function get_path_modification_time() {
    die_unless_one_arg 'expected one pathname'
    zstat +mtime "${1}"
}

# integer get_path_modification_time_recursively(string pathname)
#
# Get the modification time (i.e., mtime) of the passed path in Unix time,
# recursively. If such path is a:
#
# * File, this is the same time as returned by get_path_modification_time().
# * Directory, this is the most recent modification time of such directory and
#   all files and subdirectories of such directory, recursively.
function get_path_modification_time_recursively() {
    # Validate passed arguments.
    die_unless_one_arg 'expected one pathname'
    string pathname="${1}"

    # Calculate such time. Dismantled, this is:
    #
    # * "${pathname}"/**/*, all files and subdirectories of this directory.
    # * "om", such files and subdirectories in ascending order by mtime.
    # * "[1]", the first and hence newest such file or subdirectory.
    if is_dir "${pathname}"
    then get_path_modification_time "${pathname}"/**/*(om[1])
    else get_path_modification_time "${pathname}"
    fi
}

# ....................{ SETTERS                            }....................
#   if is_file "${pathname}"
#   else die "\"${pathname}\" not found or not a file or directory"
# void set_path_modification_time(
#   string pathname, integer modification_time = $(get_current_unix_time))
#
# Set the modification time of the passed path to the passed Unix time
# (defaulting to the current time).
function set_path_modification_time() {
    # Validate passed arguments.
    die_unless_one_or_two_args\
        'expected one pathname and optional modification time'
    string pathname="${1}" mtime
    mtime="${2:-$(get_current_unix_time)}"
    die_unless_found "${pathname}"
    die_unless_string_positive_integer "${mtime}"

    #FIXME: Probably GNU-specific. *collective shrug*
    # Set modification time.
    touch -m --date=@${mtime} -- "${pathname}"
}

# --------------------( WASTELANDS                         )--------------------
#     directory's file or subdirectory creation,
#     deletion, 
# * to file content or
# permissions. If such path is a directory, this time reflects file and
# subdirectory creation but not changes to file or subdirectory content or
# permissions.
