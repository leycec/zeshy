#!/usr/bin/env zsh
# ====================[ move                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle path movement (i.e., renaming).

# ....................{ MOVERS                             }....................
declare_function '
void move_path(
  string source_pathname1, string source_pathname2, ...,
  string target_pathname)

Silently move the passed source paths to the passed target path. If any source
path does not exist, throw an exception. If any source path is a symbolic link
broken after such move, print a warning.
'
function move_path() {
    die_unless_args_2_or_more\
        'expected at least one source pathname and one target pathname'
    run_command_silent_with_options 'command mv' ZESHY_MV_OPTIONS -- "${(q)@}"
    cry_if_link_symbolic_broken_after_copy_or_move_path "${@}"
}

declare_function '
void move_path_with_options(
  string mv_option1, string mv_option2, ...,
  string source_pathname1, string source_pathname2, ...,
  string target_pathname = "$(get_current_dir)")

Move the passed source paths to the passed target path (defaulting to the
current directory) with both the passed and currently configured "mv"-specific
options. See move_path() for further details.
'
function move_path_with_options() {
    # Validate passed arguments. If passed only one source path, default the
    # target path to the current directory.
    die_unless_args_1_or_more\
        'expected at least one source pathname and optional target pathname'
    set_integers_to_arg_nonoption_count_and_first_index_from\
        'arg_nonoption_count arg_nonoption_first_index'
    (( arg_nonoption_count == 1 )) and append_arg "$(get_current_dir)"

    # Move such paths.
    run_command_with_options_configured 'command mv' ZESHY_MV_OPTIONS "${(q)@}"

    # Print warnings for symbolic links broken by such move.
    cry_if_link_symbolic_broken_after_copy_or_move_path\
        "${@[${arg_nonoption_first_index},-1]}"
}

# --------------------( WASTELANDS                         )--------------------
    #FUXME: If only one non-option argument passed, append the current directory
    #to the current argument list.
    #FUXME: Only pass non-option arguments. We get the desired index above, so
    #simply use it here.

# "shallowly" (i.e., moving source symbolic links rather than the targets of such links)
