#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *file retrievers* (i.e., functions downloading remote to local files).
/---

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
void save_uri_to_path:(string uri, string pathname)

Download the passed remote URI to the passed local path.
/---
function save_uri_to_path:() {
    # Validate sanity.
    die_unless_args_2 'Expected one URI and one pathname.'
    string uri="${1}" filename="${2}"

    #FIXME: Clearly, we should provide support for "curl" (probably preferring
    #"curl" to "wget", I'd imagine) as well as proper user-configurable options
    #implicitly expanded by calling run_code_with_options(). Since this function
    #defers to whatever's available, we don't require a
    #save_uri_to_path_with_options:() alternative.

    # If "curl" is installed, download such URI to such file with such command.
    # Since "curl" provides a more convenient interface for retrieving single
    # files than "wget", prefer "curl" to "wget".
    if { is_pathable curl } {
        print_message 'Downloading '${uri}' to "'${filename}'" with "curl"..'
        command curl --create-dirs --output "${filename}" "${uri}"
    # If "wget" is installed, download such URI to such file with such command.
    } elif { is_pathable wget } {
        print_message 'Downloading '${uri}' to "'${filename}'" with "wget"..'

        #FIXME: We repeat such logic elsewhere. Since command substitution is
        #highly inefficient, however, such logic should be encapsulated in an
        #efficient function internally avoiding command substitution. Then, call
        #such function both here and wherever we repeat such logic. Just call it
        #make_file_dir_if_not_found().

        # While "curl" creates local directories as needed when passed option
        # "--create-dirs", "wget" provides no such option. Create such
        # directories manually to prevent "wget" from failing.
        make_dir_if_not_found "$(get_path_dirname "${filename}")"

        # Download such URI.
        command wget --no-clobber --output-document="${filename}" "${uri}"
    # Else, neither command is installed. Throw an exception.
    } else {
        die '"curl" or "wget" not installed (or not in the current ${PATH}).'
    }
}

# --------------------( WASTELANDS                         )--------------------
