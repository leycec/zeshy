#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *text file replacers* (i.e., functions searching for and replacing text
file content).
/---

# ....................{ REPLACERS                          }....................
declare_function_with_stdin <<'/---'
void replace_file_text_matching_pcre_by_text:(
    string filename1, ...,
    string pcre,
    string replacement_substring)

Globally replace all substrings in the contents of the passed text files
matching the passed PCRE with the passed replacement substring. See
replace_scalar_text_matching_pcre_by_text:() for further details.
/---
function replace_file_text_matching_pcre_by_text:() {
    # Validate sanity.
    die_unless_args_3_or_more\
        'Expected one or more filenames, one PCRE, and one replacement substring.'
    string filename pcre="${@[-2]}" replacement="${@[-1]}"
    pop_args_2

    for filename ("${@}") {
        die_unless_file_text "${filename}"

        # Replace such file contents. While we could call
        # replace_map_key_value_text_matching_pcre_by_text:() here, it gains us
        # little while adding a modest amount of overhead. Call
        # replace_scalar_text_matching_pcre_by_text:() directly, instead.
        run_code_with_mapfile:\
            'replace_scalar_text_matching_pcre_by_text:\
                mapfile[${filename}] "${pcre}" "${replacement}"'
    }
}

#FIXME: In lieu of unit tests...
function omom() {
    string filename="${HOME}/tmp/tamp.tamp"
    write_file_with_string\
        "${filename}"\
        '““““quote_double_right”””””quote_single_left‘‘‘‘‘quote_single_right’’’’’’border_top┈┈┈┈┈┈border_bottom┈┈┈┈┈┈┈border_left┋┋┋┋┋┋┋border_right┋┋┋┋┋┋┋'
    print_message_heading "${filename} (old)"
    print_file_text "${filename}"

    replace_file_text_matching_pcre_by_text:\
        "${filename}" '(quote_|border_).*?(quote_|border_)' '${match[1]}???${match[2]}'
    print_message_heading "${filename} (new)"
    print_file_text "${filename}"

    remove_file "${filename}"
}

# --------------------( WASTELANDS                         )--------------------
# While we could call
    # replace_map_key_value_text_matching_pcre_by_text:() here, it gains us 
