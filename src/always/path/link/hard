#!/usr/bin/env zsh
# ====================[ hard                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle hard links.

# ....................{ EXCEPTIONS                         }....................
document_function '
void die_unless_link_hard(
  string pathname,
  string error_message = "\"${pathname}\" not a hard link")

Throw an exception unless the passed hard link exists. See is_link_hard() for
further details.
'
function die_unless_link_hard() {
    die_unless_args_1_to_2\
        'expected one pathname and optional error message'
    string pathname="${1}"
    is_link_hard "${pathname}" or die "${2:-\"${pathname}\" not a hard link}"
}

# ....................{ TESTERS                            }....................
document_function '
boolean is_link_hard(string pathname)

Return true if the passed path is an existing hard link (i.e., an existing file
to which another existing path on the current filesystem hard links). In theory,
all paths are hard linkable; in practice, only files are hard linked. While some
*nix variants allow the superuser to hard link directories, doing so can
invalidate fundamental filesystem invariants -- particularly, that of a directed
acyclic directory tree structure. Most *nix variants prohibit directory hard
linking. For portability, this function enforces the prohibition by always
returning false on directories. See "info ln" for further details.
'
function is_link_hard() {
    die_unless_arg 'expected one pathname'
    string pathname="${1}"
    is_file "${pathname}" and (( $(zstat +nlink -- "${pathname}") > 1 ))
}

# --------------------( WASTELANDS                         )--------------------
