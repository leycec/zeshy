#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle hard links.
/---

# ....................{ EXCEPTIONS                         }....................
declare_function_with_stdin <<'/---'
void die_unless_link_hard(
    string pathname,
    string error_message = "\"${pathname}\" not a hard link")

Throw an exception with the passed message unless the passed hard link exists.
See is_link_hard() for further details.
/---
function die_unless_link_hard() {
    die_unless_args_1_to_2\
        'expected one pathname and optional error message'
    string pathname="${1}"
    is_link_hard "${pathname}" or die "${2:-\"${pathname}\" not a hard link}"
}

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
[status: boolean] is_link_hard(string pathname)

Return success if the passed path is an existing *hard link* (i.e., file to
which another file on the same filesystem links). In theory, all paths are hard
linkable; in practice, only non-directory files are hard linked. While some
*nix variants allow the superuser to hard link directories, doing so may
invalidate fundamental filesystem invariants (e.g., directed acyclic directory
tree structure). Most *nix variants prohibit directory hard linking. For
portability, this function enforces the prohibition by returning failure for
directories. See `info ln` for further details.
/---
function is_link_hard() {
    die_unless_arg 'expected one pathname'
    string pathname="${1}"
    is_file "${pathname}" and (( $(zstat +nlink -- "${pathname}") > 1 ))
}

# --------------------( WASTELANDS                         )--------------------
