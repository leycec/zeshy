#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle core string aliases.
/---

# ....................{ UNESCAPERS                         }....................
declare_alias_with_stdin\
    'string unescape_string(string text1 = "", string text2, ...)'\
    'print --' <<'/---'
Output the passed strings (defaulting to the empty string) to standard output
with trailing newline and recognizing all escape sequences recognized by low-
level builtins echo() and print(). These include:

* `\a`, a bell character.
* `\b`, a backspace.
* `\c`, suppressing the final newline.
* `\e`, a escape.
* `\f`, a form feed.
* `\n`, a newline.
* `\r`, a carriage return.
* `\t`, a horizontal tab.
* `\v`, a vertical tab.
* `\\`, a backslash.
* `\0NNN`, the character with octal value NNN.
* `\xNN`, the character with hexadecimal value NN.
* `\C-X`, producing the control character corresponding to character X. Namely:
** `\C-@`, control character NUL (null).
** `\C-?`, control character DEL (delete).
* `\X`, where `X` is any character _not_ listed above, escaping and hence
  printing `X` as is.

For example:

.unescape_string()
==========================================
[source]
------------------------------------------
>>> string morning_window="\nTHEY are rattling breakfast plates...\n"
>>> unescape_string "${morning_window}"

THEY are rattling breakfast plates...

>>> output_string "${morning_window}"
\nTHEY are rattling breakfast plates...\n
------------------------------------------
==========================================

See output_string() for further details.
/---

# --------------------( WASTELANDS                         )--------------------
