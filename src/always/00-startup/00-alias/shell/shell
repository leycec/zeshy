#!/usr/bin/env zsh
# ====================[ shell                              ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define assorted shell aliases.

# ....................{ RUNNERS                            }....................
document_alias '
string interactively<
  string command_name, string command_arg1, string command_arg2, ...>

Run the passed command only if the current shell is interactive. See
is_shell_interactive() for further details.
'
alias interactively='is_shell_interactive and'

# ....................{ ENABLERS                           }....................
document_alias '
void enable_shell_option_locally<string option_name1, string option_name2, ...>

Temporarily enable the passed shell options in the current function or script,
disabling such options on leaving such function or script: e.g.,

    >>> function risky_non_business() {
    ...     enable_shell_option_locally no_warn_create_global
    ...     a_new_hopelessness="None shall pass."
    ... }
    ... risky_non_business                      # this does not print a warning!
    ... an_old_cheerfulness="Some shall pass."  # this does
'
alias enable_shell_option_locally='setopt -- local_options'

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to run_if_shell_interactive<>.
#FUXME: Rename to enable_shell_options_locally(). Define the corresponding
#enable_shell_options_globally() function, too. Might as well be specific, yes?
# This is particularly helpful for localizing such options to function calls
