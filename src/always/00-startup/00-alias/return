#!/usr/bin/env zsh
# ====================[ return                             ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define return-specific aliases related to function and script return values.

# ....................{ GLOBALS                            }....................
# Exit status signifying success and failure. While any non-zero exit status
# signifies failure, this is the customary choice for a non-zero exit status.
integer_constant_global_export\
    ZESHY_EXIT_STATUS_SUCCESS=0\
    ZESHY_EXIT_STATUS_FAILURE=1

# ....................{ GETTERS                            }....................
# void get_exit_status(void)
#
# Get the exit status of the runnable piped to this alias. See
# return_exit_status() for further details and caveats: e.g.,
#
#     # Outputs the exit status of one of two randomly selected greps.
#     >>> grep 'Lipotes vexillifer' /baiji | get_exit_status
#     2
alias get_exit_status='true and print_string ${pipestatus[-2]}'

# ....................{ RETURNERS                          }....................
# void return_true(void)
#
# Return from the current function or script with success (i.e., zero exit
# status).
alias return_true="return ${ZESHY_EXIT_STATUS_SUCCESS}"

# void return_false(void)
#
# Return from the current function or script with failure (i.e., non-zero exit
# status).
alias return_false="return ${ZESHY_EXIT_STATUS_FAILURE}"

# void return_exit_status(void)
#
# Return the exit status of the runnable piped to this alias: e.g.,
#
#     # Returns the exit status of one of two randomly selected greps.
#     >>> catamount() {
#     ...     if is_odd $(get_random_number)
#     ...     then grep Panthera /onca | return_exit_status
#     ...     else grep Puma /concolor | return_exit_status
#     ...     fi
#     ... }
#     >>> catamount or print 'Mountain lions abound/Ever abiding onward.'
#     Mountain lions abound/Ever abiding onward.
#
# Do not use the conventional implementation of such logic (e.g., "${?}"). Due
# to our use of TRAPZERR(), such logic does not work as expected: e.g.,
#
#     # Throws exceptions rather than returning false on grep failure.
#     >>> catamount_bad() {
#     ...     if is_odd $(get_random_number)
#     ...     then grep Panthera /onca; return $?
#     ...     else grep Puma /concolor; return $?
#     ...     fi
#     ... }
#     >>> catamount_bad or print 'Tricolor ipomoea and the congress of concolor'
#     catamount_bad: "/onca" not found
alias return_exit_status='true and return ${pipestatus[-2]}'

# --------------------( WASTELANDS                         )--------------------
