#!/usr/bin/env zsh
# ====================[ return                             ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define return-specific aliases related to function and script return values.

# ....................{ GLOBALS                            }....................
declare_global '
integer ZESHY_EXIT_STATUS_SUCCESS

Exit status signifying success (i.e., 0).
'
ZESHY_EXIT_STATUS_SUCCESS=0

declare_global '
integer ZESHY_EXIT_STATUS_FAILURE

Exit status signifying failure. While any integer ranging [1, 255] signifies
such failure, this integer is the typical default (i.e., 1).
'
ZESHY_EXIT_STATUS_FAILURE=1

# ....................{ GETTERS                            }....................
declare_alias '
void get_exit_status<void>

Get the exit status of the runnable piped to this alias. See
return_command_exit_status<> for further details and caveats: e.g.,

    # Output the exit status of one of two randomly selected greps.
    >>> grep "Lipotes vexillifer" /baiji | get_exit_status
    2
'
alias get_exit_status='true and print_string ${pipestatus[-2]}'

# ....................{ RETURNERS                          }....................
declare_alias '
void return_true<void>

Return from the current function or script with success (i.e., zero exit
status).
'
alias return_true="return ${ZESHY_EXIT_STATUS_SUCCESS}"

declare_alias '
void return_false<void>

Return from the current function or script with failure (i.e., non-zero exit
status).
'
alias return_false="return ${ZESHY_EXIT_STATUS_FAILURE}"

# ....................{ RETURNERS ~ status                 }....................
declare_alias '
void return_command_exit_status<void>

Return the exit status of the runnable piped to this alias: e.g.,

    # Return the exit status of one of two randomly selected greps.
    >>> function catamount() {
    ...     if is_odd $(get_random_number)
    ...     then grep_path /onca panthera | return_command_exit_status
    ...     else grep_path /concolor puma | return_command_exit_status
    ...     fi
    ... }
    >>> catamount or print_string "Mountain lions abound, abiding ever on."
    Mountain lions abound, abiding ever on.

Do not use the conventional implementation of such logic (e.g., "${?}"). Due
to our use of TRAPZERR(), such logic does not work as expected: e.g.,

    # Throw exceptions rather than returning false on grep failure.
    >>> function catamount_bad() {
    ...     if is_odd $(get_random_number)
    ...     then grep_path /onca panthera; return $?
    ...     else grep_path /concolor puma; return $?
    ...     fi
    ... }
    >>> catamount_bad or
    ...     print_string "Tricolor ipomoea and the congress of concolor"
    catamount_bad: "/onca" not found
'
alias return_command_exit_status='true and return ${pipestatus[-2]}'

declare_alias '
boolean return_command_exit_status_if_false<void>

Return the exit status of the runnable piped to this alias if such status is
non-zero or return true: e.g.,

    >>> function blue_dragon() {
    ...     grep_path /glaucus atlanticus | return_command_exit_status_if_false
    ...     print_string "Flagellate flagon of the sea! Compel, return to me."
    ... }
    >>> blue_dragon or print_string "Azure indifference, indelicately sidereal."
    Azure indifference, indelicately sidereal.
'
alias return_command_exit_status_if_false="true and {
    (( \${pipestatus[-2]} == ${ZESHY_EXIT_STATUS_SUCCESS} )) or
        return \${pipestatus[-2]}
}"

# ....................{ RETURNERS ~ content                }....................
# See also "list" for related alias return_list<>.

declare_alias '
string return_string<string text>

Return the passed string from the current function or script. Specifically,
print such string to standard output and return from such function or script
with zero exit status (i.e., success).
'
alias return_string='
{
    print_stdin
    return_true
} <<<'

declare_alias '
string return_boolean<boolean number>

Return the passed boolean from the current function or script. See
return_string<> for further details.
'
alias return_boolean=return_string

declare_alias '
string return_float<float number>

Return the passed float from the current function or script. See
return_string<> for further details.
'
alias return_float=return_string

declare_alias '
string return_integer<integer number>

Return the passed integer from the current function or script. See
return_string<> for further details.
'
alias return_integer=return_string

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to return_command_exit_status() or return_prior_exit_status().
#I'm partial to the former, which nicely comports with Zeshy nomenclature.

