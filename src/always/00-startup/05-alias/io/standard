#!/usr/bin/env zsh
# ====================[ standard                           ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define standard file descriptor-specific aliases.

# ....................{ CLOSERS                            }....................
declare_alias_with_stdin <<'/---'
void close_stdin(void)

Close the standard input file descriptor (i.e., 0) and corresponding named pipe
(i.e., `/dev/stdin`).
/---
alias close_stdin="exec ${ZESHY_FILE_DESCRIPTOR_STANDARD_INPUT}<&-"

declare_alias_with_stdin <<'/---'
void close_stdout(void)

Close the standard output file descriptor (i.e., 1) and corresponding named pipe
(i.e., `/dev/stdout`).
/---
alias close_stdout="exec ${ZESHY_STDOUT_FILE_DESCRIPTOR}>&-"

declare_alias_with_stdin <<'/---'
void close_stderr(void)

Close the standard error file descriptor (i.e., 2) and corresponding named pipe
(i.e., `/dev/stderr`).
/---
alias close_stderr="exec ${ZESHY_STDERR_FILE_DESCRIPTOR}>&-"

# ....................{ RUNNERS                            }....................
#FIXME: Terribly name, as this isn't a runner in the expected sense. Rename to
#print_stdin() and perform the pipe manually wherever this alias is expanded.
declare_alias_with_stdin <<'/---'
string run_command_with_stdin_piped(
    string command_name, string command_arg1, string command_arg2, ...)

Run the passed command by piping the standard input piped to the current
function or script to such command. Typically, this alias is used in concert
with the is_stdin_pipe() function to propagate piped input: e.g.,

.run_command_with_stdin_piped()
==========================================
[source]
------------------------------------------
>>> function salvia() {
...     if { is_stdin_pipe } {
...         run_command_with_stdin_piped cat
...     } else {
...         output_string "${@}"
...     }
... }
>>> output_string divinorum | salvia
divinorum
>>> salvia divinorum
divinorum
------------------------------------------
==========================================
/---
alias run_command_with_stdin_piped="{
    < \"${ZESHY_STDIN_PATH}\"
    close_stdin
} |"

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to ZESHY_STDIN_FILE_DESCRIPTOR and define a new
#ZESHY_STDIN_DEVICE_FILE (or perhaps simply ZESHY_STDIN_FILE, I should think)
#global expanding to "/dev/stdin". Then replace all instances of /dev/stdin with
#"${ZESHY_STDIN_DEVICE_FILE}".
#FUXME: Do so similarly for OUTPUT and ERROR globals, below.
