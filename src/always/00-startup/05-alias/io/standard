#!/usr/bin/env zsh
# ====================[ standard                           ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define standard file descriptor-specific aliases.

# ....................{ GLOBALS                            }....................
declare_global_with_stdin <<'________________<heredoc?>________________'
string ZESHY_STDIN_PATH

Absolute path of the canonical device file for standard input (i.e.,
"/dev/stdin"). See ${ZESHY_STDIN_FILE_DESCRIPTOR_PATH} for a similar path,
typically but _not_ necessarily symbolically linked to the same path.
________________<heredoc?>________________
ZESHY_STDIN_PATH='/dev/stdin'

declare_global_with_stdin <<'________________<heredoc?>________________'
string ZESHY_STDOUT_PATH

Absolute path of the canonical device file for standard output (i.e.,
"/dev/stdout"). See ${ZESHY_STDOUT_FILE_DESCRIPTOR_PATH} for a similar path,
typically but _not_ necessarily symbolically linked to the same path.
________________<heredoc?>________________
ZESHY_STDOUT_PATH='/dev/stdout'

declare_global_with_stdin <<'________________<heredoc?>________________'
string ZESHY_STDERR_PATH

Absolute path of the canonical device file for standard error (i.e.,
"/dev/stderr"). See ${ZESHY_STDERR_FILE_DESCRIPTOR_PATH} for a similar path,
typically but _not_ necessarily symbolically linked to the same path.
________________<heredoc?>________________
ZESHY_STDERR_PATH='/dev/stderr'

# ....................{ GLOBALS ~ fd                       }....................
declare_global_with_stdin <<'________________<heredoc?>________________'
integer ZESHY_STDIN_FILE_DESCRIPTOR

Canonical file descriptor for standard input (i.e., 0).
________________<heredoc?>________________
ZESHY_STDIN_FILE_DESCRIPTOR=0

declare_global_with_stdin <<'________________<heredoc?>________________'
integer ZESHY_STDOUT_FILE_DESCRIPTOR

Canonical file descriptor for standard input (i.e., 1).
________________<heredoc?>________________
ZESHY_STDOUT_FILE_DESCRIPTOR=1

declare_global_with_stdin <<'________________<heredoc?>________________'
integer ZESHY_STDERR_FILE_DESCRIPTOR

Canonical file descriptor for standard input (i.e., 2).
________________<heredoc?>________________
ZESHY_STDERR_FILE_DESCRIPTOR=2

# ....................{ GLOBALS ~ fd : path                }....................
declare_global_with_stdin <<'________________<heredoc?>________________'
string ZESHY_STDIN_FILE_DESCRIPTOR_PATH

Absolute path of the canonical file descriptor-specific device file for standard
input (i.e., "/dev/fd/0"). See ${ZESHY_STDIN_PATH} for a similar path, typically
but _not_ necessarily symbolically linked to the same path.
________________<heredoc?>________________
ZESHY_STDIN_FILE_DESCRIPTOR_PATH="/dev/fd/${ZESHY_STDIN_FILE_DESCRIPTOR}"

declare_global_with_stdin <<'________________<heredoc?>________________'
string ZESHY_STDOUT_FILE_DESCRIPTOR_PATH

Absolute path of the canonical file descriptor-specific device file for standard
output (i.e., "/dev/fd/1"). See ${ZESHY_STDOUT_PATH} for a similar path,
typically but _not_ necessarily symbolically linked to the same path.
________________<heredoc?>________________
ZESHY_STDOUT_FILE_DESCRIPTOR_PATH="/dev/fd/${ZESHY_STDOUT_FILE_DESCRIPTOR}"

declare_global_with_stdin <<'________________<heredoc?>________________'
string ZESHY_STDERR_FILE_DESCRIPTOR_PATH

Absolute path of the canonical file descriptor-specific device file for standard
error (i.e., "/dev/fd/2"). See ${ZESHY_STDERR_PATH} for a similar path,
typically but _not_ necessarily symbolically linked to the same path.
________________<heredoc?>________________
ZESHY_STDERR_FILE_DESCRIPTOR_PATH="/dev/fd/${ZESHY_STDERR_FILE_DESCRIPTOR}"

# ....................{ CLOSERS                            }....................
declare_alias_with_stdin <<'________________<heredoc?>________________'
void close_stdin<void>

Close the standard input file descriptor (0) and named pipe (`/dev/stdin`).
________________<heredoc?>________________
alias close_stdin="exec ${ZESHY_FILE_DESCRIPTOR_STANDARD_INPUT}<&-"

declare_alias_with_stdin <<'________________<heredoc?>________________'
void close_stdout<void>

Close the standard output file descriptor (1) and named pipe (`/dev/stdout`).
________________<heredoc?>________________
alias close_stdout="exec ${ZESHY_STDOUT_FILE_DESCRIPTOR}>&-"

declare_alias_with_stdin <<'________________<heredoc?>________________'
void close_stderr<void>

Close the standard error file descriptor (2) and named pipe (`/dev/stderr`).
________________<heredoc?>________________
alias close_stderr="exec ${ZESHY_STDERR_FILE_DESCRIPTOR}>&-"

# ....................{ RUNNERS                            }....................
declare_alias_with_stdin <<'________________<heredoc?>________________'
string run_command_with_stdin_piped(
    string command_name, string command_arg1, string command_arg2, ...)

Run the passed command by piping the standard input piped to the current
function or script to such command. Typically, this alias is used in concert
with the is_stdin_piped() function to propagate piped input: e.g.,

.run_command_with_stdin_piped()
==========================================
[source]
------------------------------------------
>>> salvia() {
...     is_stdin_piped and run_command_with_stdin_piped cat or
...         print_string "${@}"
... }
>>> print  divinorum | salvia
divinorum
>>> salvia divinorum
divinorum
------------------------------------------
==========================================
________________<heredoc?>________________
alias run_command_with_stdin_piped='{
    cat /dev/stdin
    close_stdin
} |'

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to ZESHY_STDIN_FILE_DESCRIPTOR and define a new
#ZESHY_STDIN_DEVICE_FILE (or perhaps simply ZESHY_STDIN_FILE, I should think)
#global expanding to "/dev/stdin". Then replace all instances of /dev/stdin with
#"${ZESHY_STDIN_DEVICE_FILE}".
#FUXME: Do so similarly for OUTPUT and ERROR globals, below.
