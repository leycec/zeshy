#!/usr/bin/env zsh
# ====================[ file                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define file-specific aliases.

# ....................{ GLOBALS                            }....................
#FIXME: Rename to ZESHY_STDIN_FILE_DESCRIPTOR and define a new
#ZESHY_STDIN_DEVICE_FILE (or perhaps simply ZESHY_STDIN_FILE, I should think)
#global expanding to "/dev/stdin". Then replace all instances of /dev/stdin with
#"${ZESHY_STDIN_DEVICE_FILE}".
#FIXME: Do so similarly for OUTPUT and ERROR globals, below.

document_global '
integer ZESHY_FILE_DESCRIPTOR_STANDARD_INPUT

Standard input file descriptor (i.e., integer).
'
ZESHY_FILE_DESCRIPTOR_STANDARD_INPUT=0

document_global '
integer ZESHY_FILE_DESCRIPTOR_STDOUT

Standard output file descriptor (i.e., integer).
'
ZESHY_FILE_DESCRIPTOR_STDOUT=1

document_global '
integer ZESHY_FILE_DESCRIPTOR_STDERR

Standard error file descriptor (i.e., integer).
'
ZESHY_FILE_DESCRIPTOR_STDERR=2

# ....................{ CLOSERS                            }....................
document_alias '
void close_standard_input<void>

Close the standard input file descriptor (0) and named pipe ("/dev/stdin").
'
alias close_standard_input="exec ${ZESHY_FILE_DESCRIPTOR_STANDARD_INPUT}<&-"

document_alias '
void close_standard_output<void>

Close the standard print_string file descriptor (1) and named pipe ("/dev/stdout").
'
alias close_standard_output="exec ${ZESHY_FILE_DESCRIPTOR_STDOUT}>&-"

document_alias '
void close_standard_error<void>

Close the standard error file descriptor (2) and named pipe ("/dev/stderr").
'
alias close_standard_error="exec ${ZESHY_FILE_DESCRIPTOR_STDERR}>&-"

# ....................{ RUNNERS                            }....................
document_alias '
string run_command_with_standard_input_piped<
  string command_name, string command_arg1, string command_arg2, ...>

Run the passed command by piping the standard input piped to the current
function or script to such command. Typically, this alias is used in concert
with the is_standard_input_piped() function to propagate piped input: e.g.,

    >>> salvia() {
    ...     is_standard_input_piped and run_command_with_standard_input_piped cat or print_string "${@}" cat
    ... }
    >>> print  divinorum | salvia
    divinorum
    >>> salvia divinorum
    divinorum
'
alias run_command_with_standard_input_piped='{
    cat /dev/stdin;
    close_standard_input
} |'

# --------------------( WASTELANDS                         )--------------------
