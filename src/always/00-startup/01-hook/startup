#!/usr/bin/env zsh
# ====================[ startup                            ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle Zeshy startup in a manner analogous to Zsh startup (e.g., ".zshenv").

# ....................{ GLOBALS                            }....................
document_global '
list ZESHY_STARTUP_ZESHY_COMMANDS

List of commands to be run on Zeshy startup, regardless of the state of the
current shell.
'
document_global '
list ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE

List of commands to be run on Zeshy startup when the current shell is
interactive. See is_shell_interactive() for details.
'
document_global '
list ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_LOGIN

List of commands to be run on Zeshy startup when the current shell is a login
shell. See is_shell_login() for details.
'

# ....................{ APPENDERS                          }....................
document_function '
void append_startup_zeshy_command(string command)

Append the passed command to the end of the definition of the startup_zeshy()
function. Zeshy calls such function and hence command on each execution, as
with ".zshenv" under Zsh.
'
function append_startup_zeshy_command() {
    die_unless_args 'expected one command'
#   ZESHY_STARTUP_ZESHY_COMMANDS+="say calling ${1}..."
    ZESHY_STARTUP_ZESHY_COMMANDS+="${1}"
}

document_function '
void append_startup_zeshy_command_if_shell_interactive(string command)

Append the passed command to the end of the definition of the
startup_zeshy_if_shell_interactive() function. Zeshy calls such function and
hence command on each execution under an interactive shell, as with ".zshrc"
under Zsh.
'
function append_startup_zeshy_command_if_shell_interactive() {
    die_unless_arg 'expected one command'
#   ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE+="say calling ${1}..."
    ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE+="${1}"
}

document_function '
void append_startup_zeshy_command_if_shell_login(string command)

Append the passed command to the end of the definition of the
startup_zeshy_if_shell_login() function. Zeshy calls such function and hence
command on each execution under a login shell, as with ".zprofile" under Zsh.
'
function append_startup_zeshy_command_if_shell_login() {
    die_unless_arg'expected one command'
#   ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_LOGIN+="say calling ${1}..."
    ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_LOGIN+="${1}"
}

# ....................{ PREPENDERS                         }....................
document_function '
void prepend_startup_zeshy_command(string command)

Prepend the passed command to the beginning of the definition of the
startup_zeshy() function. Consider calling append_startup_zeshy_command()
instead, unless convinced you know what you''re doing.
'
function prepend_startup_zeshy_command() {
    #FIXME: Hmm; why not just define prepend_list_with_string() before this?
    # Avoid calling prepend_list_with_string(), which has yet to be defined.
    die_unless_arg 'expected one command'
    ZESHY_STARTUP_ZESHY_COMMANDS=(
        "${1}" "${ZESHY_STARTUP_ZESHY_COMMANDS[@]}" )
}

document_function '
void prepend_startup_zeshy_command_if_shell_interactive(string command)

Prepend the passed command to the beginning of the definition of the
startup_zeshy_if_shell_interactive() function. Consider calling
append_startup_zeshy_command_if_shell_interactive() instead, unless convinced
you know what you''re doing.
'
function prepend_startup_zeshy_command_if_shell_interactive() {
    # Avoid calling prepend_list_with_string(), which has yet to be defined.
    die_unless_arg 'expected one command'
    ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE=(
        "${1}" "${ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE[@]}" )
}

document_function '
void prepend_startup_zeshy_command_if_shell_login(string command)

Prepend the passed command to the beginning of the definition of the
startup_zeshy_if_shell_login() function. Consider calling
append_startup_zeshy_command_if_shell_login() instead, unless convinced
you know what you''re doing.
'
function prepend_startup_zeshy_command_if_shell_login() {
    # Avoid calling prepend_list_with_string(), which has yet to be defined.
    die_unless_arg 'expected one command'
    ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_LOGIN=(
        "${1}" "${ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_LOGIN[@]}" )
}

# ....................{ MAKERS                             }....................
document_function '
void make_zeshy_functions_startup(void)

Dynamically synthesize the following hook-based functions:

* startup_zeshy(), running all hooks in global list
  ${ZESHY_STARTUP_ZESHY_COMMANDS}.
* startup_zeshy_if_shell_interactive(), running all hooks in global list
  ${ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE}.
* startup_zeshy_if_shell_login(), running all hooks in global list
  ${ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_LOGIN}.

Zeshy only calls this function after sourcing all Zeshy scripts applicable to
the current user when (re)compiling Zeshy''s digest file for such user.
'
function make_zeshy_functions_startup() {
    # Validate sanity.
    die_if_args

    # Make such functions.
    eval "function startup_zeshy() {
    $(join_list_on_newline ZESHY_STARTUP_ZESHY_COMMANDS)
    is_shell_interactive and startup_zeshy_if_shell_interactive
    is_shell_login       and startup_zeshy_if_shell_login
}"
    eval "function startup_zeshy_if_shell_interactive() {
    $(join_list_on_newline ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE)
}"
    eval "function startup_zeshy_if_shell_login() {
    $(join_list_on_newline ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_LOGIN)
}"
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to append_zeshy_startup_command(). Much more natural (...the
#most important "make_zeshy" part comes first) and in keeping with nomenclature
#elsewhere.
#list_set_global_export ZESHY_STARTUP_ZESHY_COMMANDS
#list_set_global_export ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE
#list_set_global_export ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_LOGIN

# void make_zeshy_functions_to_startup_zeshy(void)
#function make_zeshy_functions_to_startup_zeshy() {

#FUXME: Rename to ZESHY_COMMANDS_RUN_ON_STARTUP.
#ZESHY_COMMANDS_RUN_AFTER_STARTUP
#ZESHY_COMMANDS_RUN_AFTER_COMPILING
#ZESHY_RUN_COMMANDS_AFTER_STARTUP
#ZESHY_RUN_COMMANDS_AFTER_COMPILING
#ZESHY_RUN_ON_STARTUP
#ZESHY_RUN_ON_COMPILING
#ZESHY_COMMANDS_RUN_ON_STARTUP
#ZESHY_COMMANDS_RUN_ON_COMPILING

#   list_set_global_export ZESHY_STARTUP_ZESHY_COMMANDS
#   list_set_global_export ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE
    # Convert global lists of commands to be run on startup into newline-
    # delimited strings to be interpolated into the functions created below.
#   string startup_zeshy_commands startup_zeshy_commands_if_shell_interactive
#   startup_zeshy_commands="$(join_list_on_newline\
#       ZESHY_STARTUP_ZESHY_COMMANDS)"
#   startup_zeshy_commands_if_shell_interactive="$(join_list_on_newline\
#       ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE)"

#   prepend_list_with_string ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE "${1}"
#   ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE=(
#       "${1}" "${ZESHY_STARTUP_ZESHY_COMMANDS_IF_SHELL_INTERACTIVE[@]}"
#   )
#FUXME: Call from "src/compile". Yes... excellent. Obviously, this needs to
#happen *AFTER* sourcing all scripts but prior to creating the digest.
# void add_command_to_zeshy_shutdown(string command)
#
# Run the passed command on Zeshy shutdown in the current shell, triggered on
# receiving any of the following signals: ABRT, ALRM, HUP, INT, QUIT, or TERM.
#function add_command_to_zeshy_shutdown() {
#    die 'implement me'
#}

#function run_on_zeshy_startup() {
#function startup_zeshy_by_running() {
# void make_functions_for_zeshy_startup(void)
# void make_zeshy_startup(void)
