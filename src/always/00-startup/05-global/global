#!/usr/bin/env zsh
# ====================[ global                             ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define generally applicable global variables specific to no other component.

# ....................{ STARTUP                            }....................
run_hook_on_zeshy_startup_if_shell_interactive\
    startup_zeshy_globals_if_shell_interactive

document_function '
void startup_zeshy_globals_if_shell_interactive(void)

Define interactive shell-specific globals. This includes:

* ${LS_COLORS}, the ":"-delimited list of "ls"-specific color specifications.
  See get_list_command_colors().
* ${EDITOR}, the absolute path of the command-line editor preferred by the
  current user. See get_editor_path().
* ${PAGER}, the absolute path of the command-line "pager" preferred by the
  current user. See get_pager_path().
* ${VISUAL}, effectively synonymous with ${EDITOR}.
'
function startup_zeshy_globals_if_shell_interactive() {
    # Validate sanity.
    die_if_args
    die_unless_shell_interactive

    # Set such globals as beneficial side effects of calling such functions,
    # discarding function output.
    run_silently get_list_command_colors
    run_silently get_pager_command

    #FIXME: Replace with calls to a new function get_editor_path(), as above.
    # Absolute paths of the preferred command-line editor and pager.
    string_global\
        EDITOR="${EDITOR:-"$(get_pathable_path_first emacs vim nano ed)"}"
    string_global_export VISUAL="${VISUAL:-${EDITOR}}"
}

# --------------------( WASTELANDS                         )--------------------
# Many components define component-specific
# globals, this component defines globals specific
    # Call getter functions internally caching globals quietly. Since we just
    # want to cache such globals here, discard function output.
#   run_silently get_pager_command

    #FUXME: This now strikes me as overly heavyweight. Given the manner with
    #which we set ${EDITOR} and ${VISUAL} below, it's senseless to set
    #${PAGER} differently. That said, functions are nice. They guard against
    #silliness. But isn't that a bit overkill, here?

#FUXME: Not appropriate for this file. Perhaps create a new "01-global"
#directory with two files:
#
#* "constant", with the definitions above.
#* "global", wtih the definitions below.
