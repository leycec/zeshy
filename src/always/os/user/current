#!/usr/bin/env zsh
# ====================[ current                            ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle the current user.

# ....................{ EXCEPTIONS                         }....................
# void die_unless_current_user_superuser(
#   string username = "$(get_current_user)",
#   string error_message = "\"${username}\" not a superuser")
#
# Throw an exception unless the passed user (defaulting to the current user) is
# the superuser (i.e., root).
function die_unless_current_user_superuser() {
    die_unless_args_0_to_1 'expected optional username and error message'
    string username="${1:-$(get_current_user)}"
    is_current_user_superuser "${username}" or
        die "${2:-\"${username}\" not a superuser}"
}

# ....................{ TESTERS                            }....................
# boolean is_current_user_superuser(void)
#
# Return true if the current user is effectively the superuser (i.e., root).
function is_current_user_superuser() {
    # Test whether the current user's effective user ID is that of the superuser.
    die_if_args
    (( $(get_current_user_id_effective) == 0 ))
}

# ....................{ GETTERS                            }....................
# string get_current_user(void)
#
# Get the username of the current user.
function get_current_user() {
    die_if_args
    print_string "${USER}"
}

# string get_current_user_dir_home(void)
#
# Get the absolute path of the home directory of the current user.
function get_current_user_dir_home() {
    die_if_args
    print_string "${HOME}"
}

# ....................{ GETTERS ~ id                       }....................
# string get_current_user_id(void)
#
# Get the ID of the current user. See also get_current_user_id_effective().
function get_current_user_id() {
    die_if_args
    print_string "${UID}"
}

# string get_current_user_id_effective(void)
#
# Get the effective ID of the current user. Such ID can differ from the real ID
# of such user when subject to privelage escalation under "setuid".
function get_current_user_id_effective() {
    die_if_args
    print_string "${EUID}"
}

# --------------------( WASTELANDS                         )--------------------
