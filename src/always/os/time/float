#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'-/-'
Handle system time in float format.
-/-

# ....................{ GETTERS                            }....................
declare_function_with_stdin <<'/---'
float get_time(void)

Get the current time in high-resolution fractional seconds since the *Unix
epoch* (i.e., January 1st, 1970), where the definition of ``high-resolution''
depends on system-specific properties as follows:

[quote, ${EPOCHREALTIME}, `man zshmodules`]
The notional accuracy is to nanoseconds if the `clock_gettime` call is available
and to microseconds otherwise, but in practice the range of double precision
floating point and shell scheduling latencies may be significant effects.

Since most modern systems provide `clock_gettime`, the returned time is
typically accurate to the nanosecond. For example:

.get_time()
==========================================
[source]
------------------------------------------
>>> get_time
1369342884.3084030151
------------------------------------------
==========================================
/---
function get_time() {
    # Thank *YOU*, module "zsh/datetime".
    die_if_args
    return_string "${EPOCHREALTIME}"
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to simply get_time(), thus corresponding with get_path_mtime(),
#etc. nomenclature. This is the fundamental timestamp and deserves a name as
#such.
#   date +'%s'
