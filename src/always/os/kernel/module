#!/usr/bin/env zsh
# ====================[ module                             ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Kernel Module, handling *nix kernel modules.

# ....................{ ALIASES                            }....................
interactive_alias modi='print_kernel_module'
interactive_alias mods='print_kernel_modules'
interactive_alias modl='load_kernel_module'
interactive_alias modu='unload_kernel_module'

# ....................{ PRINTERS                           }....................
# string print_kernel_module(string module_name1, string module_name2, ...)
#
# Print a human-readable profile of the passed kernel modules for the currently
# installed kernel.
print_kernel_module() {
    die_unless_at_least_one_arg 'expected at least one module name'
    modinfo -- "${@}"
}

# string print_kernel_modules(string kernel_home = get_kernel_home())
#
# Print a human-readable synopsis of all currently loaded and loadable kernel
# modules for the passed kernel (defaulting to the currently installed kernel).
print_kernel_modules() {
    # Validate.
    die_unless_no_or_one_arg 'expected optional dirname'
    string kernel_home kernel_version
    kernel_home="${1:-$(get_kernel_home)}"
    kernel_version="$(get_kernel_version "${kernel_home}")"

    {
#       say_first_section 'printing currently loaded kernel modules...'
        say_first_section '[loaded kernel modules]'
        lsmod

        #FIXME: Not quite right. This prints builtin and non-builtin; we really only
        #want a print of non-builtin modules. Though there seems to exist no print of
        #the latter, file "modules.builtin" prints the former; hence, we could filter
        #the former from the print of returned modules.
        say_next_section '[loadable kernel modules]'
        list_path_recursively "/lib/modules/${kernel_version}/"**/*.ko
    } | run_paged
}

# ....................{ WRITERS                            }....................
# void load_kernel_module(string module_name1, string module_name2, ...)
#
# Load the passed kernel modules.
load_kernel_module() {
    die_unless_at_least_one_arg 'expected at least one module name'
    modprobe -- "${@}"
}

# void unload_kernel_module(string module_name1, string module_name2, ...)
#
# Unload the passed kernel modules.
unload_kernel_module() {
    die_unless_at_least_one_arg 'expected at least one module name'
    modprobe -r -- "${@}"
}

# --------------------( WASTELANDS                         )--------------------
# string print_loaded_kernel_modules(void)
#
# Print all currently loaded kernel modules.
#print_loaded_kernel_modules() {
#    die_if_args
#}
# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#
# Copyright 2007-2012 by Cecil Curry.
#
#   http://www.raiazome.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
