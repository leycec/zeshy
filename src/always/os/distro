#!/usr/bin/env zsh
# ====================[ distro                             ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy OS, handling Linux and BSD distributions.
#
# --------------------( SEE ALSO                           )--------------------
# http://linuxmafia.com/faq/Admin/release-files.html
#   Canonical list of *nix distro-specific "-release" and "_version" files.

# ....................{ TESTS                              }....................
# bool is_distro_arch(void)
#
# Return true if the current distribution is Arch Linux.
is_distro_arch() {
    is "$(get_distro_name)" == 'Arch' si
}

# bool is_distro_debian(void)
#
# Return true if the current distribution is Debian Linux.
is_distro_debian() {
    is "$(get_distro_name)" == 'Debian' si
}

# bool is_distro_gentoo(void)
#
# Return true if the current distribution is Gentoo Linux.
is_distro_gentoo() {
    is "$(get_distro_name)" == 'Gentoo' si
}

# bool is_distro_ubuntu(void)
#
# Return true if the current distribution is Ubuntu Linux.
is_distro_ubuntu() {
    is "$(get_distro_name)" == 'Ubuntu' si
}

# ....................{ GETTERS                            }....................
# string get_distro_name(void)
#
# Get the canonicalized name of the current distribution: e.g.,
#
#     >>> get_distro_name
#     Debian  # under Debian Linux installations
#     Gentoo  # under Gentoo Linux installations
get_distro_name() {
    die_if_args

    # If "lsb_release" is available, defer to its standardized output.
    if is_installed lsb_release; then
        lsb_release -si
        return_true
    fi

    # List of all files matching /etc/*-release, /etc/*_version, and
    # /etc/*-version excluding "/etc/lsb-release". While "lsb_release" and hence
    # the latter should be unavailable here, 'tis better comfy than core-dumped.
    list release_files
    release_files=( /etc/*{-release,-version,_version}~/etc/lsb-release(.) )

    # If at least one such file matches, take the prefix preceding the last
    # dash or hyphen in the basename of the first such filename to be the distro
    # name. Note that some distro names themselves contain dashes and hyphens.
    # Thus, match suffixes non-greedily.
    if is_list_nonempty release_files; then
        print "$(capitalize_string "$(get_path_basename "${release_files[1]%[_-]*}")")"
        return_true
    fi

    # Otherwise, return the current operating system name.
    get_os_name
}

# int get_distro_version(void)
#
# Get the version number of the current distribution: e.g.,
#
#     >>> get_distro_version
#     2.1
get_distro_version() {
    die_if_args

    # If "lsb_release" is available, defer to its standardized output.
    if is_installed lsb_release; then
        lsb_release -sr
        return_true
    fi

    # List of all files matching /etc/*-release, /etc/*_version, and
    # /etc/*-version excluding "/etc/lsb-release".
    list release_files
    release_files=( /etc/*{-release,-version,_version}~/etc/lsb-release(.) )

    #FIXME: Should probably grep the file for a pattern matching a version
    #specifier, but... *meh*
    # If at least one such file matches, return the last column in the contents
    # of the first such file.
    if is_list_nonempty release_files; then
        print ${$(< "${release_files[1]}")[(w)-1]}
        return_true
    fi

    # Otherwise, raise an exception.
    die '"lsb_release" not installed and no system-wide release or version file found'
}

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#
# Copyright 2007-2012 by Cecil Curry.
#
#   http://www.raiazome.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
