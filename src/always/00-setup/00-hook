#!/usr/bin/env zsh
# ====================[ hook                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Define Zeshy-specific hook functions.

# ....................{ RUNNERS                            }....................
# void run_on_zeshy_startup(string command)
#
# Run the passed command on Zeshy startup in the current shell.
function run_on_zeshy_startup() {
    die_unless_one_arg 'expected one command'
    global_list_set ZESHY_COMMANDS_RUN_ON_STARTUP
    ZESHY_COMMANDS_RUN_ON_STARTUP+="${1}"
}

# void run_on_zeshy_startup_if_shell_interactive(string command)
#
# Run the passed command on Zeshy startup in the current shell, if such shell is
# interactive.
function run_on_zeshy_startup_if_shell_interactive() {
    die_unless_one_arg 'expected one command'
    global_list_set ZESHY_COMMANDS_RUN_ON_STARTUP_IF_SHELL_INTERACTIVE
    ZESHY_COMMANDS_RUN_ON_STARTUP_IF_SHELL_INTERACTIVE+="${1}"
}

# void run_on_zeshy_shutdown(string command)
#
# Run the passed command on Zeshy shutdown in the current shell, triggered on
# receiving any of the following signals: ABRT, ALRM, HUP, INT, QUIT, or TERM.
function run_on_zeshy_shutdown() {
    die 'implement me'
}

# ....................{ MAKERS                             }....................
#FIXME: Call from "src/compile".
# void make_functions_for_zeshy_startup(void)
#
# Dynamically synthesize the following hook-based functions:
#
# * startup_zeshy(), running the hooks in global list
#   ${ZESHY_COMMANDS_RUN_ON_STARTUP}.
# * startup_zeshy_if_shell_interactive(), running the hooks in global list
#   ${ZESHY_COMMANDS_RUN_ON_STARTUP_IF_SHELL_INTERACTIVE}.
function make_functions_for_zeshy_startup() {
    # Validate sanity.
    die_if_args
    string startup_zeshy_commands startup_zeshy_commands_if_shell_interactive
    global_list_set\
        ZESHY_COMMANDS_RUN_ON_STARTUP\
        ZESHY_COMMANDS_RUN_ON_STARTUP_IF_SHELL_INTERACTIVE

    # Convert global lists of commands to be run on startup into newline-
    # delimited strings to be interpolated into the functions created below.
    startup_zeshy_commands="$(join_list_on_newline\
        ZESHY_COMMANDS_RUN_ON_STARTUP)"
    startup_zeshy_commands_if_shell_interactive="$(join_list_on_newline\
        ZESHY_COMMANDS_RUN_ON_STARTUP_IF_SHELL_INTERACTIVE)"

    # Create such functions.
    eval "function startup_zeshy() {
    ${startup_zeshy_commands}
    is_shell_interactive and startup_zeshy_if_shell_interactive
}"
    eval "function startup_zeshy_if_shell_interactive() {
    ${startup_zeshy_commands_if_shell_interactive}
}"
}

# --------------------( WASTELANDS                         )--------------------
