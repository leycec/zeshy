#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'-/-'
Handle *hexadecimal strings* (i.e., base 16 integers signifying values 10
through 15 as characters `A` through `F`).
-/-

# ....................{ EXCEPTIONS                         }....................
#FIXME: Define new type aliases resembling:
#
#    alias integer_decimal="integer_in_base 10"
#    alias integer_hexadecimal="integer_in_base 16"
#    alias integer_octal="integer_in_base 8"
#
#While redundant, the "integer_decimal" alias improves orthogonality: namely,
#there's a convert_hexadecimal_to_decimal() function and a hexadecimal "type"
#but no decimal "type". Fix that.
declare_function_with_stdin <<'/---'
void die_unless_hexadecimal(
    string value,
    string error_message = "\"${value}\" not a hexadecimal string")

Throw an exception with the passed message unless the passed string is an
integer in base 16 hexidecimal format. See is_hexadecimal() for further details.
/---
function die_unless_hexadecimal() {
    die_unless_args_1_to_2\
        'expected one string and optional error message'
    string value="${1}"
    is_hexadecimal "${value}" or
        die "${2:-\"${value}\" not a hexadecimal string}"
}

# ....................{ TESTERS                            }....................
declare_function_with_stdin <<'/---'
[status: boolean] is_hexadecimal(string value)

Return success if the passed string is an integer in base 16 hexadecimal format
and hence prefixed by either `0x` or `16#` (e.g., `16#DEADFACE`): e.g.,

.is_hexadecimal()
==========================================
[source]
------------------------------------------
>>> string on_ignorance=\
...    "Ignorance is king. Many would not profit by his abdication. Many enrich
...     themselves by means of his dark monarchy. They are his Court, and in his
...     name they defraud and govern, enrich themselves and perpetuate their
...     power. Even literacy they fear, for the written word is another channel
...     of communication that might cause their enemies to become united. Their
...     weapons are keen-honed, and they use them with skill. They will press
...     the battle upon the world when their interests are threatened, and the
...     violence which follows will last until the structure of society as it
...     now exists is leveled to rubble, and a new society emerges. I am sorry:
...     But that is how I see it."
>>> is_hexadecimal "0xFEEDBEEF" and get_string_line "${on_ignorance}" 1\
Ignorance is king. Many would not profit by his abdication. Many enrich
------------------------------------------
==========================================
/---
function is_hexadecimal() {
    die_unless_arg 'expected one string'
    is "${1}" == ('0x'|'16#')[[:xdigit:]]## si
}

# ....................{ CONVERTERS ~ decimal               }....................
declare_function_with_stdin <<'/---'
string convert_decimal_to_hexadecimal(string value)

Convert the passed base 10 string integer to hexadecimal format: e.g.,

.convert_decimal_to_hexadecimal()
==========================================
[source]
------------------------------------------
>>> convert_decimal_to_hexadecimal 3405691582
0xCAFEBABE
------------------------------------------
==========================================
/---
function convert_decimal_to_hexadecimal() {
    # Validate passed arguments.
    die_unless_arg 'expected one integer'
    string decimal="${1}"
    die_unless_integer "${decimal}"

    # Convert such decimal.
    return_string $(( [#16] decimal ))
}

declare_function_with_stdin <<'/---'
string convert_hexadecimal_to_decimal(string hexadecimal)

Convert the passed base 16 integer in hexadecimal format to base 10: e.g.,

.convert_hexadecimal_to_decimal()
==========================================
[source]
------------------------------------------
>>> convert_hexadecimal_to_decimal 0xBADF00D
195948557
------------------------------------------
==========================================
/---
function convert_hexadecimal_to_decimal() {
    # Validate passed arguments.
    die_unless_arg 'expected one hexadecimal string'
    string hexadecimal="${1}"
    die_unless_hexadecimal "${hexadecimal}"

    # Convert such hexadecimal.
    return_string $(( [#10] hexadecimal ))
}

# --------------------( WASTELANDS                         )--------------------
#   is_string_matches_glob "${1}" '(0x|[[:digit:]]##\#)[[:xdigit:]]##'
# Temporarily enable shell option "c_bases" to ensure
    # such output is prefixed with "0x".
#    enable_shell_option_locally c_bases
#    integer_in_base 16 hexadecimal="${decimal}"
#    print_string "${hexadecimal}"

    # Convert such hexadecimal. Unlike convert_decimal_to_hexadecimal(), builtin
    # print() does not require shell option "c_bases" to do so.
#   integer_in_base 10 decimal="${hexadecimal}"
#   print_string $(( [#10] ${hexadecimal} ))

#FUXME: Ambiguous, as integers may be in any base. Rename to
#convert_decimal_to_hexadecimal().
#FUXME: Rename to die_unless_hexadecimal(), adopting the same nomenclature as
#booleans as characters.
#string base 16 string hexadecimal to integer format:
