#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'-/-'
Handle *glob replacers* (i.e., functions replacing substrings matching globs).
-/-

# ....................{ REPLACERS                          }....................
#FIXME: It's unclear just how to extend this function to a new function
#supporting expansions depending on the passed glob: e.g., "${match[1]}".
#Does parameter expansion prefix "~" suffice or do we need a genuine "eval"
#statement? I suspect the latter, in which case such function should be
#named replace_string_matches_with_evaluation(), but investigate.

declare_function_with_stdin <<'/---'
<globbable> string replace_string_matches_glob_with_string(
    string text, string glob, string replacement)

Replace all substrings from the passed string matching the passed glob with the
passed replacement string: e.g.,

.replace_string_matches_glob_with_string()
==========================================
[source]
------------------------------------------
>>> string on_social_sins=\
...    "Seven social sins: politics without principles, wealth without work,
...     pleasure without conscience, knowledge without character, commerce
...     without morality, science without humanity, and worship without
...     sacrifice."
>>> replace_string_matches_glob_with_string "${on_social_sins}" w[^ ]t sans
Seven social sins: politics sans principles, wealth sans work,
pleasure sans conscience, knowledge sans character, commerce
sans morality, science sans humanity, and worship sans
sacrifice.
------------------------------------------
==========================================
/---
function replace_string_matches_glob_with_string() {
    die_unless_args_3 'expected one string, one glob, and one replacement'
    return_string "${1//${~2}/${3}}"
}

# --------------------( WASTELANDS                         )--------------------
