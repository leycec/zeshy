#!/usr/bin/env zsh
# ====================[ line                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle zsh extended glob expressions matching newline-delimited strings.

# ....................{ GETTERS                            }....................
#FIXME: Implement get_string_lines_from_match_until_end(). Should be quite
#simple, though I don't believe such function can defer to this one.

declare_function_with_stdin <<'________________<heredoc?>________________'
<globbable> string
    get_string_lines_after_match_inclusive_before_match_exclusive(
        string text, string start_glob, string end_glob)

Get all lines from the passed string:

* Following the first line matching the first passed glob, including such
  line. If no such line matches, throw an exception.
* Preceding the next line matching the second passed glob, excluding such
  line. If no such line matches, include all remaining lines, thus emulating
  get_string_lines_from_match_until_end().
________________<heredoc?>________________
function get_string_lines_after_match_inclusive_before_match_exclusive() {
    # Validate passed arguments.
    die_unless_args_3\
        'expected one string, one start glob, and one end glob'
    string text="${1}" start_glob="${2}" end_glob="${3}"

    # Split such string on newline delimiters into a list of lines.
    list lines; set_list_to_string_lines lines "${text}"

    # Remove non-matching lines.
    reduce_list_to_elements_after_match_inclusive_before_match_exclusive\
        lines "${start_glob}" "${end_glob}"

    # Join all remaining lines into a newline-delimited string.
    join_list_on_newline lines
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to
#get_string_lines_after_match_inclusive_before_match_exclusive().
