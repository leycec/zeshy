#!/usr/bin/env zsh
# ====================[ line                               ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle zsh extended glob expressions matching newline-delimited strings.

# ....................{ GETTERS                            }....................
#FIXME: Implement get_string_lines_from_match_until_end(). Should be quite
#simple, though I don't believe such function can defer to this one.
document_function '
string get_string_lines_from_match_until_match(
  string text, string start_glob, string end_glob)

Get all lines from the passed string:

* Following the first line matching the first passed glob, including such
  line. If no such line matches, throw an exception.
* Preceding the next line matching the second passed glob, excluding such
  line. If no such line matches, include all remaining lines, thus emulating
  get_string_lines_from_match_until_end().
'
function get_string_lines_from_match_until_match() {
    # Validate passed arguments, treating piped input as such string.
    prepend_args_with_standard_input_if_piped
    die_unless_args_3\
        'expected one string, one starting glob, and one ending glob'
    string text="${1}"
    shift_arg

    # Split such string on newline delimiters into a list of lines.
    list lines
    set_list_to_string_lines lines "${text}"

    # Remove non-matching lines.
    remove_list_nonmatches_before_and_after_inclusive lines "${@}"

    # Join remaining lines into a newline-delimited string.
    print_string_newlined "${lines}"
}

# --------------------( WASTELANDS                         )--------------------
