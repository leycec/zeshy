#!/usr/bin/env zsh
# ====================[ boolean                            ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Handle boolean variables and values.

# ....................{ EXCEPTIONS                         }....................
document_function '
void die_unless_boolean(
  string variable_name,
  string error_message = "\"${variable_name}\" not a boolean")

Throw an exception with the passed message unless the passed variable is a
boolean. See is_boolean() for further details.
'
function die_unless_boolean() {
    die_unless_args_1_to_2\
        'expected one variable name and optional error message'
    string variable_name__dub="${1}"
    is_boolean "${variable_name__dub}" or
        die "${2:-\"${variable_name__dub}\" not a boolean}"
}

# ....................{ TESTERS                            }....................
#FIXME: Document that fact that all string variables satisfy such requirements.
#I believe we've documented this adequately (perhaps even brilliantly!) under
#"00-setup/00-alias", so pilfer that for helpful discussion.
document_function '
boolean is_boolean(string variable_name)

Return true if the passed variable is a boolean.
'
function is_boolean() {
    # Since booleans are currently indistinguishable from strings under zsh,
    # defer to is_string().
    die_unless_arg 'expected one variable name'
    is_variable_string "${@}"
}

# ....................{ TESTERS ~ value                    }....................
document_function '
boolean is_boolean_true(string value)

Return true if the passed value is true (i.e., is a non-empty string): e.g.,

    >>> is_boolean_true ${ZESHY_BOOLEAN_FALSE} or print_string "conium"
    conium
'
function is_boolean_true() {
    die_unless_arg 'expected one string'
    is_string_nonempty "${1}"
}

document_function '
boolean is_boolean_false(string value)

Return true if the passed value is false (i.e., is the empty string): e.g.,

    >>> is_boolean_false ${ZESHY_BOOLEAN_TRUE} or print_string "black henbane"
    black henbane
'
function is_boolean_false() {
    die_unless_arg 'expected one string'
    is_string_empty "${1}"
}

# ....................{ SETTERS                            }....................
document_function '
void enable_boolean(string boolean_name)

Enable the passed boolean, setting such boolean''s value to true.
'
function enable_boolean() {
    # Validate passed arguments.
    die_unless_arg 'expected one boolean name'
    string boolean_name__eb="${1}"
    die_unless_boolean "${boolean_name__eb}"

    # Set such boolean.
    set_string "${boolean_name__eb}" "${ZESHY_BOOLEAN_TRUE}"
}

document_function '
void disable_boolean(string boolean_name)

Disable the passed boolean, setting such boolean''s value to false.
'
function disable_boolean() {
    # Validate passed arguments.
    die_unless_arg 'expected one boolean name'
    string boolean_name__db="${1}"
    die_unless_boolean "${boolean_name__db}"

    # Set such boolean.
    set_string "${boolean_name__db}" "${ZESHY_BOOLEAN_FALSE}"
}

# --------------------( WASTELANDS                         )--------------------
#FUXME: Bad. Accept string values rather than variable names, as is the
#standard for scalar types.
#FUXME: Rename to is_string_boolean().
#FUXME: Rename to die_unless_string_boolean(). (There might be a real "boolean"
#type, someday.)
