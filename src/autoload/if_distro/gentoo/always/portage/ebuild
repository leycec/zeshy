#!/usr/bin/env zsh
# ====================[ ebuild                             ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy ebuild, handling Gentoo ebuild management.

# ....................{ PRINTERS                           }....................
# char *print_ebuilds_installing_path(char *pathname)
#
# Print all ebuilds installing into the passed path. If this path is a file,
# print only the one ebuild installing such file; otherwise, print all ebuilds
# installing at least one file to such directory.
print_ebuilds_installing_path() {
    # Localize and validate passed arguments.
    die_unless_one_arg 'expected one pathname'
    string pathname="${1}"
    die_unless_found "${pathname}"

    # Prefer "equery" to "qfile" for finding such ebuilds. "equery" waits to
    # print a helpful message until after finding. Since such finding is slow,
    # print a helpful message *BEFORE* finding.
    interactively utter "searching ebuild database for \"${pathname}\"..."
    if is_installed equery
    then equery belongs "${pathname}"
    elif is_installed qfile
    then qfile "${pathname}"
    else die 'neither "equery" or "qfile" installed'
    fi
}

# char *print_ebuild_dependencies(char *ebuild_name)
#
# Print all ebuilds on which the passed ebuild directly depends.
print_ebuild_dependencies() {
    # Localize passed arguments.
    die_unless_one_arg 'expected one ebuild name'
    string ebuild_name="${1}"

    #FIXME: Any other utilities capable of displaying such data? Google us up.
    if is_installed equery
    then equery depgraph "${ebuild_name}"
    else die '"equery" not installed'
    fi
}

# char *print_ebuild_use_flags(char *ebuild_name)
#
# Print all USE flags used by the passed ebuild.
print_ebuild_use_flags() {
    # Localize passed arguments.
    die_unless_one_arg 'expected one ebuild name'
    string ebuild_name="${1}"

    #FIXME: Any other utilities capable of displaying such data? Google us up.
    #Ah, yes. We could, of course, simply grep
    #"/usr/portage/profiles/use.local.desc" for the program name. That gets us
    #USE flag descriptions only for main tree ebuilds, however. But... *shrug*
    if is_installed equery
    then equery uses "${ebuild_name}"
    else die '"equery" not installed'
    fi
}

# ....................{ WASTELANDS                         }....................

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
