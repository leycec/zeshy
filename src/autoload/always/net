#!/usr/bin/env zsh
# ====================[ net                                ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Net, implementing network-handling functionality.

# ....................{ ALIASES                            }....................
interactive_alias wgetpaste='wgetpaste --verbose'

# ....................{ GETTERS                            }....................
# char *get_net_command(void)
#
# Get the absolute path of the command managing network interfaces.
get_net_command() {
    # While "/sbin" is rarely on the ${PATH} for non-wheel users, numerous
    # commands in this path remain executable by non-wheel users: namely, "ip"
    # and "ifconfig". Such commands are accessible only as absolute filenames.
    # "ip" supercedes "ifconfig", where installed. "/sbin" supercedes
    # "/usr/sbin", by the Filesystem Hierarchy Standard (FHS).
    get_first_command\
        '/sbin/ip'       '/usr/sbin/ip'\
        '/sbin/ifconfig' '/usr/sbin/ifconfig'
}

#FIXME: Raise an exception if no IP address is bound to this device.
# char *get_ip_address(char *device_name = 'eth0')
#
# Get the IP address bound to the passed network device (defaulting to "eth0").
get_ip_address() {
    die_unless_at_most_one_arguments 'expected at most one optional device name'
    string device_name="${1:-eth0}" net_command="$(get_net_command)"

    if "${net_command}" == */ip
    then print ${"$(LC_ALL=C "${net_command}" addr show dev "${device_name}")"[(f)3][(w)2]%/*}
    else print ${"$(LC_ALL=C "${net_command}" "${device_name}")"[(f)2][(w)2]#addr:}
    fi
}

# ....................{ WRITERS ~ local                    }....................
# void unbind_ip_address(char *ip_address, char *device_name = 'eth0')
#
# Unbind the passed IP address from the passed network device (defaulting to
# "eth0"): e.g.,
#
#     >>> unbind_ip_address 10.0.0.2 eth0
unbind_ip_address() {
    die_unless_one_or_two_arguments\
        'expected one IP address and optional device name'
    string ip_address="${1}" device_name="${2:-eth0}"

    #FIXME: Add support for "ifconfig", if "ip" not runnable. Also, ensure that
    #"${2}" refers to a real network device.
    utter "unbinding IP address ${ip_address} from ${device_name}..."
    die_unless_installed ip
    ip addr del "${ip_address}" dev "${device_name}"
}

# ....................{ WRITERS ~ remote                   }....................
# void pastebin(char *filename)
#
# Upload the contents of some file as a pastebin post. This file will be posted
# as a plain textfile, and is thus best used for logs.
pastebin() {
    die_unless_one_argument 'expected exactly one filename'
    string pastebin_file="${1}"
    die_unless_file "${pastebin_file}"
    die_unless_installed wgetpaste

    utter "pasting ${pastebin_file}..."
    cat "${pastebin_file}" | wgetpaste --raw
}

#FIXME: Obsolete.
#   die_unless_device "/dev/${device_name}"

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
