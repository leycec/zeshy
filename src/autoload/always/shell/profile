#!/usr/bin/env zsh
# ====================[ profile                            ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Profile.

# ....................{ ALIASES                            }....................
interactive_alias umask='umask -S'

# ....................{ MAIN                               }....................
# void set_profile_defaults(void)
#
# Establish default profile settings.
set_profile_defaults() {
    set_profile_defaults_properties
    set_profile_defaults_system
    set_profile_defaults_path
    set_profile_defaults_globals
}

# ....................{ PROPERTIES                         }....................
set_profile_defaults_properties() {
    # While 077 is more secure, 022 is more realistic.
    umask 022
}

# ....................{ IMPORTS                            }....................
set_profile_defaults_system() {
    # Import all shell scripts under "/etc/profile.d/", if that directory exists.
    # Unlike "/etc/env.d/" shell scripts, which perform simple variable assignments,
    # these scripts perform more complex (and therefore time- and space-consumptive)
    # functionality. Fortunately, however, there rarely tend to be many of them.
    if is_dir '/etc/profile.d'; then
    #   string shell_options=${-}
        for profile_script ('/etc/profile.d'/*.sh) {
            source_safely "${profile_script}"
        }
    #   set -${shell_options}
    #   unset sh
    fi

    # If "/etc/profile.env" exists, import it. Several popular Linux distributions
    # programmatically aggregate this file as follows:
    #
    # * Under Gentoo, "env-update" from the files in "/etc/env.d/".
    # * Under Exherbo, "eclectic env update" from the files in "/etc/env.d/".
    is_file '/etc/profile.env' and source '/etc/profile.env'
}

# ....................{ BIRTH ~ path                       }....................
# void set_profile_defaults_path(void)
#
# Set the ${PATH} for the current user.
set_profile_defaults_path() {
    die_unless_no_arguments

    # Store the prior ${PATH} (if any) for subsequent interpolation.
    string PATH_old
    if is_set_nonempty 'ROOTPATH' and is_superuser
    then PATH_old="${ROOTPATH}"
    else PATH_old="${PATH}"
    fi

    # Reset ${PATH} and conditionally append user-agnostic paths.
    set_profile_defaults_path_append\
        '/usr/lib/colorgcc/bin'\
        '/usr/local/bin'\
        '/usr/bin'\
        '/bin'

    # If root, conditionally append root-specific paths.
    if is_superuser; then
        set_profile_defaults_path_append\
            '/usr/local/sbin'\
            '/usr/sbin'\
            '/sbin'
    fi

    # Append the prior $PATH.
    PATH+=":${PATH_old}"

    # Append the user-specific "~/bin/".
    set_profile_defaults_path_append "${HOME}/bin"

    # Append Zeshy's "bin/".
    string zeshy_bin_dir="${ZESHY_HOME}/bin"
    set_profile_defaults_path_append "${zeshy_bin_dir}"

    # Append each command in Zeshy's "bin/command/" installed on this machine,
    # matching all subdirectories of that directory via the "(/)" modifier.
    string zeshy_bin_command_name
    for zeshy_bin_command_dir ( "${zeshy_bin_dir}/command"/*(/) ) {
        zeshy_bin_command_name="$(get_basename "${zeshy_bin_command_dir}")"
        is_installed "${zeshy_bin_command_name}" and
            set_profile_defaults_path_append "${zeshy_bin_command_dir}"
    }

    # Export!
#   export PATH
}

# void set_profile_defaults_path_append(char *dirname1, char *dirname2, ...)
#
# For each passed directory name, append such name onto ${PATH} if not already
# and for which the corresponding directory exists and is readable.
set_profile_defaults_path_append() {
    die_unless_arguments 'expected at least one dirname'

    for dirname ("${@}") {
        if is_dir "${dirname}" and\
           is  -r "${dirname}" and not "${PATH}" =~ "(^|:)${dirname}($|:)" si; then
            path+=( "${dirname}" )
        fi
    }
}

# ....................{ GLOBALS                            }....................
set_profile_defaults_globals() {
    # Read X.Org application defaults from this path.
    global_string XAPPLRESDIR="${HOME}/.X"
    make_dir_if_not_found "${XAPPLRESDIR}"

    # Enable Unicode support, if not already enabled.
    global_string LANG="${LANG:-en_US.utf8}"
    global_string LC_ALL="${LC_ALL:-en_US.utf8}"

    # Enable a default command-line editor and pager, if not already enabled.
    global_string EDITOR="${EDITOR:-"$(which_commands emacs vim nano ed)"}"
    global_string PAGER="${PAGER:-"$(which_commands less more)"}"

    # Enable an in-memory cache of ZSH history; persist this history to some file.
    global_integer HISTSIZE=1024  # maintain this number of lines of history
    global_integer SAVEHIST=1024  # ..retain this number of lines of history between logins
    global_string HISTFILE="${ZESHY_DOTDIR}/history"
}

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
