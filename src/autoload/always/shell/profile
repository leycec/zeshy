#!/usr/bin/env zsh
# ====================[ profile                            ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Profile, establishing sane defaults on shell login.

# ....................{ MAIN                               }....................
# void set_profile_defaults(void)
#
# Establish default profile settings.
set_profile_defaults() {
    set_profile_defaults_properties
    set_profile_defaults_system
    set_profile_defaults_path
}

# ....................{ PROPERTIES                         }....................
#FIXME: Replace calls to "umask" with a new set_user_mask() function defaulting
#to calling "umask -S". It just makes sense. :)
set_profile_defaults_properties() {
    # While 077 is more secure, 022 is more realistic.
    if is_superuser
    then umask -S u=rwx,g=rx,o=rx
    else umask -S u=rwx,g=,o=
    fi
}

# ....................{ SYSTEM                             }....................
set_profile_defaults_system() {
    #FIXME: Hmm; shouldn't we execute all executable scripts under such
    #directory rather than merely Bourne shell scripts? Alas.

    # Import all shell scripts under "/etc/profile.d/", if that directory exists.
    # Unlike "/etc/env.d/" shell scripts, which perform simple variable assignments,
    # these scripts perform more complex (and therefore time- and space-consumptive)
    # functionality. Fortunately, however, there rarely tend to be many of them.
    if is_dir '/etc/profile.d'; then
    #   string shell_options=${-}
        for profile_script ('/etc/profile.d'/*.sh) {
            source_safely "${profile_script}"
        }
    #   set -${shell_options}
    #   unset sh
    fi

    # If "/etc/profile.env" exists, import it. Several popular Linux distributions
    # programmatically aggregate this file as follows:
    #
    # * Under Gentoo, "env-update" from the files in "/etc/env.d/".
    # * Under Exherbo, "eclectic env update" from the files in "/etc/env.d/".
    is_file '/etc/profile.env' and source '/etc/profile.env'
}

# ....................{ PATH                               }....................
# void set_profile_defaults_path(void)
#
# Set the ${PATH} for the current user.
set_profile_defaults_path() {
    die_unless_no_args

    # Store the prior ${PATH} (if any) for subsequent interpolation.
    string PATH_old
    if is_superuser and is_set_nonempty 'ROOTPATH'
    then PATH_old="${ROOTPATH}"
    else PATH_old="${PATH}"
    fi

    # Reset ${PATH} and conditionally append user-agnostic paths.
    set_profile_defaults_path_append\
        '/usr/lib/colorgcc/bin'\
        '/usr/local/bin'\
        '/usr/bin'\
        '/bin'

    # If the superuser, conditionally append root-specific paths.
    is_superuser and set_profile_defaults_path_append\
        '/usr/local/sbin'\
        '/usr/sbin'\
        '/sbin'\
        '/etc/init.d'

    # Append the prior $PATH.
    PATH+=":${PATH_old}"

    # Append the user-specific "~/bin/".
    set_profile_defaults_path_append "${HOME}/bin"

    # Append Zeshy's "bin/".
    string zeshy_bin_dir="${ZESHY_HOME}/bin"
    set_profile_defaults_path_append "${zeshy_bin_dir}"

    # Append each command in Zeshy's "bin/command/" installed on this machine,
    # matching all subdirectories of that directory via the "(/)" modifier.
    string zeshy_bin_command_name
    for zeshy_bin_command_dir ("${zeshy_bin_dir}/command"/*(/)) {
        zeshy_bin_command_name="$(get_basename "${zeshy_bin_command_dir}")"
        is_installed "${zeshy_bin_command_name}" and
            set_profile_defaults_path_append "${zeshy_bin_command_dir}"
    }
}

# void set_profile_defaults_path_append(char *dirname1, char *dirname2, ...)
#
# For each passed directory name, append such name onto ${PATH} if not already
# and for which the corresponding directory exists and is readable.
set_profile_defaults_path_append() {
    die_unless_args 'expected at least one dirname'

    for dirname ("${@}") {
        is_dir "${dirname}" and is_readable "${dirname}" and
        is not "${PATH}" =~ "(^|:)${dirname}($|:)" si and
            path+=( "${dirname}" )
    }
}

#FIXME: Obsolete.
    # Export!
#   export PATH

# ....................{ GLOBALS                            }....................
#set_profile_defaults_globals() {
#    # Maximum number of lines of Zsh command-line history to persist.
#    global_integer HISTSIZE="${HISTSIZE:-1024}"
#
#    # Maximum number of lines of Zsh command-line history to retain between logins.
#    global_integer SAVEHIST="${SAVEHIST:-1024}"
#
#    # Absolute path of the file persisting Zsh command-line history.
#    global_string  HISTFILE="${HISTFILE:-${ZESHY_DOTDIR}/history}"
#}

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
