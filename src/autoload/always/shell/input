#!/usr/bin/env zsh
# ====================[ input                              ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Input, handling interactive user input.

# ....................{ BOOLEANS                           }....................
# char *ask_bool(char *question)
#
# Ask the user an interactive yes or no question suffixed by the passed choices,
# returning false unless the user responds with exactly the passed true answer.
ask_bool() {
    die_unless_one_argument 'expected exactly one question'
    mutter "${1} [yn] "
    string  answer
    read -q answer
} 

# char *ask_bool_harder(char *question)
#
# Ask the user an interactive yes or no question suffixed by "[YES/no]",
# returning false *UNLESS* the user responds with exactly "YES". This
# "stronger" alternative to the ask_bool() function is intended for questions
# whose affirmation carries potentially harmful consequences (e.g., data loss).
ask_bool_harder() {
    die_unless_one_argument 'expected exactly one question'
    mutter "${1} [YES/no] "
    string answer
    read   answer
    is "${answer}" == 'YES' si
} 

#FIXME: Obsolete.
# char *ask_bool(char *question, char *choices = 'yn', char *true_answer = 'y')
#
# Ask the user an interactive yes or no question suffixed by the passed choices,
# returning false unless the user responds with exactly the passed true answer.
#ask_bool() {
#    die_unless_at_least_one_argument 'expected exactly one question'
#
#    string question="${1}"
#    string choices="${2:-yn}"
#    string true_answer="${3:-y}"
#
#    # Sow the question and harvest the response.
#    mutter "${question} [${choices}] "
#    string answer
#
#    # If the caller requests the default choices, read exactly one 
#    read   answer
#    is "${answer}" == "${true_answer}" si
#} 

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
