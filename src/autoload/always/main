#!/usr/bin/env zsh
# ====================[ core                               ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Core, implementing core functionality not readily definable in another
# Zeshy component.

# ....................{ GETTERS                            }....................
# float get_zsh_version(void)
#
# Get the current version of Zsh as a comparable floating point number.
get_zsh_version() {
    die_unless_no_arguments
    print "${ZSH_VERSION}"
} 

# float get_zeshy_version(void)
#
# Get the current version of Zeshy as a comparable floating point number.
get_zeshy_version() {
    die_unless_no_arguments
    print 0.1
}

# ....................{ SETUP                              }....................
setup_zeshy() {
    # Conditionally setup non-interactive commands, if installed.
    is_installed X and setup_X

    is_interactive and
        setup_zeshy_if_interactive or
        setup_zeshy_if_non_interactive
}

# If this shell is attached to a terminal device, set terminal-specific options.
setup_zeshy_if_interactive() {
#       utter 'setting mimetype aliases...'
    setup_mimetypes
#       utter 'setting terminal settings...'
#       sleep 3
    setup_terminal
#       utter 'setting key bindings...'
    setup_theme_key_bindings
#       utter 'setting styles...'
    setup_theme_styles
#       utter 'setting prompt...'
    setup_theme_prompt

    # Conditionally setup interactive-only commands, if installed.
    is_installed keychain and setup_keychain
}

setup_zeshy_if_non_interactive() {
#   print "process command name: $(get_process_command_name)"
}

#FIXME: Obsolete.
    # Set the default script name prior to all other logic, as any logic
    # raising an error requires this name for logging that error. Only do this
    # if the current process is not an interactive Zsh shell as, in that case,
    # the get_script_name() function dynamically inspects the script name from
    # the function call stack.
    # Strip the filetype from this script's basename, if present.
#   global_string ZESHY_SCRIPT_NAME="${$(get_process_command_name)%%.*}"

    # Default the script name to "zeshy", if "zsh".
#   is "${ZESHY_SCRIPT_NAME}" == zsh si and ZESHY_SCRIPT_NAME=zeshy

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
