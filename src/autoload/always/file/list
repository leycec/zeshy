#!/usr/bin/env zsh
# ====================[ list                               ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy List.

# ....................{ ALIASES                            }....................
interactive_alias l='print_path_concisely'
interactive_alias ls='print_path_concisely'
interactive_alias ll='print_path_verbosely'
interactive_alias lr='print_path_recursively'

# ....................{ LISTERS                            }....................
# char *print_path(char *ls_arg1, char *ls_arg2, ...)
#
# List the passed paths (defaulting to the current directory) with the passed
# "ls" options.
print_path() {
    # Call is_interactive() rather than is_interactive_directly(). The embedded
    # conditional below implicitly implements the latter, already.
    if is_interactive; then
        # "ls" command to be run.
        list ls; ls=( page_safely command ls "${ZESHY_LS_OPTIONS[@]}" )

        #FIXME: The conditional is pretty much broken. We really need to fix
        #Zeshy Digest so as to accept function aliases ala "print_path ls()".
        #Note that "content/grep" contains a similarly broken conditional.

        # If the topmost function on the function stack is "ls"-specific,
        # the current user called this function directly from the command-line.
        if (( ${#funcstack} == 1 )) or is "${funcstack[-2]}" == print_path* si
        then "${ls[@]}" "${ZESHY_LS_OPTIONS_IF_INTERACTIVE[@]}" "${@}"
        else "${ls[@]}" "${ZESHY_LS_OPTIONS[@]}" "${@}"
        fi
    # If running non-interactively, pass *NO* Zeshy-specific options to "grep".
    # Doing so breaks non-interactive shell scripts and functions expecting
    # default "grep" behavior (e.g., basic patterns).
    else command ls "${@}"
    fi
}

# void print_path_concisely(char *ls_arg1, char *ls_arg2, ...)
#
# List the passed paths (defaulting to the current directory) with concise
# output and the passed "ls" options.
print_path_concisely() {
    print_path "${ZESHY_LS_OPTIONS_IF_CONCISE[@]}" "${@}"
#   print_path --format=across "${@}"
}

# void print_path_verbosely(char *ls_arg1, char *ls_arg2, ...)
#
# List the passed paths (defaulting to the current directory) with verbose
# output and the passed "ls" options.
print_path_verbosely() {
    print_path "${ZESHY_LS_OPTIONS_IF_VERBOSE[@]}" "${@}"
}

# void print_path_recursively(char *ls_arg1, char *ls_arg2, ...)
#
# List the passed paths (defaulting to the current directory) recursively with
# verbose output and the passed "ls" options.
print_path_recursively() {
    print_path_verbosely --recursive "${@}"
}

#FIXME: Obsolete.
#   for ((i = 1; i <= ${#funcstack}; i++)) { print "${i}: ${funcstack[${i}]}" }
#       utter "running \"${ls_command[@]} ${ZESHY_LS_OPTIONS_IF_INTERACTIVE[@]} ${@}\"..."
#   if is_interactive_directly
#   then "${ls_command[@]}" "${ZESHY_LS_OPTIONS_IF_INTERACTIVE[@]}"     "${@}"
#   else "${ls_command[@]}" "${ZESHY_LS_OPTIONS_IF_NON_INTERACTIVE[@]}" "${@}"
#   fi

#       utter "running \"${ls_command[@]} ${ZESHY_LS_OPTIONS_IF_INTERACTIVE[@]} ${@}\"..."
#       utter "options: ${ZESHY_LS_OPTIONS_IF_INTERACTIVE[@]}"#interactive_alias l='list_path'
#interactive_alias ls='list_path'
#interactive_alias ls='list_path_recursively'
#'ls --all --color=always --group-directories-first --human-readable --indicator-style=classify --quoting-style=shell --sort=version --time-style=long-iso'
#lr()  { ls --recursive               $* | less --no-init }
#ll()  { ls --format=long             $* | less --no-init }
#llr() { ls --format=long --recursive $* | less --no-init }

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
