#!/usr/bin/env zsh
# ====================[ cpu                                ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy CPU, handling Central Processing Unit (CPU) profiling and reporting.

# ....................{ GETTERS                            }....................
# int get_logical_processor_count(void)
#
# Get the number of logical processors available in the current machine. If
# this machine supports CPU hyperthreading, this is the number of physical
# threads of physical cores of physical CPUs; else, the number of physical
# cores of physical CPUs.
get_logical_processor_count() {
    die_if_args
    die_unless_file '/proc/cpuinfo'
    cat '/proc/cpuinfo' | get_line_count_matching_pcre '^processor\s*:'
}

# int get_physical_processor_count(void)
#
# Get the number of physical processors available in the current machine. If
# this machine supports CPU hyperthreading, this is the return value of
# get_logical_processor_count() less the number of logical threads; else,
# get_logical_processor_count().
get_physical_processor_count() {
    #FIXME: Also implementable on "/proc/cpuinfo" itself, but much more
    #long-winded and requires Zeshyfication:
    #
    #   cat /proc/cpuinfo | egrep "core id|physical id" | tr -d "\n" | sed s/physical/\\nphysical/g | grep -v ^$ | sort | uniq | wc -l
    # 
    #To quote: "This command squishes the /proc/cpuinfo physical id and core id for
    #each logical CPU on to the same line, and then sorts them and runs uniq to
    #remove the extra hyperthreading logical CPU's. The final result is the number
    #of CPU cores on your Linux system." Courtesy:
    #
    #   https://www.ibm.com/developerworks/mydeveloperworks/blogs/brian/entry/linux_show_the_number_of_cpu_cores_on_your_system17?lang=en
    #
    #Quite clever, actually.
    die_if_args
    die_unless_installed lscpu

    # The number of uncommented lines "lscpu -p" outputs very concisely yields
    # the number of physical processors.
    lscpu -p | get_line_count_matching_pcre '^\d+,'
}

# ....................{ PRINTERS                           }....................
# void print_processors(void)
#
# Print a human-readable profile of all processors (e.g., threads on cores on
# CPUs on sockets on nodes) the current machine exposes.
print_processors() {
    die_if_args
    
    # If "lscpu" is installed, prefer that to printing file contents.
    if is_installed  lscpu
    then run_paged lscpu
    # If "/proc/cpuinfo" is a file, print its contents.
    elif is_file '/proc/cpuinfo'
    then page_path_safely '/proc/cpuinfo'
    # Otherwise, raise an exception.
    else die '"lscpu" not installed and "/proc/cpuinfo" not found'
    fi
}

#FIXME: Obsolete.
#Quite clever, actually. Though, it's probably far easier to simply parse the
#machine-readable output of "lscpu -p"; theoretically, the number of lines
#output by "lscpu -p" *NOT* prefixed with "#" are the number of physical
#processors. (Double-check, of course.)

# int get_cpu_physical_core_count(void)
#
# Get the number of physical CPU cores available in the current machine. This
# excludes available logical CPU cores (e.g., hyperthreaded cores).
#get_cpu_physical_core_count() {
#    die_if_args
#    return_integer ${"${"$(free -bt)"[(f)2]}"[(w)2]}
#}

# int get_cpu_logical_core_count(void)
#
# Get the number of logical CPU cores available in the current machine. This
# includes physical cores and logical cores the hardware makes available (e.g.,
# hyperthreaded cores).
#get_cpu_logical_core_count() {
#    die_if_args
#    cat /proc/cpuinfo | grep processor | wc -l
#}
 
# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
