#!/usr/bin/env zsh
# ====================[ screen                             ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy screen.

# ....................{ ALIASES                            }....................
interactive_alias sr='screen_reattach'
interactive_alias screen='screen -U'
interactive_alias screen_reattach='screen -d -a -A -r'

# ....................{ PRINTERS                           }....................
# char *print_screen_sessions(void)
#
# List all screen sessions attached to the current user.
print_screen_sessions() {
    die_if_args
    screen -list
}

# ....................{ SCREEN                             }....................
# void screenify(char *command, char *username = $(whoami))
#
# Screenify the passed command. Specifically:
#
# * If no screen session named according to the basename of the passed command
#   has been attached to the passed user, then attach a new screen session
#   having this name to this user running the passed command.
# * Otherwise, reattach this existing screen session to this user.
#
# The username defaults to the current user, if not passed.
screenify() {
    die_one_or_two_args 'expected one command and optional username'

    # Parse passed parameters.
    string\
        screen_command="${1}" screen_username="${2:-$(whoami)}" screen_session
    screen_session="$(basename "${screen_command}")"

    #FIXME: Call get_pcre_line_match_count() here rather than "grep".
    # Locate "screen" and check whether or not a session already exists.
#   string screen=$(which_command screen)
    integer screen_session_count
    screen_session_count="$(run_as "${screen_username}" "screen -list | grep --count '\.${screen_session}[[:space:]]'")"

    # screen's argument passing engine is a wee faulty. Order is important in
    # the argument list below, therefore.
    if (( screen_session_count == 0 )); then
        utter "attaching ${screen_session}..."
        run_as "${screen_username}"\
          screen -m -fa -U -S "${screen_session}" "${screen_command}" or
            die "\"${screen_session}\" screen session could not be started"
    elif (( screen_session_count == 1 )); then
        utter "reattaching ${screen_session}..."
        run_as "${screen_username}" screen -d -a -A -r "${screen_session}"
    else
        die "${screen_session_count} \"${screen_session}\" screen sessions already started"
    fi
}

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#
# Copyright 2007-2012 by Cecil Curry.
#
#   http://www.raiazome.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
