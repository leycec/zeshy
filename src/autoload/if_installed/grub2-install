#!/usr/bin/env zsh
# ====================[ grub2-install                      ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy GRUB2.

# ....................{ INSTALLERS                         }....................
# void install_grub2(char *device_filename = '/dev/sda')
#
# Install GRUB2 on the Master Boot Record (MBR) of the passed unmounted disk.
install_grub2() {
    # Localize and validate passed arguments.
    die_unless_at_most_one_arg 'expected one device filename'
    string device_filename="${1:-/dev/sda}"
#   die_unless_unmounted_disk "${device_filename}"

    # Interactively confirm. 
    ask_bool_harder\
        "really overwrite the Master Boot Record (MBR) of \"${device_filename}\" with GRUB2?" or
        return

    # Install GRUB2.
    mount_writable_boot_dir
    grub2-install "${device_filename}"
}

# ....................{ UPDATES                            }....................
# void update_grub2(void)
#
# Update the current kernel, initramfs, and GRUB2 installation to reflect
# recent system changes (e.g., kernel upgrades). Specifically, in order: 
# 
# * Rebuild and reinstall the current kernel (e.g., "/usr/src/linux") to
#   "/boot/kernel-${kernel_version}".
# * Reinstall the current initramfs (defined by ${ZESHY_INITRAMFS_HOME}) to
#   "/boot/initramfs-${kernel_version}.img", if such directory exists.
# * Update the GRUB2 configuration file "/boot/grub2/grub.cfg" accordingly.
update_grub2() {
    die_if_args
#   interactively utter 'updating "/boot"...'

    # Update kernel installation.
    update_kernel

    # Update initramfs installation, if available.
    is_dir "${ZESHY_INITRAMFS_HOME}" and {
        utter_blank_line
        update_initramfs
    }

    # Update GRUB2.
    utter_blank_line
    update_grub2_config_file
}

# void update_grub2_config_file(void)
#
# Update the GRUB2 configuration file on the "/boot" partition to reflect the
# set of all currently installed scripts and kernel and initramfs images.
update_grub2_config_file() {
    # Mount the "/boot" partition writably.
    die_if_args
    mount_writable_boot_dir

    # Update the GRUB2 configuration file.
    string grub2_config_file='/boot/grub2/grub.cfg'
    interactively utter "updating \"${grub2_config_file}\"..."
    grub2-mkconfig -o "${grub2_config_file}"
}

#FIXME: Obsolete.
# Update the GRUB2 installation on the "/boot" partition or install GRUB2 on
# such partition if not previously with the current GRUB2 configuration.
# provides a one-stop-shop to
# updating the system after a change (e.g., 
# machine to reflect recent kernel, initramfs,
# and/or GRUB2 changes (e.g., kernel upgrades).
#
# Update the GRUB2 configuration file and install all images such file expects.
#
# Specifically, in order: 
# Assuming the current kernel, optional initramfs, and GRUB2 installation to be
# properly configured, this function seemlessly updates the current machine to reflect
# recent changes (e.g., kernel upgrades, initramfs edits).

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
