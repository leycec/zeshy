#!/usr/bin/env zsh
# ====================[ rsync                              ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy rsync.

# ....................{ SYNCHRONIZING                      }....................
# void rsync_safely(
#   char *source_uri, char *target_uri, char *option1, char *option2, ...)
#
# Synchronize the passed source URI to the passed target URI with "rsync",
# passing the ZESHY_RSYNC_OPTIONS* family of default options supplemented by the
# passed custom options. If running under an interactive shell, interactively
# list and require the current user confirm such changes prior to permanently
# doing so.
#
# "rsync" can behave unintentionally destructively under certain options (e.g.,
# "--delete"). As a precaution against potentially catastrophic, large-scale
# deletion, we recommend users always test "rsync" commands interactively.
rsync_safely() {
    die_unless_at_least_two_arguments\
        'expected one source URI, one target URI, and optional "rsync" options'

    # Source and target URIs, suffixing the former with a backslash if not
    # already to satisfy "rsync" stipulations. See <USAGE> for "man rsync".
    string source_uri="$(suffix_if_not_already "${1}" '/')"; shift
    string target_uri="${1}"; shift

    # List of "rsync" options constructed from default and passed options.
#   list rsync; rsync=( 'rsync' "${ZESHY_RSYNC_OPTIONS[@]}" "${@}" )

    # If the current shell is interactive, interactively list and require the
    # current user confirm all filesystem changes to be performed prior to
    # permanently doing so.
    #
    # Run "rsync" deprioritized to avoid resource starvation of other processes.
    if is_interactive; then
        rsync+=( "${ZESHY_RSYNC_OPTIONS_IF_SHELL_INTERACTIVE[@]}" )

        # List all filesystem changes to be performed.
        utter "${source_uri} -> ${target_uri}  {dry run}"
        deprioritize rsync "${rsync[@]}" --dry-run "${source_uri}" "${target_uri}"
    
        # Interactively confirm such changes.
        ask_bool\
            "really synchronize \"${source_uri}\" to \"${target_uri}\" "\
            "as above?" or return_failure

        # Commit such changes.
        utter "${source_uri} -> ${target_uri}"
        deprioritize "${rsync[@]}" "${source_uri}" "${target_uri}"
    # Otherwise, commit such changes without interactive verification. (Unsafe!)
    else
        utter "${source_uri} -> ${target_uri}"
        deprioritize\
            "${rsync[@]}" "${ZESHY_RSYNC_OPTIONS_IF_NOT_SHELL_INTERACTIVE[@]}"\
            "${source_uri}" "${target_uri}"
    fi
}

#FIXME: Obsolete.
    #FIXME: Generalize this for use elsewhere. Specifically, use the
    #deprioritize() function of "always/process".
    # If "nice" and/or "ionice" are installed, run "rsync" under whichever are
    # available to prevent CPU and hard-drive starvation.
#   is_installed nice   and rsync=(   nice -n19    "${rsync[@]}" )
#   is_installed ionice and rsync=( ionice -c2 -n7 "${rsync[@]}" )

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
