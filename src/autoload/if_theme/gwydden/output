#!/usr/bin/env zsh
# ====================[ gwydden/output                     ]====================
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Gwydden Output, theming standard output and error.
#
# --------------------( TODO                               )--------------------
# * Theme support really needs to be tightened up. Ideally, all themes should
#   implicitly inherit from "gwydden": which is to say that all theme function
#   implementations should auto-default to the "gwydden" implementation unless
#   implemented by such theme. Fortunately, doing so is pretty simple. Move the
#   "if_theme/gwydden" to "always/theme". Add a new "if_theme/vanilla" theme
#   with empty contents. Then, theme functions implicitly default to their core
#   "always/theme" implementations until overriden by theme-specific functions.
# * Theme support requires a new user-specific "~/.zeshy/theme/" directory
#   containing user-installable themes. For clarity, we should probably shift
#   "~/.zeshy/{completion,compinit,digest.zwc}" to a new "~/.zeshy/cache/"
#   directory. Then, anything under "~/.zeshy" NOT under "~/.zeshy/cache/" is
#   user-configurable. Simple. Hmmm. Interesting. For forward-compatibility,
#   how about a "~/.zeshy/autoload/if_theme/" directory structure instead? The
#   beauty of this setup is that it directly, cleanly "overlays" Zeshy's
#   existing system-wide directory structure. Zeshy should implicitly create
#   such structure where not already found, for safety. Sweeet.

# ....................{ PRINTERS                           }....................
# char *utter_banner(void)
#
# Print a single-line banner to standard output demarcating subsequent from
# prior lines. 
utter_banner() {
    die_unless_no_args

    # Empty local variable, required to avoid "parameter not set" errors below.
    string placeholder

    # Dismantled, this is:
    #
    # * "(l:..::..:)", expanding to the second argument padded (i.e., repeated)
    #   to the length specified with the first argument.
    print ${(l:$(get_terminal_width)::=:)placeholder}
}

# ....................{ PRINTERS ~ newlines                }....................
# void utter_no_newline(char *string1, char *string2, ...)
#
# Print the passed message to standard output with no default trailing newline.
utter_no_newline() {
    # Capture command substitution output in a definition to signal TRAPZERR on 
    # command failure.
    string text; text="$(get_script_name): ${@}"
    utter_no_newline_raw "${text}"

    #FIXME: Nonsensical. Obliterate all reference to "ZESHY_IS_CRONJOB"
    #everywhere.
    #and, if a cron job, the notice stream of cron's logging facility
#   is_set ZESHY_IS_CRONJOB and logger -p cron.notice -- "${message}"
}

# void curse_no_newline(char *string1, char *string2, ...)
#
# Print the passed message to standard error with no default trailing newline.
curse_no_newline() {
    # Capture command substitution output in a definition to signal TRAPZERR on 
    # command failure.
    string text; text="$(get_script_name): ${@}"
    curse_no_newline_raw "${text}"
}

#FIXME: Obsolete.
#FIXME: Rename utter_no_newline() to utter_newlinelessly(), perhaps?

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
