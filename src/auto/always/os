#!/usr/bin/env zsh
# ====================[ os                                 ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy OS, implementing operating system-handling functionality.

# ....................{ GETTERS                            }....................
#FIXME: Hmm; I could quite see the caller wanting the original name, as well.
# void get_os_name(void)
#
# Get the canonicalized name of the current operating system. This name is
# strictly lowercase with backslashes replaced by dashes and hence suitable for
# use in pathnames: e.g.,
#
#     >>> get_os_name
#     freebsd   # under FreeBSD systems
#     gnu-linux # under GNU/Linux systems
get_os_name() {
    # "uname" reports Linux as "GNU/Linux", so replace backslashes with dashes.
    print "${$(to_lowercase "$(uname -o)")//\//-}"
}

# void get_os_distribution_name(void)
#
# Get the strictly lowercase name of the currently installed distribution: e.g.,
#
#     >>> get_os_distro_name
#     debian    # under Debian systems
#     gentoo    # under Gentoo systems
get_os_distro_name() {
    if   is_file '/etc/exherbo-release'
    then echo 'exherbo'
    elif is_file '/etc/gentoo'
    then echo 'gentoo'
    else get_os_name
    fi
}

# ....................{ KERNEL                             }....................
#FIXME: Implement! Should, in order:
#* Accept either an absolute or relative pathname. If absolute, is assumed to be
#  a "tar.bz2" archive having the kernel to be upgraded to; otherwise, to be the
#  basename of a directory under "/usr/src/". In the former case, transparently
#  unpack that archive into "/usr/src/", without overwriting any existing data.
#* Copy the "/usr/src/linux/.config" file, if present, into the new kernel dir.
#* Cd to the new kernel dir.
#* Run "make oldconfig".
#* If successful, forcefully overwrite the "/usr/src/linux" symlink.
#* Cd back.

# void upgrade_kernel(char *kernel_name)
#upgrade_kernel() {
#}
# ....................{ OS ~ undefined                     }....................
#FIXME: Nice, but currently unused. Uncomment when adding support for non-Linux
#POSIX-compatible systems.
# The following functions are OS-specific, and thus defined for each OS-specific
# Zeshy component, elsewhere. By default, each dies with error.

# char *get_current_process_basename(void)
#
# Get the basename of the binary corresponding to the current process.
#get_current_process_basename() { die "unimplemented on $(get_os_name)" }

# char *get_current_process_command_line(void)
#
# Get the command line under which the current process is executing. This is a
# single string having these parts:
#
# * Absolute OR relative path to the executable file from which the process was
#   executed. Note that, in the latter case, there is no reliable mechanism for
#   converting the relative path into an absolute path.
#
# Due to the above unreliabilities, this string is best used for displaying non-
# critical log and user interface labels rather than critical functionality.
#get_current_process_command_line() { die "unimplemented on $(get_os_name)" }
 
#FIXME: Obsolete.
    #FIXME: Alternate implementations; keep around!
    #echo $(match_multiline '^Mem:\s+(\d+)' "$(free -bt)")
    #$(cat '/proc/meminfo' | awk -F '[ ]+' '/^MemTotal/ { print $2 }')

#   string os_name="$(to_lowercase "$(uname -o)")"
#   os_name="${os_name//\//-}"
#   print "${os_name}"
    
# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
