#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *split alias definers* (i.e., functions dynamically defining alias-like
runnables split into two or three low-level aliases, the former typically
accepting one or more passed arguments operated on by the latter).
/---

# ....................{ DEFINERS                           }....................
#FIXME: Improve documentation!
declare_function_with_stdin <<'/---'
void :define_alias_split(string alias_name, string alias_expansion)

Define the passed *split alias* (i.e., alias-like runnable split into two or
three low-level aliases, the former accepting one or more passed arguments
operated on by the latter) to expand to the passed alias expansion. If such
alias has already been declared, an exception is thrown.
/---
function :define_alias_split() {
    # Validate sanity.
    die_unless_args_2 'Expected one alias name and one alias expansion.'
    :string alias_name__dam="${1}"

#    alias ":for_string_text_matching_pcre_start~{"='
#       :alias_global "}~"="
#           } always ~{
#               :undefine_alias \"}~\""
#           }:
#
#           :die_unless_str_nonempty pcre__fstmpb 'Expected non-empty PCRE.'
#           :string MATCH
#           :list match
#           pcre_compile -- "${pcre__fstmpb}"
#           pcre_study
#           :string ZPCRE_OP='0 0'
#           while { pcre_match -b -n ${ZPCRE_OP[(w)2]} -- "${text__fstmpb}" } {"
#
#       # This is the cool part. The call to :set_strings_to_strings() *MUST* be
#       # the last line of this alias, which, when appended by the caller's
#       # passed arguments, will set the desired variables. Naturally, we need
#       # define such function, but it shouldn't be terribly hard. Here is what
#       # a complete expansion of the last line looks like (post-expansion!):
#       #
#       #     :set_strings_to_strings text__fstmpb pcre__fstmpb -- "test string" "\s++(str)"
#       #
#       # Also, we protect such call with a :try block, guaranteeing. This
#       # means we do *NOT* need to modify our existing exception handler make
#       # sure that alias "}~" has been undefined.
#       :try {
#           :string              text__fstmpb pcre__fstmpb
#           :set_strings_to_args text__fstmpb pcre__fstmpb --'
#    alias :for_string_text_matching_pcre_stop='
#           }'
}

# --------------------( WASTELANDS                         )--------------------
