#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *syntactic aliases* (i.e., aliases simulating `zeshy`-specific syntax
additions to the core `zsh` language).
/---

#FIXME: Actually use such alias elsewhere.
#FIXME: Add examples.

:alias_simple.declare ':void :unless()' 'if !' <<'/---'
Unless all subsequent tests succeed (i.e., if all such tests fail), execute the
subsequent code block.
/---

# ....................{ CASE                               }....................
#FIXME: Rename to :case.break().

:alias_simple.declare ':void :break_case()' ';;' <<'/---'
Break from the current `case` statement (i.e., immediately terminate such
statement). Expand this alias _only_ as the last command in `case` statement
conditions: e.g.,

.:break_case()
==========================================
[source]
------------------------------------------
>>> :string on_living=\
...    "Don't mistake anything for reality. 'What have you seen in your
...     travels?' was asked of Sage Evemere. 'Follies!' was the reply. 'Follies,
...     follies everywhere!' We never live; we are always in the expectation of
...     living."
>>> case "${on_living}" {
... (*v?m?r*)
...     :output_string\
...         "It must be obvious... that there is a contradiction in wanting to
...          be perfectly secure in a universe whose very nature is
...          momentariness and fluidity."
...     :break_case
... (*r?m?v*)
...     :output_string\
...         "The greater part of human activity is designed to make permanent
...          those experiences and joys which are only lovable because they are
...          changing."
...     :break_case
... }
It must be obvious... that there is a contradiction in wanting to
be perfectly secure in a universe whose very nature is
momentariness and fluidity.
------------------------------------------
==========================================
/---

# --------------------( WASTELANDS                         )--------------------
#FUXME: Rename to :break_case(), which is considerably more evocative of what
#such alias accomplishes. (Also, we prefer "stop" to "end" in zeshy
#nomenclature. Using "stop" here, however, would imply such alias to
#syntactically terminate the entire case() block, which isn't the case.)

# :alias_simple.declare\
#     'void :for_string(string string_name, string code1, ...)'\
#     '{
#         # Localize such string.
#         :string string_name__fs; string_name__fs="$(get_stdin)"
#         :string "${string_name__fs}"
#     } <<<' <<'/---'
# Terminate the current `case` statement. Expand this alias _only_ in `case`
# statement conditions, typically as the last command in such conditions: e.g.,
# /---

#Break from the currently matched condition of the current `case` statement. This
#is typically the last command in every such condition of most : e.g.,

# *`zsh` subshell* (i.e., child shells forked from other shells, typically
# using `(...)` and `$(...)` syntax) aliases.
