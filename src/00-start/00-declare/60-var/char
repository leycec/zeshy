#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *character variable declarators* (i.e., aliases declaring string variables
of length 1).
/---

#FIXME: Rename "character" to "char".

# ....................{ DECLARATORS                          }....................
:alias_simple.declare 'void :char(string variable_name1, ...)'\
    'string' <<'/---'
Declare the passed character variables locally, initialized to the following `=`-
delimited character if specified or to the empty string otherwise.

== Caveats ==

Due to `zsh` constraints and as in numerous other languages (e.g., JavaScript,
Python), *characters are indistinguishable from strings.* Since explicitly
declaring characters as such improves clarity, (possible) forwards compatibility,
and symmetry with existing types, consider declaring characters as such rather
than as strings.
/---

#FIXME: Excise after replacing with the prior alias everywhere.
:alias_simple.declare 'void character(string variable_name1, ...)'\
    'string' <<'/---'
Declare
/---

:alias_simple.declare 'void character_global(string variable_name1, ...)'\
    'string_global' <<'/---'
Declare the passed character variables globally _not_ exported to the calling
shell. See :char() for further details.
/---

:alias_simple.declare\
    'void character_global_export(string variable_name1, ...)'\
    'string_global_export' <<'/---'
Declare the passed character variables globally exported to the calling shell.
See :char() for further details.
/---

# ....................{ DECLARATORS ~ constant               }....................
:alias_simple.declare\
    'void :char_const(string variable_name1, ...)'\
    ':str_const' <<'/---'
Declare the passed character constants locally, defined to the following `=`-
delimited character if specified or to the empty string otherwise. If such
constant is (attempted to be) redefined, an exception is thrown. See :char() for
further details.
/---

:alias_simple.declare\
    'void character_constant_global_export(string variable_name1, ...)'\
    'string_constant_global_export' <<'/---'
Declare the passed character constants globally exported to the calling shell.
See :char_const() for further details.
/---

# --------------------( WASTELANDS                         )--------------------
