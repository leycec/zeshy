#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Handle *map variable declarators* (i.e., aliases declaring associative array,
also referred to as *hash map* and *table*, variables). Such variables are
subject to similar caveats and limitations as list variables. See @{list} for
further details.
/---

# ....................{ MAPS                               }....................
# Due to current inadequacies in zsh, maps must be externally initialized: e.g.,
#
#     >>> map hash_map; hash_map=( 'key 1' 'value 1' 'key 2' 'value 2' )

:alias_command.declare\
    'void map(str var_name1, ...)'\
    'local -A --' <<'/---'
Declare
/---

:alias_command.declare\
    'void map_global(str var_name1, ...)'\
    'typeset -Ag --' <<'/---'
Declare the passed map variables globally _not_ exported to the calling shell.
See :map() for further details.
/---

# --------------------( WASTELANDS                         )--------------------
# Handle *map* (i.e., associative array) variable declarators. See @{list} for
# further details on limitations related to such declarators.

#:alias_command.declare <<'/---'
#void map_global_export(string var_name1, string var_name2, ...)
#
#Declare the passed *map* (i.e., associative array) globally exported to the
#calling shell.
#/---
## While "export -a" succeeds, "export -A" oddly fails with error. *shrug*
#alias map_global_export='typeset -Agx'
