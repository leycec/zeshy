#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

:parcel <<'/---'
Document all globals, functions, and aliases declared by ={*-set/prototype}.
/---

# ....................{ SETTERS                            }....................
:func.document <<'/---'
:void ::callable_prototype.set_name_of_label(
    :string runnable_prototype,
    ^:string string_name,
    :string runnable_label)

Set the passed string variable to the single runnable name declared by the
passed *runnable prototype* (i.e., string documenting a function or alias
signature -- including attributes, return types, names, and argument types and
order -- in machine-readable format akin to that of conventional C function
prototypes), prefixing all thrown exception messages by the passed human-
readable label describing such type of runnable. If such prototype declares
more than one name (e.g., via `{...,...}` syntax), an exception is thrown.
/---

# --------------------( WASTELANDS                         )--------------------
# ....................{ OBSOLETE                           }....................
#FUXME: Obsolete. Excise me.
# 
# :func.document <<'/---'
# void set_list_and_map_to_runnable_prototype_name_or_names:(
#     string list_name,
#     string map_name,
#     string matched_runnable_name,
#     string matched_runnable_names)
# 
# Set the passed list to all runnable names in the passed string of single or
# multiple runnable names, presumably matched from the prototype of an alias or
# function help string. For each such runnable name, add a new key-value pair to
# the passed map mapping such name to the first such name in such string. This
# function is a helper parser intended to be called _only_ by runnable declarators
# (e.g., declare_alias(), declare_function()).
# /---
# 
# :func.document <<'/---'
# :void run_runnable_with_stdin[
#     args =  (:string runnable_name, :string arg1, ...),
#     stdin = (:string input)]
# 
# Run the passed *runnable* (i.e., alias, function, command), passing such
# function first all passed arguments in the passed order and finally all standard
# input to this function as a single argument. For safety, this function closes
# such input immediately after running such runnable: e.g.,
# 
# .run_runnable_with_stdin()
# ==========================================
# [source]
# ------------------------------------------
# >>> :string on_commodities=\
# >>> :string.output "${on_commodities}" | run_runnable_with_stdin head -2 -
# In proportion as the bourgeoisie, i.e., capital, is developed, in the
# same proportion is the proletariat, the modern working class, developed
# ------------------------------------------
# ==========================================
# /---
