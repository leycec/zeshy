#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2013 by Cecil Curry.
# See "COPYING" for additional details.

declare_parcel_as_script_with_stdin <<'/---'
Document all globals, functions, and aliases declared by @{*-test/var}.
/---

# ....................{ EXCEPTIONS                         }....................
:func.document <<'/---'
:void :var.die_unless_type_bool(^:string var_name1, ...)

Throw an exception unless all passed variables are existing booleans. See
:var.is_type_bool().
/---

:func.document <<'/---'
:void :var.die_unless_type_char(^:string var_name1, ...)

Throw an exception unless all passed variables are existing characters. See
:var.is_type_char().
/---

:func.document <<'/---'
:void :var.die_unless_type_float(^:string var_name1, ...)

Throw an exception unless all passed variables are existing floats. See
:var.is_type_float().
/---

:func.document <<'/---'
:void :var.die_unless_type_int(^:string var_name1, ...)

Throw an exception unless all passed variables are existing integers. See
:var.is_type_int().
/---

:func.document <<'/---'
:void {:var.die_unless_type_list, :list.die_unless}(^:string var_name1, ...)

Throw an exception unless all passed variables are existing lists. See
:list.is().
/---

:func.document <<'/---'
:void {:var.die_unless_type_map, :map.die_unless}(^:string var_name1, ...)

Throw an exception unless all passed variables are existing maps. See
:map.is().
/---

:func.document <<'/---'
:void :var.die_unless_type_string(^:string var_name1, ...)

Throw an exception unless all passed variables are existing strings. See
:var.is_type_string().
/---

# ....................{ EXCEPTIONS ~ metatype              }....................
:func.document <<'/---'
:void :var.die_unless_type_number(^:string var_name1, ...)

Throw an exception unless all passed variables are existing numbers. See
:var.is_type_number().
/---

:func.document <<'/---'
:void :var.die_unless_type_scalar(^:string var_name1, ...)

Throw an exception unless all passed variables are existing scalars. See
:var.is_type_scalar().
/---

# ....................{ TESTERS                            }....................
:func.document <<'/---'
[status = :bool] :var.is_type_bool(^:string var_name1, ...)

Report success if all passed variables are existing booleans. If any such
variable does _not_ exist, an exception is thrown.
/---

:func.document <<'/---'
[status = :bool] :var.is_type_char(^:string var_name1, ...)

Report success if all passed variables are existing characters. If any such
variable does _not_ exist, an exception is thrown.
/---

:func.document <<'/---'
[status = :bool] :var.is_type_float(^:string var_name1, ...)

Report success if all passed variables are existing floats. If any such
variable does _not_ exist, an exception is thrown.
/---

:func.document <<'/---'
[status = :bool] :var.is_type_int(^:string var_name1, ...)

Report success if all passed variables are existing integers. If any such
variable does _not_ exist, an exception is thrown.
/---

:func.document <<'/---'
[status = :bool] {:var.is_type_list, :list.is}(^:string var_name1, ...)

Report success if all passed variables are existing lists. If any such variable
does _not_ exist, an exception is thrown.
/---

:func.document <<'/---'
[status = :bool] {:var.is_type_map, :map.is}(^:string var_name1, ...)

Report success if all passed variables are existing maps. If any such variable
does _not_ exist, an exception is thrown.
/---

:func.document <<'/---'
[status = :bool] :var.is_type_string(^:string var_name1, ...)

Report success if all passed variables are existing strings. If any such
variable does _not_ exist, an exception is thrown.
/---

# --------------------( WASTELANDS                         )--------------------
# ....................{ TESTERS ~ private                  }....................
# :func.document <<'/---'
# [status = :bool] :var.is_type_matches_glob(
#     ^:string var_name1, ...,
#     :glob type_glob)
# 
# Report success if the types of all passed variables match the passed glob. If
# any such variable does _not_ exist, an exception is thrown.
# /---
