#!/usr/bin/env zeshy

:parcel <<'/---'
Configure core `zeshy` settings.
/---

# ....................{ PATHS                              }....................
#FIXME: This only applies to Linux and hence should be shifted to a new
#conditional configuration file "src/if_os/linux/if_config/os/linux".
:str.global ZY_INITRAMFS_HOME='/usr/share/initramfs' <<'/---'
Absolute path of the directory containing the system-wide initramfs to be
installed by the *_initramfs*() functions, by default. This path is safely
ignorable, even if calling such functions.
/---

# ....................{ EXCEPTION                          }....................
#FIXME: Awkward nomenclature. Consider renaming to
#${ZY_EXCEPTION_UNCAUGHT_IS_PRINT_CALL_STACK} and likewise below.

:bool.global\
    ZY_IS_PRINTING_EXCEPTION_UNCAUGHT_CALL_STACK=${ZY_BOOLEAN_TRUE} <<'/---'
If true, print a full stack trace whenever:

* Any alias, function, or script throws an uncaught exception.
* Any alias, function, script, or external command returns unhandled failure
  (i.e., non-zero exit status _not_ handled with an `if`, `and`, or `or`
  conditional).

Consider enabling this boolean when submitting `zeshy` bug reports.
/---

:bool.global\
    ZY_IS_PRINTING_EXCEPTION_UNCAUGHT_CALL_SOURCE=${ZY_BOOLEAN_FALSE} <<'/---'
If true, print the implementation of any alias, function, or script throwing an
uncaught exception or returning unhandled failure (i.e., non-zero exit status
_not_ handled with an `if`, `and`, or `or` conditional). If such implementation
is sufficiently large (e.g., more than 32 lines), print only the exact line of
such implementation originating error and several prior and subsequent lines of
context.

Consider enabling this boolean when submitting `zeshy` bug reports.
/---
if { :debug.is } {
    ZY_IS_PRINTING_EXCEPTION_UNCAUGHT_CALL_SOURCE=${ZY_BOOLEAN_TRUE}
}

:bool.global\
    ZY_IS_PRINTING_EXCEPTION_UNCAUGHT_HELP=${ZY_BOOLEAN_FALSE} <<'/---'
If true, print help documentation whenever:

* Any alias, function, or script throws an uncaught exception.
* Any alias, function, script, or external command returns unhandled failure
  (i.e., non-zero exit status _not_ handled with an `if`, `and`, or `or`
  conditional).
/---
