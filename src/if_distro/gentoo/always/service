#!/usr/bin/env zsh
# ====================[ service                            ]====================
#
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2012 by Cecil Curry.
# See "COPYING" for additional details.
#
# --------------------( SYNOPSIS                           )--------------------
# Zeshy Gentoo Service, handling Gentoo services and runlevels.
#
# --------------------( TODO                               )--------------------
# * It would be helpful to add support for systemd-style services. Hmm...

# ....................{ ALIASES                            }....................
interactive_alias rca='add_gentoo_service_to_runlevel'
interactive_alias rcr='remove_gentoo_service_from_runlevel'
interactive_alias rcs='start_gentoo_service'
interactive_alias rco='stop_gentoo_service'
interactive_alias rcl='print_gentoo_services'

# ....................{ GETTERS                            }....................
# string get_gentoo_service_home(void)
#
# Get the absolute path of the directory with Gentoo services.
get_gentoo_service_home() {
    #FIXME: I have no idea how to account for Gentoo Prefix, here and elsewhere.
    die_if_args
    string service_home='/etc/init.d'
    die_unless_dir "${service_home}"
    print_string "${service_home}"
}

# string get_gentoo_service_file(string service_name)
#
# Get the absolute path of the Gentoo service with the passed name.
get_gentoo_service_file() {
    die_unless_arg 'expected one service name'
    string service_file; service_file="$(get_gentoo_service_home)/${1}"
    die_unless_file "${service_file}"
    print_string "${service_file}"
}

# ....................{ PRINTERS                           }....................
# string print_gentoo_services(void)
#
# Print a human-readable synopsis of Gentoo services and runlevels.
print_gentoo_services() {
    die_if_args
    string is_color_terminal
    is_color_terminal and\
        is_color_terminal='yes' or
        is_color_terminal='no'
    run_paged eselect --colour=${is_color_terminal} rc show --all --unused
}

# ....................{ SETTERS                            }....................
# void add_gentoo_service_to_runlevel(
#   string service_name, string runlevel1, string runlevel2, ...)
#
# Add the passed Gentoo service to the passed runlevels (defaulting to
# "default", the customary runlevel).
add_gentoo_service_to_runlevel() {
    die_unless_args\
        'expected one service name and optional runlevels'
    eselect rc add "${@}"
}

# void remove_gentoo_service_from_runlevel(
#   string service_name, string runlevel1, string runlevel2, ...)
#
# Remove the passed Gentoo service from the passed runlevels (defaulting to
# "default", the customary runlevel).
remove_gentoo_service_from_runlevel() {
    die_unless_args\
        'expected one service name and optional runlevels'
    eselect rc delete "${@}"
}

# ....................{ RUNNERS                            }....................
# void start_gentoo_service(string service_name1, string service_name2, ...)
#
# Start the passed Gentoo services, implicitly stopping before starting such
# services if currently running.
start_gentoo_service() {
    die_unless_args 'expected at least one service name'
    eselect rc restart "${@}"
}

# void stop_gentoo_service(string service_name1, string service_name2, ...)
#
# Stop the passed Gentoo services.
stop_gentoo_service() {
    die_unless_args 'expected at least one service name'
    eselect rc stop "${@}"
}

# --------------------( WASTELANDS                         )--------------------
#   print "color: ${is_color_terminal}"
#   rc-update --verbose show
