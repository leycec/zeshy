#!/usr/bin/env zsh
# --------------------( LICENSE                            )--------------------
# Copyright 2007-2015 by Cecil Curry.
# See "LICENSE" for additional details.

:parcel <<'-/-'
Handle disk partitions.
-/-

# ....................{ PRINTERS                           }....................
:func.doc <<'/---'
string print_disk_partition(
    string device_filename1, string device_filename2, ...)

Print the partition table for each passed disk device.
/---
function print_disk_partition() {
    die_unless_args 'expected at least one device filename'
    die_unless_pathable fdisk
    command fdisk -l -- "${@}"
}

:func.doc <<'/---'
string print_disk_partitions()

Print the partition table for all available disk devices (e.g., as listed by
`/proc/partitions`).
/---
function print_disk_partitions() {
    die_if_args
    die_unless_pathable fdisk
    command fdisk -l
}

# ....................{ WRITERS                            }....................
:func.doc <<'/---'
void copy_disk_partition_table_to_disk(
    string source_device_filename, string target_device_filename)

Destructively copy the partition table from the first to second passed disk
device, permanently deleting the partition table of the latter. Since this
renders data on such disk inaccessible and hence effectively deleted, this
function requires the current user interactively confirm such copy.
/---
function copy_device_partition_table_to_device() {
    # Validate passed arguments.
    die_unless_args_2\
        'expected one source device filename and one target device filename'
    string device_file_source="${1}" device_file_target="${2}"
    die_unless_pathable sfdisk\
        '"sfdisk" required for partition table cloning'
    die_unless_disk "${device_file_source}"
    die_unless_disk "${device_file_target}"

    # If the current user interactively agrees, copy such table.
    if { is_query_line_yes\
        "really clone partition table from \"${device_file_source}\" to \"${device_file_target}\"?" } {
        command sfdisk -d -- "${device_file_source}" |
        command sfdisk -- "${device_file_target}"
    }
}

# --------------------( WASTELANDS                         )--------------------
