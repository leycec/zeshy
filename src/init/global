#!/usr/bin/env zsh
# ====================[ globals                            ]====================
#                     [ Time-stamp: "2009-04-18 19:29:36 leycec" ]
#
# --------------------( SYNOPSIS                           )--------------------
# ZeshyInit Globals, declaring globals of universal applicability to most other
# Zeshy components and scripts.

# ....................{ BOOLEANS                           }....................
# If non-empty, the current process is running as a cronjob. (Set below.)
global_bool ZESHY_IS_CRONJOB

# ....................{ INTEGERS                           }....................
# "nice"-specific highest and lowest priority for CPU scheduling of processes.
global_integer ZESHY_NICENESS_HI='-20' ZESHY_NICENESS_LO='19'

# "ionice"-specific highest and lowest priority pairs consisting of class and
# ioniceness for I/O scheduling of processes. Processes assigned to class 3
# signify "idle-only" processes to be scheduled only when no other process
# performs I/O. Since such processes are likely to suffer scheduling starvation,
# we omit class 3 from consideration.
global_integer\
    ZESHY_IONICE_CLASS_HI='1' ZESHY_IONICE_CLASS_LO='2'\
    ZESHY_IONICENESS_HI='0'   ZESHY_IONICENESS_LO='7'

# 1KB, 1MB, 1GB, and 1TB as base 2 rather than metric (i.e., base 10) integers.
global_integer\
    KB=$(( 1 << 10 ))\
    MB=$(( 1 << 20 ))\
    GB=$(( 1 << 30 ))\
    TB=$(( 1 << 40 ))

# ....................{ PATHS                              }....................
# Directory to which Zeshy caches metadata. If "${HOME}" is the root directory,
# this is probably a cronjob, in which case this directory must reside under
# "/var"; otherwise, this is the typical user-specific dot directory.
if [[ "${HOME}" == '/' ]]
then global_string ZESHY_DOTDIR="/var/cache/zeshy"
else global_string ZESHY_DOTDIR="${HOME}/.zeshy"
fi

# Directory hosting the Zeshy codebase.
global_string ZESHY_SOURCE_DIR="${ZESHY_HOME}/src"

# Directory hosting the autoloadable subset of the Zeshy codebase.
global_string ZESHY_AUTOLOAD_DIR="${ZESHY_SOURCE_DIR}/auto"

# Directories hosting the core and command- and theme-specific autoloadable
# subsets of the Zeshy codebase.
global_string\
    ZESHY_AUTOLOAD_CORE_DIR="${ZESHY_AUTOLOAD_DIR}/always"\
    ZESHY_AUTOLOAD_COMMAND_DIR="${ZESHY_AUTOLOAD_DIR}/if_installed"\
    ZESHY_AUTOLOAD_THEME_DIR="${ZESHY_AUTOLOAD_DIR}/if_theme"

# ....................{ PATHS ~ system                     }....................
# Directory to which Zeshy mounts media.
global_string ZESHY_MOUNT_HOME='/media'

# Directory to which Zeshy mounts ISOs.
global_string ZESHY_MOUNT_ISO_PATH="${ZESHY_MOUNT_HOME}/iso"

# ....................{ PATHS ~ user                       }....................
# File configuring Zeshy.
global_string ZESHY_CONFIG_FILE="${ZESHY_DOTDIR}/config"

#FIXME: Document. 
global_string ZESHY_DIGEST_DIR="${ZESHY_DOTDIR}/digest"
global_string ZESHY_DIGEST_FILE="${ZESHY_DOTDIR}/digest.zwc"

# Directory to which Zsh caches completions.
global_string ZESHY_CACHE_COMPLETION_DIR="${ZESHY_DOTDIR}/completion"

# File to which compinit() caches its configuration. 
global_string ZESHY_CACHE_COMPINIT_FILE="${ZESHY_DOTDIR}/compinit"

# ....................{ STRINGS                            }....................
#FIXME: Erhm; I suspect the following global to be largely obsolete, now. (Or,
#at best, only applicable to Zeshy scripts requiring require().)
# Basename for all "main" Zeshy scripts. These are scripts Zeshy looks for when
# a caller attempts to import a path rather than a file: e.g.,
#
#     # Actually imports "zeshy/${ZESHY_MAIN_SCRIPT_BASENAME}", instead.
#     >>> zimport zeshy
global_string ZESHY_MAIN_SCRIPT_BASENAME='.main'

# ....................{ CONFIGURATION                      }....................
# Zeshy configuration settings, set on sourcing the system- and user-specific
# Zeshy configuration file below.
global_bool\
    ZESHY_IS_DEVELOPMENT
global_string\
    ZESHY_THEME
global_list\
    ZESHY_GREP_OPTIONS\
    ZESHY_GREP_CASELESS_OPTIONS

# Zeshy configuration defaults. See documentation below.
string ZESHY_IS_DEVELOPMENT_default=
string ZESHY_THEME_default='gwydden'
string ZESHY_GREP_OPTIONS_default='(
    -1
    --color=always
    --exclude-dir=".cvs"
    --exclude-dir=".git"
    --exclude-dir=".svn"
    --extended-regexp
    --line-number
    --no-messages
    --with-filename
)'
string ZESHY_GREP_CASELESS_OPTIONS_default='(
    "${ZESHY_GREP_OPTIONS[@]}"
    --ignore-case
)'

# void set_default_configuration_setting(char *global_name)
#
# Set the global with the passed name to its default.
set_default_configuration_setting() {
    die_unless_one_argument 'expected exactly one global variable name'
    string global_name="${1}"
    string global_default_name="${global_name}_default"
    print "zeshy: configuration setting ${global_name} not found or invalid; "\
          "defaulting to \"${(P)global_default_name}\"" 1>&2
    eval "${global_name}=${(P)global_default_name}"
}

# ....................{ MAIN                               }....................
{
   # Make the Zeshy dot directory if not found.
    mkdir -p "${ZESHY_DOTDIR}" 

    # Make the Zeshy configuration if not found.
    if is not -f "${ZESHY_CONFIG_FILE}" si; then
        cat <<EOT > "${ZESHY_CONFIG_FILE}"
#!/usr/bin/env zsh
# ====================[ config                             ]====================
# ${USER}-specific Zeshy configuration.

# Command-line theme. Choices include:
#
# * "gwydden", the default Zeshy theme. (A commendably astute choice, kind Sir.)
global_string ZESHY_THEME="${ZESHY_THEME_default}"

# Case-sensitive grep options, respected only by Zeshy grep functions.
#
# Do not define "GREP_OPTION"! When defined, all invocations of grep use these
# options. However, most such invocations do not expect grep to emit line
# numbers, colors, or other colorful noise. They expect grep -- plain grep, no
# ornamentation. (Let us avoid breaking the entire system, shall we?)
global_list ZESHY_GREP_OPTIONS; ZESHY_GREP_OPTIONS=${ZESHY_GREP_OPTIONS_default}

# Case-insensitive grep options, respected only by Zeshy grep functions.
global_list ZESHY_GREP_CASELESS_OPTIONS; ZESHY_GREP_CASELESS_OPTIONS=${ZESHY_GREP_CASELESS_OPTIONS_default}

# Zeshy developer-specific boolean, "1" if this Zeshy installation is under
# development and "" otherwise. Enabling this boolean enables computationally
# expensive tests (e.g., digest synchronization, code profiling).
global_bool ZESHY_IS_DEVELOPMENT=${ZESHY_IS_DEVELOPMENT_default}
EOT
    fi

    # Load the Zeshy configuration.
    source "${ZESHY_CONFIG_FILE}"

    # Validate this configuration.
    is -f "${ZESHY_AUTOLOAD_THEME_DIR}/${ZESHY_THEME-}" si or
        set_default_configuration_setting 'ZESHY_THEME'
    for global_name (
        'ZESHY_GREP_OPTIONS'
        'ZESHY_GREP_CASELESS_OPTIONS'
        'ZESHY_IS_DEVELOPMENT'
    ) {
        is -n "${(P)global_name+x}" si or
            set_default_configuration_setting "${global_name}"
    }

    #FIXME: O.K.; technically, this works -- but not here, as we have yet to
    #autoload Zeshy. This is a fairly complex operation. (Can we reduce it to
    #more efficient Zsh builtins and ideally simply glob matching?)
    # Determine whether or not this process is running is a cronjob. This is
    # adapted from this itworld.com article, "Am I being run by cron?":
    #        http://www.itworld.com/Comp/3380/nls_unixcron041209/index.html
    # 
    # Do this prior to uttering imports, as the utter() function requires this.
#    string cron_pids="$(pgrep -x cron)"
#    integer grandparent_pid="$(ps -eo ppid,pid= | grep " ${PPID}$" | awk '{print $1}')"
#    ZESHY_IS_CRONJOB="$(one_if match_multiline "^${cron_pids}$" "${grandparent_pid}")"
#   echo "cron: ${ZESHY_IS_CRONJOB}; cron_pids: ${cron_pids}; gpid: ${grandparent_pid}"
}

#FIXME: Obsolete.
#is_empty "${ZESHY_SCRIPT_NAME}" and
# Human-readable name of the current script. This is used only for output.
# Scripts are welcome to redefine it globally; likewise, functions are welcome
# to redefine it locally. (Set below.)
#global_string ZESHY_SCRIPT_NAME

# Directory to which Zeshy caches scripts implicitly compiled by zimport().
#global_string ZESHY_CACHE_COMPILATION_DIR="${ZESHY_DOTDIR}/compilation"

# --------------------( COPYRIGHT AND LICENSE              )--------------------
# The information below applies to everything in this distribution,
# except where noted.
#              
# Copyright 2007-2012 by Cecil Curry.
#   
#   http://www.raiazome.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
